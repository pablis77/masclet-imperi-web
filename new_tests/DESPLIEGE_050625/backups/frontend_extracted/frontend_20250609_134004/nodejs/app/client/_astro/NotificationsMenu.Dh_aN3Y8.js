import{n}from"./notificationService.ZcbVzmKo.js";import"./vendor.CwhrWGr6.js";function h(){const l=document.getElementById("notifications-button"),r=document.getElementById("notifications-menu"),c=document.querySelector("#notifications-button .absolute"),d=document.querySelector("#notifications-menu .max-h-80"),u=document.getElementById("mark-all-read"),b=document.querySelector("#notifications-menu .font-bold");if(!l||!r||!c||!d||!u||!b){console.error("No se encontraron todos los elementos necesarios para las notificaciones");return}l.addEventListener("click",()=>{r.classList.toggle("hidden"),r.classList.contains("hidden")||i()}),document.addEventListener("click",e=>{!l.contains(e.target)&&!r.contains(e.target)&&r.classList.add("hidden")}),u.addEventListener("click",async()=>{await n.markAllAsRead(),i()});function p(e){const t=e.unread_count;c.textContent=t,t===0?c.classList.add("hidden"):c.classList.remove("hidden");const a=document.documentElement.lang||"es";b.textContent=a==="ca"?"Alertes del sistema":"Alertas del sistema",g(e.items)}function g(e){if(d.innerHTML="",e.length===0){const t=document.createElement("div");t.className="p-4 text-center text-gray-500 dark:text-gray-400",t.textContent=document.documentElement.lang==="ca"?"No hi ha notificacions":"No hay notificaciones",d.appendChild(t);return}e.forEach(t=>{const a=x(t);d.appendChild(a)})}function x(e){const t=document.createElement("div");t.className=`p-3 border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 ${e.read?"opacity-70":""}`;let a="bg-blue-100 dark:bg-blue-900/30",o="text-blue-600 dark:text-blue-400";switch(e.type){case"system":a="bg-amber-100 dark:bg-amber-900/30",o="text-amber-600 dark:text-amber-400";break;case"backup":a="bg-green-100 dark:bg-green-900/30",o="text-green-600 dark:text-green-400";break;case"animal":a="bg-blue-100 dark:bg-blue-900/30",o="text-blue-600 dark:text-blue-400";break;case"import":a="bg-purple-100 dark:bg-purple-900/30",o="text-purple-600 dark:text-purple-400";break}return t.innerHTML=`
      <div class="flex items-start">
        <div class="flex-shrink-0 ${a} p-2 rounded-full">
          <span class="${o} text-sm">${e.icon}</span>
        </div>
        <div class="ml-3 flex-1">
          <p class="text-sm font-medium text-gray-700 dark:text-gray-200">${e.title}</p>
          <p class="text-xs text-gray-500 dark:text-gray-400">${e.message}</p>
          <p class="text-xs text-gray-400 dark:text-gray-500 mt-1">${e.relative_time}</p>
        </div>
        <div class="ml-2 flex flex-col gap-1">
          <button class="mark-read-btn text-xs text-primary hover:text-primary-dark p-1" data-id="${e.id}" title="Marcar como leída">
            ${e.read?"✓":"👁️"}
          </button>
          <button class="delete-btn text-xs text-red-500 hover:text-red-700 p-1" data-id="${e.id}" title="Eliminar">
            🗑️
          </button>
        </div>
      </div>
    `,t.querySelector(".mark-read-btn").addEventListener("click",async s=>{s.stopPropagation();const m=parseInt(s.currentTarget.getAttribute("data-id"));await n.markAsRead(m),i()}),t.querySelector(".delete-btn").addEventListener("click",async s=>{s.stopPropagation();const m=parseInt(s.currentTarget.getAttribute("data-id"));await n.deleteNotification(m),i()}),t.addEventListener("click",async()=>{e.read||(await n.markAsRead(e.id),i()),f(e)}),t}function f(e){switch(r.classList.add("hidden"),e.type){case"animal":e.related_entity_id?window.location.href=`/animals/${e.related_entity_id}`:window.location.href="/animals";break;case"backup":window.location.href="/backup";break;case"import":window.location.href="/imports";break}}async function i(){try{await n.getNotifications(!1,10,0)}catch(e){console.error("Error al actualizar notificaciones:",e)}}if(n.subscribe(p),n.startPolling(6e4),i(),window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){const e=document.createElement("button");e.textContent="Crear notificaciones de prueba",e.className="w-full mt-2 text-xs text-primary bg-primary/10 hover:bg-primary/20 py-1 rounded",e.addEventListener("click",async()=>{await n.createTestNotifications()});const t=document.querySelector("#notifications-menu .p-2");t&&t.appendChild(e)}}export{h as default};
