server {
    listen 80;
    server_name _;

    # Log de errores y accesos detallados (para depuración)
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined;

    # Configuración de Gzip
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Headers de seguridad
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Access-Control-Allow-Origin "*" always;

    # Directorio raíz donde están los archivos
    root /usr/share/nginx/html;
    index index.html;

    # API proxy hacia el backend (expandido)
    location /api/ {
        proxy_pass http://masclet-backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 180s;
        add_header X-Debug-Info "Proxying to API" always;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization" always;
    }

    # Endpoint para health check
    location = /health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }

    # PRIORIDAD 1: Servir vendor.js directamente
    location = /vendor.CIJYp_OF.js {
        alias /usr/share/nginx/html/client/_astro/vendor.CIJYp_OF.js;
        add_header Content-Type "application/javascript";
        add_header X-Debug-Info "Serving vendor.js directly" always;
    }

    # PRIORIDAD 2: Acceso directo a archivos dentro de client/_astro
    location ~ ^/client/_astro/(.+)$ {
        alias /usr/share/nginx/html/client/_astro/$1;
        add_header X-Debug-Info "Serving from /client/_astro/" always;
    }

    # PRIORIDAD 3: Acceso directo a _astro como alias
    location ~ ^/_astro/(.+)$ {
        alias /usr/share/nginx/html/client/_astro/$1;
        add_header X-Debug-Info "Serving from /_astro/ as alias" always;
    }

    # PRIORIDAD 4: Servir archivos estáticos desde client
    location ~ ^/client/(.+)$ {
        alias /usr/share/nginx/html/client/$1;
        add_header X-Debug-Info "Serving from /client/" always;
        try_files $uri $uri/ /login;
    }    

    # PRIORIDAD 5: Login principal
    location = /login {
        alias /usr/share/nginx/html/client/login;
        try_files /index.html =404;
        add_header X-Debug-Info "Serving SPA login page" always;
    }

    # PRIORIDAD 6: Rutas específicas de la aplicación SPA que necesitan servir el index.html
    location ~ ^/(dashboard|animals|explotaciones|profile|imports|partos|settings|listados|users|logout)(/|$) {
        alias /usr/share/nginx/html/client/;
        try_files /index.html =404;
        add_header X-Debug-Info "Serving SPA route: $uri" always;
    }

    # Archivos JS/CSS con múltiples ubicaciones de búsqueda
    location ~* \.(js|css)$ {
        try_files $uri /client/_astro/$uri /_astro/$uri /client/$uri =404;
        add_header X-Debug-Info "Serving static file: $uri" always;
        expires 1h;
    }
    
    # Servir imágenes y otros recursos estáticos
    location ~* \.(jpg|jpeg|gif|png|ico|webp|svg|woff|woff2|ttf|eot)$ {
        try_files $uri /client/$uri /client/images/$uri =404;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        add_header X-Debug-Info "Serving media: $uri" always;
    }

    # Página de inicio que redirige a login
    location = / {
        return 302 /login;
    }
    
    # Ruta por defecto - redirige a login
    location / {
        try_files $uri $uri/ /login;
    }

    # Configuración de errores
    error_page 404 /login;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
