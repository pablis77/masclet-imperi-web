server {
    listen 80;
    server_name localhost;
    
    # Root para archivos estáticos (favicon, etc)
    root /usr/share/nginx/html;

    # Proxy inverso a la aplicación Node.js (Astro SSR)
    location / {
        proxy_pass http://masclet-frontend-node-test:10000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade "$http_upgrade";
        proxy_set_header Connection "upgrade";
        proxy_set_header Host "$host";
        proxy_set_header X-Real-IP "$remote_addr";
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header X-Forwarded-Proto "$scheme";
        proxy_cache_bypass "$http_upgrade";
        
        # Configurar tiempo de espera más largo para SSR
        proxy_read_timeout 120s;
        
        # Añadimos debug para ver todos los errores
        proxy_intercept_errors on;
        error_log /var/log/nginx/masclet_error.log debug;
    }

    # Acceso directo a archivos en _astro y assets
    location ~ ^/(_astro|assets)/ {
        proxy_pass http://masclet-frontend-node-test:10000;
        proxy_http_version 1.1;
        proxy_set_header Host "$host";
        proxy_cache_bypass "$http_upgrade";
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
    }

    # Configuración para favicon
    location = /favicon.ico {
        try_files /favicon.ico =404;
        access_log off;
        log_not_found off;
        expires 30d;
    }

    # COMPATIBILIDAD TEMPORAL: Soporte para rutas con doble prefijo 
    # Redirige /api/api/v1/* a /api/v1/* para manejar posibles URLs antiguas durante la transición
    location ~ ^/api/api/v1/(.*)$ {
        # Redireccionamos permanentemente a la URL correcta
        return 301 /api/v1/$1;
    }
    
    # SOLUCIÓN CRÍTICA: Corregir el patrón problemático /api/v1/api/v1
    # Este es el patrón específico que está causando los errores 500
    location ~ ^/api/v1/api/v1/(.*)$ {
        # Redireccionamos permanentemente a la URL correcta
        return 301 /api/v1/$1;
    }

    # SOLUCIÓN PRINCIPAL: Proxy directo para rutas /api/v1
    # Esto permite usar las rutas correctas sin doble prefijo
    location ~ ^/api/v1/(.*)$ {
        # SOLUCIÓN CORRECTA: Mantener el prefijo original sin duplicarlo
        # Si enviamos solo /$1, el backend no lo reconoce porque espera /api/v1/
        proxy_pass http://masclet-api-test:8000/api/v1/$1;
        proxy_http_version 1.1;
        proxy_set_header Host "$host";
        proxy_set_header X-Real-IP "$remote_addr";
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header X-Forwarded-Proto "$scheme";
        proxy_cache_bypass "$http_upgrade";
    }

    # Ruta de respaldo para compatibilidad con posibles rutas sin versión
    location /api/ {
        # Proxy a la API sin duplicar el prefijo /api/
        proxy_pass http://masclet-api-test:8000/api/v1/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade "$http_upgrade";
        proxy_set_header Connection "upgrade";
        proxy_set_header Host "$host";
        proxy_set_header X-Real-IP "$remote_addr";
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header X-Forwarded-Proto "$scheme";
        proxy_cache_bypass "$http_upgrade";
    }

    # RESPALDO para rutas de autenticación sin prefijo correcto
    location = /auth/login {
        # Redirigir a la ruta oficial
        proxy_pass http://masclet-api-test:8000/api/v1/auth/login;
        proxy_http_version 1.1;
        proxy_set_header Host "$host";
        proxy_set_header X-Real-IP "$remote_addr";
        proxy_set_header X-Forwarded-For "$proxy_add_x_forwarded_for";
        proxy_set_header X-Forwarded-Proto "$scheme";
        proxy_cache_bypass "$http_upgrade";
    }
    
    # Configuración de logs exhaustiva
    access_log /var/log/nginx/masclet_access.log;
    error_log /var/log/nginx/masclet_error.log debug;
}
