import{b4 as l}from"./vendor.CIJYp_OF.js";let h="development",c="";const d={development:{protocol:"http",host:"127.0.0.1",port:"8000",path:"/api/v1"},production:{protocol:"https",host:"masclet-imperi-web-backend.onrender.com",port:"",path:""}},m=()=>{let e=!1,t=!1;if(typeof window<"u"){const r=window.location.hostname;t=r.includes("loca.lt"),e=r==="localhost"||r==="127.0.0.1"||t}else e=h!=="production";typeof window<"u"&&window.location.hostname.includes("loca.lt")&&(t=!0);const a=e?d.development:d.production;if(t){if(typeof window<"u"&&window.location.hostname.includes("loca.lt")){let p="https://api-masclet-imperi.loca.lt/api/v1";const u=localStorage.getItem("backend_tunnel_url");return u&&(p=u),p}return"https://api-masclet-imperi.loca.lt/api/v1"}return`${a.protocol}://${a.host}${a.port?":"+a.port:""}${a.path}`};h="production";c=m();let i=!1;if(typeof window<"u"){const e=window.location.hostname;i=e!=="localhost"&&e!=="127.0.0.1"}const n=l.create({baseURL:c,headers:{"Content-Type":"application/json"}});n.interceptors.request.use(e=>{const t=e.url||"";if(typeof window<"u"&&window.location.hostname.includes("loca.lt")){if(!(localStorage.getItem("tunnelMessageShown")==="true")&&!document.getElementById("tunnel-auth-message")){localStorage.setItem("tunnelMessageShown","true");const r=document.createElement("div");r.id="tunnel-auth-message",r.style.position="fixed",r.style.top="50px",r.style.left="50%",r.style.transform="translateX(-50%)",r.style.backgroundColor="#f8d7da",r.style.color="#721c24",r.style.padding="15px 20px",r.style.borderRadius="5px",r.style.zIndex="9999",r.style.maxWidth="80%",r.style.textAlign="center",r.style.boxShadow="0 3px 10px rgba(0,0,0,0.2)",r.innerHTML=`
          <h3 style="margin-top: 0;">Autenticación de túnel necesaria</h3>
          <p>Para usar el túnel correctamente, necesitas autenticar ambos túneles manualmente.</p>
          <p><strong>1.</strong> Haz clic en este botón para abrir el túnel del backend:</p>
          <a href="https://api-masclet-imperi.loca.lt/api/v1/health" target="_blank" 
             style="display: inline-block; background: #28a745; color: white; text-decoration: none; 
                    padding: 8px 15px; margin: 10px 0; border-radius: 4px;">
            Autenticar Túnel Backend
          </a>
          <p><strong>2.</strong> En la nueva pestaña, completa cualquier autenticación que solicite LocalTunnel</p>
          <p><strong>3.</strong> Cierra esa pestaña y vuelve aquí</p>
          <p><strong>4.</strong> Recarga esta página</p>
          <button id="close-tunnel-msg" style="background: #6c757d; border: none; color: white; padding: 5px 10px; 
                                             border-radius: 3px; margin-top: 10px; cursor: pointer;">
            Cerrar este mensaje
          </button>
        `,document.body.appendChild(r),document.getElementById("close-tunnel-msg")?.addEventListener("click",()=>{r.style.display="none"})}if(!t.startsWith("/api/v1")&&!t.startsWith("api/v1")){const r=t.startsWith("/")?t:`/${t}`;e.url=`/api/v1${r}`,console.log(`[TÚNEL] Añadiendo prefijo: ${t} -> ${e.url}`)}const o=`${e.baseURL||""}${e.url||""}`;if(o.includes("/api/v1/")){console.log(`[TÚNEL] Corrigiendo URL duplicada: ${o}`);const r=o.replace("/api/v1/","/api/v1/"),s=e.baseURL||"";e.url=r.replace(s,""),console.log(`[TÚNEL] URL corregida: ${s}${e.url}`)}}return typeof localStorage<"u"&&localStorage.getItem("token")&&(e.headers.Authorization=`Bearer ${localStorage.getItem("token")}`),e.withCredentials=!1,i&&(e.url&&e.url.startsWith("http:")&&(e.url=e.url.replace("http:","https:")),e.baseURL&&e.baseURL.startsWith("http:")&&(e.baseURL=e.baseURL.replace("http:","https:")),console.log(`[PROD] URL final: ${e.baseURL}${e.url}`)),e},e=>Promise.reject(e));n.interceptors.request.use(e=>{if(typeof window<"u"&&window.localStorage)try{const t=localStorage.getItem("token");t?(e.headers.Authorization=`Bearer ${t}`,console.log("Usando token JWT para autenticación")):console.warn("No se encontró token en localStorage")}catch(t){console.warn("No se pudo acceder a localStorage:",t)}return e},e=>Promise.reject(e));function w(e,t=!1){c=e,n.defaults.baseURL=e}async function f(e){try{const t=e.startsWith("/")?e:`/${e}`,a=!t.includes("?")&&t.endsWith("/")?t.slice(0,-1):t,o=await n.get(a);return o.data===void 0||o.data===null?Array.isArray(o.data)?[]:{}:o.data}catch(t){if(l.isAxiosError(t)?console.error(`❌ Error en petición GET a ${e}: ${t.message} (${t.response?.status||"sin status"})`):console.error(`❌ Error no relacionado con Axios en ${e}: ${t}`),l.isAxiosError(t)&&t.response?.status===404){const a=t.config?.url||"",o=t.config?.baseURL?`${t.config.baseURL}${a}`:a;if(i){if(o.includes("://"))try{const r=new URL(o),s=r.pathname+r.search;try{return(await l.get(s,{baseURL:"",headers:t.config?.headers})).data}catch{}}catch{}if(a.includes("//")||a.includes("api/api")||a.includes("/api/v1")&&e.includes("/api/v1")){let r=e.replace(/api\/api/g,"api");if(r=r.replace(/\/api\/v1\/api\/v1/g,"/api/v1"),r=r.replace(/\/\/api\/v1/g,"/api/v1"),r!==e)try{return(await n.get(r)).data}catch{}}if(t.config?.baseURL)try{let r=a;return r.startsWith("/api")||(r=`/api/v1/${r.startsWith("/")?r.substring(1):r}`),(await l.get(r,{baseURL:""})).data}catch{}}if(e.includes("list")||e.includes("all")||e.includes("explotacions")||e.includes("animales"))return[]}return{}}}async function y(e,t){try{const a=e.startsWith("/")?e:`/${e}`;return(await n.post(a,t)).data}catch(a){throw console.error(`Error en petición POST a ${e}:`,a),a}}async function b(e,t){try{const a=e.startsWith("/")?e:`/${e}`;return(await n.put(a,t)).data}catch(a){throw console.error(`Error en petición PUT a ${e}:`,a),a}}async function $(e,t){try{const a=e.startsWith("/")?e:`/${e}`;return console.log(`Realizando petición PATCH a ${c}${a}`),console.log("Datos enviados:",t),(await n.patch(a,t)).data}catch(a){throw console.error(`Error en petición PATCH a ${e}:`,a),a}}async function U(e){try{const t=e.startsWith("/")?e:`/${e}`;return(await n.delete(t)).data}catch(t){throw console.error(`Error en petición DELETE a ${e}:`,t),t}}async function g(){try{return typeof window<"u"&&window.localStorage?!!localStorage.getItem("token"):!1}catch(e){return console.error("Error al verificar autenticación:",e),!1}}async function v(){try{return await g()?await f("/users/me"):null}catch(e){return console.error("Error al obtener información del usuario:",e),null}}async function E(e,t){try{const a=new URLSearchParams;a.append("username",e),a.append("password",t),a.append("grant_type","password");const o="/auth/login";console.log(i?`Realizando login a: /api/v1${o}`:`Realizando login a: ${n.defaults.baseURL}${o}`);const r=await n.post(o,a,{headers:{"Content-Type":"application/x-www-form-urlencoded"}});return typeof window<"u"&&window.localStorage&&r.data.access_token&&(localStorage.setItem("token",r.data.access_token),console.log("Token guardado correctamente")),r}catch(a){throw console.error("Error al iniciar sesión:",a),a}}const R=()=>c,k={get:f,post:y,put:b,patch:$,del:U,isAuthenticated:g,getUserInfo:v,login:E,configureApi:w,getBaseUrl:R};export{k as a,E as l};
