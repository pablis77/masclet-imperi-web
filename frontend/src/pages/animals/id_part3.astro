---
// Este archivo contiene el código del cliente para los botones de edición y eliminación
// No es una página completa, sino un fragmento que se incluye en otras páginas
---

<script>
    // Configuración de botones de edición
    function setUpEditButtons() {
      const editButtons = document.querySelectorAll('.edit-parto-btn');
      
      editButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          const partoId = this.getAttribute('data-parto-id');
          openEditModal(partoId);
        });
      });
    }
    
    // Configuración de botones de eliminación
    function setUpDeleteButtons() {
      const deleteButtons = document.querySelectorAll('.delete-parto-btn');
      
      deleteButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          const partoId = this.getAttribute('data-parto-id');
          openDeleteModal(partoId);
        });
      });
    }
    
    // Función para abrir el modal de edición
    function openEditModal(partoId) {
      // Obtener el modal
      const modal = document.getElementById('edit-modal');
      const form = document.getElementById('edit-form');
      const closeBtn = document.getElementById('edit-close-btn');
      const cancelBtn = document.getElementById('edit-cancel-btn');
      
      // Mostrar modal
      if (modal) {
        modal.classList.remove('hidden');
      }
      
      // Obtener datos del parto desde la API
      const animalId = window.location.pathname.split('/').pop();
      
      fetch(`/api/v1/animals/${animalId}/partos/${partoId}`)
        .then(function(response) {
          if (!response.ok) {
            throw new Error('Error al cargar los datos del parto');
          }
          return response.json();
        })
        .then(function(data) {
          const parto = data.data || data;
          
          // Llenar el formulario con los datos existentes
          document.getElementById('parto-id').value = parto.id;
          
          // Formatear fecha a YYYY-MM-DD para input type date
          if (parto.part) {
            const fecha = new Date(parto.part);
            const year = fecha.getFullYear();
            const month = String(fecha.getMonth() + 1).padStart(2, '0');
            const day = String(fecha.getDate()).padStart(2, '0');
            document.getElementById('edit-fecha').value = `${year}-${month}-${day}`;
          }
          
          // Establecer género
          if (parto.genereT) {
            const genero = parto.genereT.toLowerCase();
            if (genero === 'm') {
              document.getElementById('edit-genero-m').checked = true;
            } else if (genero === 'f') {
              document.getElementById('edit-genero-f').checked = true;
            } else if (genero === 'esforrada') {
              document.getElementById('edit-genero-e').checked = true;
            }
          }
          
          // Establecer estado
          if (parto.estadoT) {
            const estado = parto.estadoT.toLowerCase();
            if (estado === 'ok') {
              document.getElementById('edit-estado-ok').checked = true;
            } else if (estado === 'def') {
              document.getElementById('edit-estado-def').checked = true;
            }
          }
        })
        .catch(function(error) {
          console.error('Error:', error);
          alert('Error al cargar los datos: ' + error.message);
        });
      
      // Configurar cierre del modal
      function closeModal() {
        modal.classList.add('hidden');
      }
      
      closeBtn.addEventListener('click', closeModal);
      cancelBtn.addEventListener('click', closeModal);
      
      // Configurar envío del formulario
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Obtener datos del formulario
        const partoId = document.getElementById('parto-id').value;
        const fecha = document.getElementById('edit-fecha').value;
        const generoM = document.getElementById('edit-genero-m').checked;
        const generoF = document.getElementById('edit-genero-f').checked;
        const generoE = document.getElementById('edit-genero-e').checked;
        const estadoOK = document.getElementById('edit-estado-ok').checked;
        const estadoDEF = document.getElementById('edit-estado-def').checked;
        
        // Construir objeto de datos
        let genero = '';
        if (generoM) genero = 'M';
        if (generoF) genero = 'F';
        if (generoE) genero = 'esforrada';
        
        let estado = '';
        if (estadoOK) estado = 'OK';
        if (estadoDEF) estado = 'DEF';
        
        const data = {
          part: fecha,
          genereT: genero,
          estadoT: estado
        };
        
        // Enviar datos a la API
        fetch(`/api/v1/animals/${animalId}/partos/${partoId}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        })
        .then(function(response) {
          if (!response.ok) {
            throw new Error('Error al actualizar el parto');
          }
          return response.json();
        })
        .then(function(data) {
          // Mostrar mensaje de éxito
          showSuccessMessage('Parto actualizado correctamente');
          
          // Cerrar modal
          closeModal();
          
          // Recargar lista de partos
          cargarPartos();
        })
        .catch(function(error) {
          console.error('Error:', error);
          alert('Error al actualizar el parto: ' + error.message);
        });
      });
    }
    
    // Función para abrir el modal de eliminación
    function openDeleteModal(partoId) {
      // Obtener el modal
      const modal = document.getElementById('delete-modal');
      const form = document.getElementById('delete-form');
      const closeBtn = document.getElementById('delete-close-btn');
      const cancelBtn = document.getElementById('delete-cancel-btn');
      
      // Mostrar modal
      if (modal) {
        modal.classList.remove('hidden');
      }
      
      // Establecer el ID del parto en el formulario
      document.getElementById('delete-parto-id').value = partoId;
      
      // Configurar cierre del modal
      function closeModal() {
        modal.classList.add('hidden');
      }
      
      closeBtn.addEventListener('click', closeModal);
      cancelBtn.addEventListener('click', closeModal);
      
      // Configurar envío del formulario
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Obtener ID del parto a eliminar
        const partoId = document.getElementById('delete-parto-id').value;
        
        // Obtener ID del animal
        const animalId = window.location.pathname.split('/').pop();
        
        // Enviar petición a la API
        fetch(`/api/v1/animals/${animalId}/partos/${partoId}`, {
          method: 'DELETE',
          headers: {
            'Content-Type': 'application/json',
          }
        })
        .then(function(response) {
          if (!response.ok) {
            throw new Error('Error al marcar el parto como eliminado');
          }
          return response.json();
        })
        .then(function(data) {
          // Guardar ID en localStorage para ocultar en futuras cargas
          const partosOcultos = JSON.parse(localStorage.getItem('partosOcultos') || '[]');
          if (!partosOcultos.includes(partoId)) {
            partosOcultos.push(partoId);
            localStorage.setItem('partosOcultos', JSON.stringify(partosOcultos));
          }
          
          // Mostrar mensaje de éxito
          showSuccessMessage('Parto eliminado correctamente');
          
          // Recargar la lista de partos
          cargarPartos();
        })
        .catch(function(error) {
          console.error('Error:', error);
          alert('Error al eliminar el parto: ' + error.message);
        });
      });
    }
    
    // Función para mostrar mensaje de éxito
    function showSuccessMessage(message) {
      const alert = document.getElementById('success-alert');
      const messageEl = document.getElementById('success-message');
      const closeBtn = document.getElementById('close-success');
      
      // Establecer mensaje
      messageEl.textContent = message;
      
      // Mostrar alerta
      alert.classList.remove('hidden');
      
      // Configurar cierre
      closeBtn.addEventListener('click', function() {
        alert.classList.add('hidden');
      });
      
      // Ocultar automáticamente después de 5 segundos
      setTimeout(function() {
        alert.classList.add('hidden');
      }, 5000);
    }
    
    // Configurar cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
      setUpEditButtons();
      setUpDeleteButtons();
    });
</script>
