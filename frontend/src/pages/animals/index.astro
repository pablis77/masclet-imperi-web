---
// Importar el layout y componentes
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import AnimalTable from '../../components/animals/AnimalTable';
import AnimalFilters from '../../components/animals/AnimalFilters';
import { isAuthenticated, getCurrentUserRole } from '../../services/authService';

// Comprobar autenticaci√≥n pero sin verificar permisos
const isLoggedIn = true; // Forzamos a true durante el desarrollo
// const isLoggedIn = isAuthenticated();

// Comprobaciones simplificadas - siempre permitir todo para desarrollo r√°pido
const canViewAnimals = true;
const canEditAnimals = true;
const canCreateAnimals = true;

// En modo desarrollo, no redirigimos
// if (!isLoggedIn) {
//   return Astro.redirect('/login');
// }

// Definir t√≠tulo
const title = "Gesti√≥n de Animales";
---

<DefaultLayout title={title} userRole={getCurrentUserRole()}>
  <div class="mb-6">
    <h1 class="text-3xl font-bold text-gray-900 dark:text-dark-text">{title}</h1>
    <p class="text-gray-600 dark:text-dark-text-secondary">Consulta y administra el registro de animales de las explotaciones</p>
  </div>

  <!-- Buscador principal prominente -->
  <div class="mb-6 bg-white dark:bg-dark-card p-6 rounded-lg shadow border border-gray-100 dark:border-dark-border">
    <div class="max-w-2xl mx-auto">
      <label for="quickSearch" class="block text-lg font-medium text-gray-700 dark:text-dark-text mb-2">
        Buscar ficha de animal
      </label>
      <div class="mt-1 relative rounded-md shadow-sm">
        <input
          type="text"
          name="quickSearch"
          id="quickSearch"
          class="focus:ring-primary focus:border-primary block w-full pl-4 pr-12 py-3 sm:text-lg border-gray-300 dark:border-gray-600 dark:bg-gray-800 dark:text-white rounded-md"
          placeholder="Buscar por nombre, c√≥digo, n√∫mero..."
        />
        <div class="absolute inset-y-0 right-0 flex items-center pr-3">
          <button type="button" id="searchButton" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
            <span class="text-2xl">üîç</span>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Opciones y filtros -->
  <div class="mb-6 flex justify-between items-center">
    <div class="flex space-x-2">
      <button id="toggleFiltersBtn" class="btn btn-outline-secondary flex items-center">
        <span class="mr-1">‚öôÔ∏è</span> Filtros avanzados
      </button>
      <button id="refreshBtn" class="btn btn-outline-secondary flex items-center">
        <span class="mr-1">üîÑ</span> Actualizar
      </button>
    </div>
    <div class="flex space-x-2">
      <a href="/animals/new" class="btn btn-outline-primary flex items-center">
        <span class="mr-1">‚ûï</span> Nuevo Animal
      </a>
      <div id="totalAnimalsContainer">
        <span class="text-sm text-gray-500 dark:text-dark-text-secondary">Cargando animales...</span>
      </div>
    </div>
  </div>

  <!-- Panel de filtros avanzados (oculto por defecto) -->
  <div id="filtersContainer" class="mb-6 bg-white dark:bg-dark-card p-4 rounded-lg shadow border border-gray-100 dark:border-dark-border">
    <h2 class="text-lg font-semibold mb-4">Filtros avanzados</h2>
    <AnimalFilters client:load />
  </div>
  
  <!-- Leyenda de iconos -->
  <div class="mb-4 flex flex-wrap gap-4 text-sm">
    <div class="flex items-center">
      <span class="inline-block w-6 h-6 mr-2 text-center">üêÇ</span>
      <span>Toro</span>
    </div>
    <div class="flex items-center">
      <span class="inline-block w-6 h-6 mr-2 text-center">üêÑ</span>
      <span>Vaca</span>
    </div>
    <div class="flex items-center">
      <span class="inline-block w-6 h-6 mr-2 text-center">üçº</span>
      <span>Amamantando 1</span>
    </div>
    <div class="flex items-center">
      <span class="inline-block w-6 h-6 mr-2 text-center">ü•õ</span>
      <span>Amamantando 2</span>
    </div>
    <div class="flex items-center">
      <span class="inline-block w-6 h-6 mr-2 text-center">‚ö∞Ô∏è</span>
      <span>Fallecido</span>
    </div>
  </div>
  
  <!-- Tabla de animales -->
  <div class="bg-white dark:bg-dark-card rounded-lg shadow p-4 border border-gray-100 dark:border-dark-border">
    <AnimalTable 
      client:load 
      canEdit={canEditAnimals}
      canCreate={canCreateAnimals}
    />
  </div>
</DefaultLayout>

<script>
  // Script para manejar interacciones de la p√°gina
  document.addEventListener('DOMContentLoaded', () => {
    // Elementos del DOM
    const toggleFiltersBtn = document.getElementById('toggleFiltersBtn');
    const filtersContainer = document.getElementById('filtersContainer');
    const refreshBtn = document.getElementById('refreshBtn');
    const quickSearch = document.getElementById('quickSearch');
    const searchButton = document.getElementById('searchButton');
    
    // Inicializar estado de filtros (oculto por defecto)
    if (filtersContainer) {
      filtersContainer.classList.add('hidden');
    }
    
    // Toggle de filtros
    if (toggleFiltersBtn && filtersContainer) {
      toggleFiltersBtn.addEventListener('click', () => {
        filtersContainer.classList.toggle('hidden');
      });
    }
    
    // Bot√≥n de actualizar
    if (refreshBtn) {
      refreshBtn.addEventListener('click', () => {
        // Disparar evento para refrescar la tabla
        document.dispatchEvent(new CustomEvent('refresh-animals'));
      });
    }
    
    // B√∫squeda r√°pida
    if (quickSearch && searchButton) {
      // Buscar al presionar Enter
      quickSearch.addEventListener('keyup', (event) => {
        if (event.key === 'Enter') {
          const searchTerm = quickSearch.value.trim();
          document.dispatchEvent(new CustomEvent('filters-applied', {
            detail: { search: searchTerm || undefined }
          }));
        }
      });
      
      // Buscar al hacer clic en el bot√≥n
      searchButton.addEventListener('click', () => {
        const searchTerm = quickSearch.value.trim();
        document.dispatchEvent(new CustomEvent('filters-applied', {
          detail: { search: searchTerm || undefined }
        }));
      });
    }
  });
  
  // Manejar eventos de filtros aplicados
  document.addEventListener('filters-applied', (event) => {
    // Este evento lo emite el componente AnimalFilters
    // Contiene los filtros que se deben aplicar a la tabla
    document.dispatchEvent(new CustomEvent('apply-filters', {
      detail: event.detail
    }));
    
    // Cerrar panel de filtros autom√°ticamente en m√≥viles
    if (window.innerWidth < 768) {
      const filtersContainer = document.getElementById('filtersContainer');
      if (filtersContainer) {
        filtersContainer.classList.add('hidden');
      }
    }
  });
  
  // Actualizar contador de animales
  document.addEventListener('animals-loaded', (event: any) => {
    const totalAnimalsContainer = document.getElementById('totalAnimalsContainer');
    if (totalAnimalsContainer && event.detail) {
      const { total, filtered } = event.detail;
      if (total === filtered) {
        totalAnimalsContainer.innerHTML = `<span class="text-sm text-gray-500 dark:text-dark-text-secondary">Total: ${total} animales</span>`;
      } else {
        totalAnimalsContainer.innerHTML = `<span class="text-sm text-gray-500 dark:text-dark-text-secondary">Mostrando ${filtered} de ${total} animales</span>`;
      }
    }
  });
</script>