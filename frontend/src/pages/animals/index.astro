---
// Importar el layout y componentes
import MainLayout from '../../components/layout/MainLayout.astro';
import AnimalTable from '../../components/animals/AnimalTable';
import AnimalFilters from '../../components/animals/AnimalFilters';
import { isAuthenticated, getCurrentUserRole } from '../../services/authService';

// Comprobar autenticación pero sin verificar permisos
const isLoggedIn = true; // Forzamos a true durante el desarrollo
// const isLoggedIn = isAuthenticated();

// Comprobaciones simplificadas - siempre permitir todo para desarrollo rápido
const canViewAnimals = true;
const canEditAnimals = true;
const canCreateAnimals = true;

// En modo desarrollo, no redirigimos
// if (!isLoggedIn) {
//   return Astro.redirect('/login');
// }

// Definir título y rol de usuario
const title = "Gestión de Animales";
const userRole = getCurrentUserRole(); // Obtener rol de usuario actual

---

<MainLayout title={title} userRole={userRole} currentPath="/animals">
  <div class="container mx-auto px-4 py-4 sm:py-6">
    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 gap-3">
      <h1 class="text-xl sm:text-2xl font-bold text-gray-900 dark:text-white">
        {title}
      </h1>
      <div class="flex flex-wrap gap-2">
        <a href="/animals/new" class="btn btn-primary flex items-center">
          <span class="mr-1">+</span>
          Nuevo Animal
        </a>
        <button id="refreshBtn" class="btn btn-secondary flex items-center">
          <span class="mr-1">↻</span>
          Actualizar
        </button>
      </div>
    </div>

    <!-- Card de búsqueda y filtros -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4 mb-4 sm:mb-6">
      <div class="mb-3 sm:mb-4">
        <h2 class="text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-3">
          Búsqueda y Filtros
        </h2>
        <p class="text-xs sm:text-sm text-gray-600 dark:text-gray-300 mb-3 sm:mb-4">
          Utiliza los filtros para encontrar animales específicos. Puedes filtrar por explotación, género, estado y más.
        </p>
      </div>
      
      <!-- Componente de filtros -->
      <AnimalFilters id="animal-filters" client:load />
    </div>

    <!-- Tabla de animales -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4">
      <div class="mb-3 sm:mb-4 flex flex-col sm:flex-row justify-between items-start sm:items-center">
        <h2 class="text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-0">
          Listado de Animales
        </h2>
        <div id="totalAnimalsContainer" class="text-xs sm:text-sm text-gray-500 dark:text-gray-400">
          Cargando animales...
        </div>
      </div>
      <div class="overflow-x-auto">
        <AnimalTable 
          client:load 
          canEdit={canEditAnimals}
          canCreate={canCreateAnimals}
        />
      </div>
    </div>
  </div>
</MainLayout>

<style>
  .btn {
    @apply px-3 py-2 sm:px-4 sm:py-2 rounded-md text-xs sm:text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors;
  }
  
  .btn-primary {
    @apply bg-primary text-white hover:bg-primary/80 focus:ring-primary;
  }
  
  .btn-secondary {
    @apply bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600;
  }
</style>

<script>
  // Script para manejar interacciones de la página
  document.addEventListener('DOMContentLoaded', () => {
    // Elementos del DOM
    const refreshBtn = document.getElementById('refreshBtn');
    
    // Botón de actualizar
    if (refreshBtn) {
      refreshBtn.addEventListener('click', () => {
        // Disparar evento para refrescar la tabla
        document.dispatchEvent(new CustomEvent('refresh-animals'));
      });
    }
  });
  
  // Manejar eventos de filtros aplicados
  document.addEventListener('filters-applied', (event) => {
    // Este evento lo emite el componente AnimalFilters
    // Contiene los filtros que se deben aplicar a la tabla
    document.dispatchEvent(new CustomEvent('apply-filters', {
      detail: event.detail
    }));
  });
  
  // Actualizar contador de animales
  document.addEventListener('animals-loaded', (event: any) => {
    const totalAnimalsContainer = document.getElementById('totalAnimalsContainer');
    if (totalAnimalsContainer && event.detail) {
      const { total, filtered } = event.detail;
      if (total === filtered) {
        totalAnimalsContainer.innerHTML = `<span class="text-xs sm:text-sm text-gray-500 dark:text-gray-400">Total: ${total} animales</span>`;
      } else {
        totalAnimalsContainer.innerHTML = `<span class="text-xs sm:text-sm text-gray-500 dark:text-gray-400">Mostrando ${filtered} de ${total} animales</span>`;
      }
    }
  });
</script>