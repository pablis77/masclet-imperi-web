---
// Importar el layout y componentes necesarios
import DefaultLayout from '../../../layouts/DefaultLayout.astro';
import AnimalForm from '../../../components/animals/AnimalForm';
import { getAnimalById } from '../../../services/animalService';
import { getAllExplotaciones } from '../../../services/explotacionService';
import { isAuthenticated, getUserRole } from '../../../services/authService';
import { hasAccessToRoute } from '../../../utils/roleUtils';

// Comprobar autenticación y permisos
const isLoggedIn = isAuthenticated();
const userRole = getUserRole();
const hasEditPermission = hasAccessToRoute('animals.edit', userRole);

// Redireccionar si no tiene permisos
if (!isLoggedIn || !hasEditPermission) {
  return Astro.redirect('/login');
}

// Obtener el ID del animal desde los parámetros de la URL
const { id } = Astro.params;
let animal: any = null;
let explotaciones: any[] = [];
let error: string | null = null;

try {
  if (id) {
    // Obtener los datos del animal
    animal = await getAnimalById(parseInt(id));
    
    // Obtener listado de explotaciones para el selector
    explotaciones = await getAllExplotaciones();
  }
} catch (err) {
  console.error('Error al obtener datos del animal:', err);
  error = 'No se pudo cargar la información del animal';
}

// Preparar el título de la página
const title = animal ? `Editar Animal: ${animal.nom}` : 'Editar Animal';
---

<DefaultLayout title={title} userRole={userRole}>
  <!-- Encabezado con botón de volver -->
  <div class="flex items-center mb-6">
    <a href={`/animals/${id}`} class="btn btn-outline-secondary mr-4 flex items-center">
      <span class="mr-1">←</span> Volver a detalles
    </a>
    <h1 class="text-3xl font-bold text-gray-900 dark:text-dark-text">
      {title}
    </h1>
  </div>

  <!-- Mensaje de error -->
  {error && (
    <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6">
      <p>{error}</p>
      <p>Vuelve al <a href="/animals" class="underline">listado de animales</a></p>
    </div>
  )}

  <!-- Formulario de edición -->
  {animal && (
    <div class="bg-white dark:bg-dark-card rounded-lg shadow p-6">
      <AnimalForm 
        client:load 
        animalData={animal}
        explotaciones={explotaciones}
        isEditMode={true}
        onSuccess={() => {
          window.location.href = `/animals/${id}`;
        }}
        onCancel={() => {
          window.location.href = `/animals/${id}`;
        }}
      />
    </div>
  )}
</DefaultLayout>

<script>
  // Script para manejar interacciones adicionales
  document.addEventListener('DOMContentLoaded', () => {
    // Futura funcionalidad si es necesaria
  });
</script>
