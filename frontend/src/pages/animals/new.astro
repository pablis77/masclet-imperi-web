---
/**
 * Página para crear un nuevo animal
 */
import MainLayout from '../../components/layout/MainLayout.astro';
import CreateAnimalForm from '../../components/animals/CreateAnimalForm.astro';
import MessageContainer from '../../components/ui/MessageContainer.astro';
import Alert from '../../components/ui/Alert.astro';
import animalService from '../../services/animalService';
import { cachedFetch } from '../../stores/cacheStore';

// Obtener el rol del usuario de la sesión
const userRole = Astro.cookies.get('userRole')?.value || 'user';

// Obtener datos necesarios para el formulario
let explotaciones = [];
let error = null;

try {
  // Obtener listado de explotaciones para el selector
  explotaciones = await animalService.getExplotacions();
} catch (err) {
  console.error('Error al obtener explotaciones:', err);
  error = 'No se pudieron cargar las explotaciones necesarias para crear un animal';
  
  // En caso de error, usar datos de respaldo para desarrollo
  if (import.meta.env.DEV) {
    explotaciones = [
      { id: 1, explotacio: 'Explotación Norte' },
      { id: 2, explotacio: 'Explotación Sur' }
    ];
    error = null; // No mostrar error en desarrollo
  }
}

// Título de la página
const title = 'Registrar Nuevo Animal';
---

<MainLayout title={title} userRole={userRole} currentPath="/animals">
  <!-- Contenedor de mensajes -->
  <MessageContainer />
  
  <!-- Encabezado con botón de volver -->
  <div class="mb-6">
    <div class="flex items-center gap-2 mb-2">
      <a href="/animals" class="text-primary hover:text-primary-dark dark:text-primary-light dark:hover:text-primary transition-colors">
        ← Volver al listado
      </a>
    </div>
    <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{title}</h1>
    <p class="text-gray-600 dark:text-gray-300">Completa el formulario para registrar un nuevo animal en el sistema</p>
  </div>

  <!-- Mensaje de error global -->
  {error && (
    <Alert 
      type="error" 
      title="Error al cargar datos" 
      message={error}
    >
      <p class="mt-2">Vuelve al <a href="/animals" class="underline">listado de animales</a></p>
    </Alert>
  )}

  <!-- Formulario de creación -->
  <CreateAnimalForm 
    explotaciones={explotaciones} 
    error={error && import.meta.env.PROD ? error : null}
  />
</MainLayout>

<script>
  // El script se ha movido al componente CreateAnimalForm
  import { showSuccess, showError } from '../../stores/messageStore';
  
  document.addEventListener('DOMContentLoaded', async () => {
    // El script se ha movido principalmente al componente CreateAnimalForm
    // Este código es solo para desarrollo y demostración
    
    // Configurar el formulario si existe
    const form = document.getElementById('create-animal-form');
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        try {
          // Aquí iría la lógica real para enviar los datos al servidor
          console.log('Enviando datos del nuevo animal...');
          
          // Simulamos un tiempo de procesamiento
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // Redirigir al listado con mensaje de éxito
          window.location.href = '/animals?success=true&message=Animal+creado+correctamente';
        } catch (error) {
          console.error('Error al crear animal:', error);
          alert('Error al crear el animal. Inténtalo de nuevo.');
        }
      });
    }
  });
</script>
