{"version":3,"file":"AnimalForm.DWC52cV5.js","sources":["../../../src/components/animals/AnimalForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport animalService from '../../services/animalService';\nimport type { Animal, AnimalCreateDto, AnimalUpdateDto } from '../../services/animalService';\n\n// Definición local del tipo Explotacion para mantener compatibilidad\ntype Explotacion = {\n  id: number;\n  explotacio: string;\n  animal_count?: number;\n};\n\ninterface AnimalFormProps {\n  animalData?: Animal;\n  explotaciones?: Explotacion[];\n  isEditMode?: boolean;\n  onSuccess: () => void;\n  onCancel: () => void;\n}\n\nconst AnimalForm: React.FC<AnimalFormProps> = ({ \n  animalData, \n  explotaciones = [], \n  isEditMode = false, \n  onSuccess, \n  onCancel \n}) => {\n  const [formData, setFormData] = useState<AnimalCreateDto>({\n    explotacio: '',\n    nom: '',\n    genere: 'M',\n    estado: 'OK',\n    alletar: '0',\n  });\n  \n  const [potentialFathers, setPotentialFathers] = useState<Animal[]>([]);\n  const [potentialMothers, setPotentialMothers] = useState<Animal[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [submitting, setSubmitting] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Cargar datos iniciales\n  useEffect(() => {\n    const loadInitialData = async () => {\n      try {\n        setLoading(true);\n        \n        // Si estamos editando, establecer los datos del animal\n        if (isEditMode && animalData) {\n          console.log(`Cargando datos para animal ID: ${animalData.id}`);\n          setFormData({\n            explotacio: animalData.explotacio,\n            nom: animalData.nom,\n            genere: animalData.genere,\n            estado: animalData.estado,\n            alletar: animalData.alletar,\n            pare: animalData.pare,\n            mare: animalData.mare,\n            quadra: animalData.quadra,\n            cod: animalData.cod,\n            num_serie: animalData.num_serie,\n            dob: animalData.dob,\n          });\n          \n          // Cargar padres y madres potenciales\n          try {\n            const fathers = await animalService.getPotentialFathers(animalData?.explotacio);\n            const mothers = await animalService.getPotentialMothers(animalData?.explotacio);\n            \n            setPotentialFathers(fathers);\n            setPotentialMothers(mothers);\n          } catch (parentError) {\n            console.error('Error cargando padres/madres potenciales:', parentError);\n            setError('No se pudieron cargar los padres/madres potenciales. Se mostrarán datos simulados.');\n          }\n        } else if (explotaciones.length > 0) {\n          // Si no estamos editando y hay explotaciones, establecer la primera como predeterminada\n          setFormData(prev => ({\n            ...prev,\n            explotacio_id: explotaciones[0].id\n          }));\n          \n          // Cargar padres y madres potenciales para la explotación predeterminada\n          if (explotaciones[0].id) {\n            try {\n              const [fathers, mothers] = await Promise.all([\n                animalService.getPotentialFathers(explotaciones[0].id),\n                animalService.getPotentialMothers(explotaciones[0].id)\n              ]);\n              \n              setPotentialFathers(fathers);\n              setPotentialMothers(mothers);\n            } catch (parentError) {\n              console.error('Error cargando padres/madres potenciales:', parentError);\n              setError('No se pudieron cargar los padres/madres potenciales. Se mostrarán datos simulados.');\n            }\n          }\n        }\n      } catch (err: any) {\n        setError(err.message || 'Error al cargar los datos');\n        console.error('Error cargando datos iniciales:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadInitialData();\n  }, [isEditMode, animalData, explotaciones]);\n\n  // Cargar padres y madres cuando cambia la explotación\n  const handleExplotacionChange = async (explotacioId: number) => {\n    try {\n      setLoading(true);\n      \n      // Actualizar el formulario\n      setFormData(prev => ({\n        ...prev,\n        explotacio_id: explotacioId,\n        pare_id: undefined,\n        mare_id: undefined\n      }));\n      \n      // Cargar padres y madres potenciales\n      const [fathers, mothers] = await Promise.all([\n        animalService.getPotentialFathers(explotacioId),\n        animalService.getPotentialMothers(explotacioId)\n      ]);\n      \n      setPotentialFathers(fathers);\n      setPotentialMothers(mothers);\n    } catch (err: any) {\n      setError(err.message || 'Error al cargar padres y madres');\n      console.error('Error cargando padres y madres:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value, type } = e.target as HTMLInputElement;\n    \n    // Manejar checkboxes\n    if (type === 'checkbox') {\n      const checked = (e.target as HTMLInputElement).checked;\n      setFormData(prev => ({\n        ...prev,\n        [name]: checked\n      }));\n      return;\n    }\n    \n    // Manejar selects numéricos\n    if (name === 'explotacio_id' || name === 'pare_id' || name === 'mare_id') {\n      const numValue = value === '' ? undefined : parseInt(value, 10);\n      \n      if (name === 'explotacio_id' && numValue) {\n        handleExplotacionChange(numValue);\n      } else {\n        setFormData(prev => ({\n          ...prev,\n          [name]: numValue\n        }));\n      }\n      return;\n    }\n    \n    // Manejar inputs de texto\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      setSubmitting(true);\n      setError(null);\n      \n      console.log('Enviando datos del formulario:', formData);\n      \n      if (isEditMode && animalData) {\n        console.log(`Actualizando animal con ID: ${animalData.id}`);\n        await animalService.updateAnimal(animalData.id, formData);\n        console.log('Animal actualizado correctamente');\n      } else {\n        console.log('Creando nuevo animal');\n        await animalService.createAnimal(formData);\n        console.log('Animal creado correctamente');\n      }\n      \n      onSuccess();\n    } catch (err: any) {\n      setError(err.message || 'Error al guardar el animal');\n      console.error('Error guardando animal:', err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"text-center py-8\">\n        <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary\"></div>\n        <p className=\"mt-2 text-gray-600 dark:text-dark-text-secondary\">Cargando...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white dark:bg-dark-card rounded-lg shadow p-6 border border-gray-100 dark:border-dark-border\">\n      <h2 className=\"text-xl font-bold text-gray-900 dark:text-dark-text mb-4\">\n        {isEditMode ? 'Editar Animal' : 'Nuevo Animal'}\n      </h2>\n      \n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          {/* Explotación */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Explotación *\n            </label>\n            <select\n              id=\"explotacio\"\n              name=\"explotacio\"\n              className=\"form-select\"\n              value={formData.explotacio}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"\">Seleccionar explotación</option>\n              {explotaciones.map((explotacion) => (\n                <option key={explotacion.id} value={explotacion.explotacio}>\n                  {explotacion.explotacio}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* Nombre */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Nombre *\n            </label>\n            <input\n              type=\"text\"\n              name=\"nom\"\n              value={formData.nom}\n              onChange={handleInputChange}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            />\n          </div>\n          \n          {/* Género */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Género *\n            </label>\n            <select\n              name=\"genere\"\n              value={formData.genere}\n              onChange={handleInputChange}\n              required\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            >\n              <option value=\"M\">Macho</option>\n              <option value=\"F\">Hembra</option>\n            </select>\n          </div>\n          \n          {/* Estado */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Estado *\n            </label>\n            <select\n              id=\"estado\"\n              name=\"estado\"\n              className=\"form-select\"\n              value={formData.estado}\n              onChange={handleInputChange}\n              required\n            >\n              <option value=\"OK\">Activo</option>\n              <option value=\"DEF\">Baja</option>\n            </select>\n          </div>\n          \n          {/* Código */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Código\n            </label>\n            <input\n              type=\"text\"\n              name=\"cod\"\n              value={formData.cod || ''}\n              onChange={handleInputChange}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            />\n          </div>\n          \n          {/* Número de serie */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Número de serie\n            </label>\n            <input\n              type=\"text\"\n              name=\"num_serie\"\n              value={formData.num_serie || ''}\n              onChange={handleInputChange}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            />\n          </div>\n          \n          {/* Fecha de nacimiento */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Fecha de nacimiento\n            </label>\n            <input\n              type=\"date\"\n              name=\"dob\"\n              value={formData.dob || ''}\n              onChange={handleInputChange}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            />\n          </div>\n          \n          {/* Cuadra */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Cuadra\n            </label>\n            <input\n              type=\"text\"\n              name=\"quadra\"\n              value={formData.quadra || ''}\n              onChange={handleInputChange}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-800 dark:text-dark-text\"\n            />\n          </div>\n          \n          {/* Padre */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Padre\n            </label>\n            <select\n              id=\"pare\"\n              name=\"pare\"\n              className=\"form-select\"\n              value={formData.pare || ''}\n              onChange={handleInputChange}\n            >\n              <option value=\"\">Sin padre</option>\n              {potentialFathers.map((father) => (\n                <option key={father.id} value={father.nom}>\n                  {father.nom}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* Madre */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Madre\n            </label>\n            <select\n              id=\"mare\"\n              name=\"mare\"\n              className=\"form-select\"\n              value={formData.mare || ''}\n              onChange={handleInputChange}\n            >\n              <option value=\"\">Sin madre</option>\n              {potentialMothers.map((mother) => (\n                <option key={mother.id} value={mother.nom}>\n                  {mother.nom}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        {/* Amamantando (solo para hembras) */}\n        {formData.genere === 'F' && (\n          <div className=\"mb-4\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-dark-text-secondary mb-1\">\n              Amamantando\n            </label>\n            <select\n              id=\"alletar\"\n              name=\"alletar\"\n              className=\"form-select\"\n              value={formData.alletar}\n              onChange={handleInputChange}\n              disabled={formData.genere !== 'F'}\n            >\n              <option value=\"0\">No</option>\n              <option value=\"1\">1 ternero</option>\n              <option value=\"2\">2 terneros</option>\n            </select>\n          </div>\n        )}\n        \n        <div className=\"flex justify-end space-x-3 mt-6\">\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            disabled={submitting}\n            className=\"px-4 py-2 border border-gray-300 dark:border-dark-border rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-dark-text-secondary bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n          >\n            Cancelar\n          </button>\n          <button\n            type=\"submit\"\n            disabled={submitting}\n            className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary/80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n          >\n            {submitting ? 'Guardando...' : isEditMode ? 'Actualizar' : 'Crear'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AnimalForm;\n"],"names":["AnimalForm","animalData","explotaciones","isEditMode","onSuccess","onCancel","formData","setFormData","useState","potentialFathers","setPotentialFathers","potentialMothers","setPotentialMothers","loading","setLoading","submitting","setSubmitting","error","setError","useEffect","fathers","animalService","mothers","parentError","prev","err","handleExplotacionChange","explotacioId","handleInputChange","e","name","value","type","checked","numValue","handleSubmit","jsxs","jsx","explotacion","father","mother"],"mappings":"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"}