{"version":3,"file":"hoisted.BTDKv-6L.js","sources":["../../../src/pages/animals/new.astro?astro&type=script&index=0&lang.ts","../../../src/stores/cacheStore.ts","../../../src/components/animals/CreateAnimalForm.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["  // El script se ha movido al componente CreateAnimalForm\n  import { showSuccess, showError } from '../../stores/messageStore';\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    // El script se ha movido principalmente al componente CreateAnimalForm\n    // Este código es solo para desarrollo y demostración\n    \n    // Configurar el formulario si existe\n    const form = document.getElementById('create-animal-form');\n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        try {\n          // Aquí iría la lógica real para enviar los datos al servidor\n          console.log('Enviando datos del nuevo animal...');\n          \n          // Simulamos un tiempo de procesamiento\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Redirigir al listado con mensaje de éxito\n          window.location.href = '/animals?success=true&message=Animal+creado+correctamente';\n        } catch (error) {\n          console.error('Error al crear animal:', error);\n          alert('Error al crear el animal. Inténtalo de nuevo.');\n        }\n      });\n    }\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","import { map } from 'nanostores';\nimport type { CacheItem, CacheOptions } from '../types/types';\n\n// Tiempo de vida predeterminado para la caché (5 minutos)\nconst DEFAULT_TTL = 5 * 60 * 1000;\n\n// Store para gestionar la caché de datos\nexport const cacheStore = map<Record<string, CacheItem<any>>>({});\n\n/**\n * Guarda datos en la caché\n * @param key - Clave para identificar los datos\n * @param data - Datos a almacenar\n * @param options - Opciones de caché\n */\nexport function setCache<T>(key: string, data: T, options?: CacheOptions): void {\n  const ttl = options?.ttl || DEFAULT_TTL;\n  \n  cacheStore.setKey(key, {\n    data,\n    timestamp: Date.now(),\n    expiry: ttl\n  });\n}\n\n/**\n * Obtiene datos de la caché\n * @param key - Clave de los datos\n * @param options - Opciones de caché\n * @returns Los datos almacenados o null si no existen o han expirado\n */\nexport function getCache<T>(key: string, options?: CacheOptions): T | null {\n  // Si se solicita forzar refresco, ignorar la caché\n  if (options?.forceRefresh) {\n    return null;\n  }\n  \n  const cacheItem = cacheStore.get()[key] as CacheItem<T> | undefined;\n  \n  // Si no hay datos en caché, devolver null\n  if (!cacheItem) {\n    return null;\n  }\n  \n  // Comprobar si los datos han expirado\n  const now = Date.now();\n  const isExpired = now - cacheItem.timestamp > cacheItem.expiry;\n  \n  if (isExpired) {\n    // Eliminar datos expirados\n    removeCache(key);\n    return null;\n  }\n  \n  return cacheItem.data;\n}\n\n/**\n * Elimina datos de la caché\n * @param key - Clave de los datos a eliminar\n */\nexport function removeCache(key: string): void {\n  const state = cacheStore.get();\n  const { [key]: _, ...rest } = state;\n  cacheStore.set(rest);\n}\n\n/**\n * Limpia toda la caché o los elementos expirados\n * @param onlyExpired - Si es true, solo elimina los elementos expirados\n */\nexport function clearCache(onlyExpired: boolean = false): void {\n  if (!onlyExpired) {\n    cacheStore.set({});\n    return;\n  }\n  \n  const now = Date.now();\n  const state = cacheStore.get();\n  const newState: Record<string, CacheItem<any>> = {};\n  \n  // Mantener solo los elementos no expirados\n  Object.entries(state).forEach(([key, item]: [string, CacheItem<any>]) => {\n    if (now - item.timestamp <= item.expiry) {\n      newState[key] = item;\n    }\n  });\n  \n  cacheStore.set(newState);\n}\n\n/**\n * Función para envolver peticiones a la API con caché\n * @param key - Clave para la caché\n * @param fetchFn - Función que realiza la petición a la API\n * @param options - Opciones de caché\n * @returns Resultado de la petición (desde caché o desde la API)\n */\nexport async function cachedFetch<T>(\n  key: string,\n  fetchFn: () => Promise<T>,\n  options?: CacheOptions\n): Promise<T> {\n  // Usar clave personalizada si se proporciona\n  const cacheKey = options?.key || key;\n  \n  // Intentar obtener datos de la caché\n  const cachedData = getCache<T>(cacheKey, options);\n  if (cachedData !== null) {\n    console.log(`Usando datos en caché para: ${cacheKey}`);\n    return cachedData;\n  }\n  \n  // Si no hay datos en caché o han expirado, realizar la petición\n  console.log(`Obteniendo datos frescos para: ${cacheKey}`);\n  const data = await fetchFn();\n  \n  // Guardar los nuevos datos en la caché\n  setCache(cacheKey, data, options);\n  \n  return data;\n}\n","  import { showSuccess, showError } from '../../stores/messageStore';\n  import { cachedFetch } from '../../stores/cacheStore';\n  import animalService from '../../services/animalService';\n  \n  // Script para manejar el envío del formulario\n  document.addEventListener('DOMContentLoaded', () => {\n    const form = document.getElementById('new-animal-form');\n    const genereSelect = document.getElementById('genere');\n    const alletarContainer = document.getElementById('alletar-container');\n    \n    // Mostrar/ocultar campo de amamantamiento según el género\n    if (genereSelect && alletarContainer) {\n      genereSelect.addEventListener('change', () => {\n        if (genereSelect.value === 'F') {\n          alletarContainer.classList.remove('hidden');\n        } else {\n          alletarContainer.classList.add('hidden');\n        }\n      });\n    }\n    \n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        // Obtener el botón de submit para deshabilitarlo\n        const submitBtn = form.querySelector('button[type=\"submit\"]');\n        if (submitBtn) {\n          submitBtn.disabled = true;\n          submitBtn.innerHTML = 'Creando...';\n        }\n        \n        try {\n          // Obtener todos los campos del formulario\n          const formData = new FormData(form);\n          const animalData = {};\n          \n          // Procesar todos los campos\n          for (const [key, value] of formData.entries()) {\n            if (value !== '') {\n              // Convertir la fecha al formato esperado por el backend (DD/MM/YYYY)\n              if (key === 'dob' && value) {\n                // Convertir de YYYY-MM-DD a DD/MM/YYYY\n                const dateParts = value.split('-');\n                if (dateParts.length === 3) {\n                  animalData[key] = `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`;\n                } else {\n                  animalData[key] = value;\n                }\n              } else {\n                animalData[key] = value;\n              }\n            }\n          }\n          \n          // Validar campos requeridos\n          const requiredFields = ['nom', 'genere', 'explotacio', 'estado'];\n          for (const field of requiredFields) {\n            if (!animalData[field]) {\n              throw new Error(`El campo ${field} es obligatorio`);\n            }\n          }\n          \n          // Si es hembra, asegurar que alletar tenga un valor\n          if (animalData.genere === 'F' && !animalData.alletar) {\n            animalData.alletar = '0'; // Valor por defecto\n          }\n          \n          // Si es macho, eliminar alletar\n          if (animalData.genere === 'M' && animalData.alletar) {\n            delete animalData.alletar;\n          }\n          \n          console.log('Datos a enviar:', animalData);\n          \n          // Enviar datos al servidor\n          const token = localStorage.getItem('token');\n          if (!token) {\n            throw new Error('No hay token de autenticación. Por favor, inicie sesión nuevamente.');\n          }\n          \n          // Usar animalService para crear el animal\n          const result = await animalService.createAnimal(animalData);\n          console.log('Animal creado:', result);\n          \n          // Mostrar mensaje de éxito\n          showSuccess('Animal creado', `El animal ${animalData.nom} ha sido creado correctamente`);\n          \n          // Redireccionar a la página de detalle del animal\n          setTimeout(() => {\n            // Extraer el ID correctamente según la estructura de respuesta del backend\n            let animalId;\n            if (result && result.data && result.data.id) {\n              animalId = result.data.id;\n            } else if (result && result.id) {\n              animalId = result.id;\n            } else {\n              console.error('No se pudo obtener el ID del animal creado:', result);\n              // Redireccionar a la lista de animales en caso de error\n              window.location.href = '/animals';\n              return;\n            }\n            \n            console.log('Redirigiendo a la ficha del animal con ID:', animalId);\n            window.location.href = `/animals/${animalId}`;\n          }, 1000);\n          \n        } catch (error) {\n          console.error('Error al crear animal:', error);\n          \n          // Mostrar mensaje de error\n          showError('Error', error.message || 'Ha ocurrido un error al crear el animal');\n          \n          // Restaurar botón\n          if (submitBtn) {\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = 'Crear Animal';\n          }\n        }\n      });\n    }\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["form","e","resolve","error","map","genereSelect","alletarContainer","submitBtn","formData","animalData","key","value","dateParts","requiredFields","field","result","animalService","showSuccess","animalId","showError"],"mappings":"sVA4EE,SAAS,iBAAiB,mBAAoB,SAAY,CAKlD,MAAAA,EAAO,SAAS,eAAe,oBAAoB,EACrDA,GACGA,EAAA,iBAAiB,SAAU,MAAOC,GAAM,CAC3CA,EAAE,eAAe,EAEb,GAAA,CAEF,QAAQ,IAAI,oCAAoC,EAGhD,MAAM,IAAI,QAAQC,GAAW,WAAWA,EAAS,GAAI,CAAC,EAGtD,OAAO,SAAS,KAAO,2DACzB,OAASC,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAC7C,MAAM,+CAA8C,CACtD,EACD,CAEL,CAAC,EC9FuBC,EAAoC,CAAE,CAAA,ECuO9D,SAAS,iBAAiB,mBAAoB,IAAM,CAC5C,MAAAJ,EAAO,SAAS,eAAe,iBAAiB,EAChDK,EAAe,SAAS,eAAe,QAAQ,EAC/CC,EAAmB,SAAS,eAAe,mBAAmB,EAGhED,GAAgBC,GACLD,EAAA,iBAAiB,SAAU,IAAM,CACxCA,EAAa,QAAU,IACRC,EAAA,UAAU,OAAO,QAAQ,EAEzBA,EAAA,UAAU,IAAI,QAAQ,EAE1C,EAGCN,GACGA,EAAA,iBAAiB,SAAU,MAAOC,GAAM,CAC3CA,EAAE,eAAe,EAGX,MAAAM,EAAYP,EAAK,cAAc,uBAAuB,EACxDO,IACFA,EAAU,SAAW,GACrBA,EAAU,UAAY,cAGpB,GAAA,CAEI,MAAAC,EAAW,IAAI,SAASR,CAAI,EAC5BS,EAAa,CAAC,EAGpB,SAAW,CAACC,EAAKC,CAAK,IAAKH,EAAS,UAClC,GAAIG,IAAU,GAER,GAAAD,IAAQ,OAASC,EAAO,CAEpB,MAAAC,EAAYD,EAAM,MAAM,GAAG,EAC7BC,EAAU,SAAW,EACvBH,EAAWC,CAAG,EAAI,GAAGE,EAAU,CAAC,CAAC,IAAIA,EAAU,CAAC,CAAC,IAAIA,EAAU,CAAC,CAAC,GAEjEH,EAAWC,CAAG,EAAIC,OAGpBF,EAAWC,CAAG,EAAIC,EAMxB,MAAME,EAAiB,CAAC,MAAO,SAAU,aAAc,QAAQ,EAC/D,UAAWC,KAASD,EACd,GAAA,CAACJ,EAAWK,CAAK,EACnB,MAAM,IAAI,MAAM,YAAYA,CAAK,iBAAiB,EAkBtD,GAbIL,EAAW,SAAW,KAAO,CAACA,EAAW,UAC3CA,EAAW,QAAU,KAInBA,EAAW,SAAW,KAAOA,EAAW,SAC1C,OAAOA,EAAW,QAGZ,QAAA,IAAI,kBAAmBA,CAAU,EAIrC,CADU,aAAa,QAAQ,OAAO,EAElC,MAAA,IAAI,MAAM,qEAAmE,EAIrF,MAAMM,EAAS,MAAMC,EAAc,aAAaP,CAAU,EAClD,QAAA,IAAI,iBAAkBM,CAAM,EAGpCE,EAAY,gBAAiB,aAAaR,EAAW,GAAG,+BAA+B,EAGvF,WAAW,IAAM,CAEX,IAAAS,EACJ,GAAIH,GAAUA,EAAO,MAAQA,EAAO,KAAK,GACvCG,EAAWH,EAAO,KAAK,WACdA,GAAUA,EAAO,GAC1BG,EAAWH,EAAO,OACb,CACG,QAAA,MAAM,8CAA+CA,CAAM,EAEnE,OAAO,SAAS,KAAO,WACvB,MACF,CAEQ,QAAA,IAAI,6CAA8CG,CAAQ,EAC3D,OAAA,SAAS,KAAO,YAAYA,CAAQ,EAC7C,EAAG,GAAI,CAET,OAASf,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EAGnCgB,EAAA,QAAShB,EAAM,SAAW,yCAAyC,EAGzEI,IACFA,EAAU,SAAW,GACrBA,EAAU,UAAY,eAE1B,EACD,CAEL,CAAC"}