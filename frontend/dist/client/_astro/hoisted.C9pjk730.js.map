{"version":3,"file":"hoisted.C9pjk730.js","sources":["../../../src/pages/animals/[id].astro?astro&type=script&index=0&lang.ts","../../../src/pages/animals/[id].astro?astro&type=script&index=1&lang.ts","../../../src/pages/animals/[id].astro?astro&type=script&index=2&lang.ts"],"sourcesContent":["  // Importar el script que maneja la carga del historial de cambios\r\n  const scriptHistorial = document.createElement('script');\r\n  scriptHistorial.src = '/scripts/animal-history.js';\r\n  scriptHistorial.type = 'text/javascript';\r\n  document.head.appendChild(scriptHistorial);\r\n  \r\n  // Escribir directamente al console log para verificar que el script se ejecuta\r\n  console.log('🔍 VERIFICACIÓN: Script interno ejecutándose correctamente');\r\n  \r\n  // Agregar función para detectar cuando se hace clic en la pestaña de historial\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    const tabChanges = document.getElementById('tab-changes');\r\n    if (tabChanges) {\r\n      console.log('🔍 Encontrada pestaña de historial, agregando event listener');\r\n      tabChanges.addEventListener('click', function() {\r\n        console.log('🔄 REGISTRADO: Clic en pestaña de historial desde script principal');\r\n      });\r\n    } else {\r\n      console.warn('⚠️ No se encontró la pestaña de historial');\r\n    }\r\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","  // Importar el script de edición de partos (versión 4 - usando PATCH en lugar de PUT)\r\n  const scriptPartos = document.createElement('script');\r\n  scriptPartos.src = '/scripts/editar-parto-v4.js';\r\n  scriptPartos.type = 'text/javascript';\r\n  document.head.appendChild(scriptPartos);\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","  // Script para manejar interacciones de la página y traducciones\n  document.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM completamente cargado y analizado');\n    \n    // Configurar botones de exportar PDF para todas las pestañas\n    const exportPdfBtn = document.getElementById('export-animal-pdf');\n    const exportPartosPdfBtn = document.getElementById('export-partos-pdf');\n    const exportChangesPdfBtn = document.getElementById('export-changes-pdf');\n    \n    if (exportPdfBtn) {\n      exportPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportPartosPdfBtn) {\n      exportPartosPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportChangesPdfBtn) {\n      exportChangesPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    // Función para exportar ficha del animal a PDF - estructura idéntica a ExplotacionesPage.tsx\n    function exportAnimalToPDF() {\n      try {\n        // Obtener los datos del animal\n        const animalName = document.querySelector('h2.text-2xl').textContent;\n        const animalId = document.getElementById('animal-id-text').textContent.split(':')[1].trim();\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\n        \n        // Crear el documento PDF - igual que en ExplotacionesPage.tsx\n        const { jsPDF } = window.jspdf;\n        const doc = new jsPDF();\n        \n        // Configurar título del documento\n        const title = currentLang === 'ca' ? `Fitxa d'Animal - ${animalName}` : `Ficha de Animal - ${animalName}`;\n        \n        // Añadir fecha en la esquina superior derecha\n        doc.setFontSize(10);\n        doc.setTextColor(100, 100, 100);\n        const date = new Date().toLocaleDateString(currentLang === 'ca' ? 'ca-ES' : 'es-ES');\n        doc.text(\n          currentLang === 'ca' ? `Data: ${date}` : `Fecha: ${date}`, \n          195, 15, { align: 'right' }\n        );\n        \n        // Definimos la posición inicial para el resumen (usada en todo el documento)\n        const logoY = 10; // Valor predeterminado por si falla la carga del logo\n        const logoHeight = 35; // Valor predeterminado por si falla la carga del logo\n        let contentStartY = logoY + logoHeight + 20; // Posición inicial del contenido\n        \n        // Añadir logo oficial de Masclet Imperi\n        try {\n          // Intentamos cargar el logo oficial desde una imagen base64\n          // La ruta es relativa a la ubicación desde donde se sirve la aplicación\n          const logoUrl = '/images/logo_masclet.png';\n          \n          // Tamaño y posicionamiento del logo (centrado arriba)\n          const logoWidth = 45;\n          const logoHeight = 35;\n          const pageWidth = doc.internal.pageSize.getWidth();\n          const logoX = (pageWidth / 2) - (logoWidth / 2); // Centrado horizontalmente\n          \n          // Añadir la imagen al PDF\n          doc.addImage(logoUrl, 'PNG', logoX, logoY, logoWidth, logoHeight);\n          \n          // Añadir el título debajo del logo\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, logoY + logoHeight + 10, { align: 'center' });\n          \n          // Actualizamos la posición inicial del contenido con los valores reales del logo\n          contentStartY = logoY + logoHeight + 25;\n        } catch (error) {\n          console.error('Error al cargar el logo:', error);\n          \n          // Si hay error, usamos un título simple centrado sin logo\n          const pageWidth = doc.internal.pageSize.getWidth();\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, 30, { align: 'center' });\n          \n          // Ajustamos la posición inicial del contenido sin logo\n          contentStartY = 45;\n        }\n        \n        // Añadir datos básicos del animal\n        doc.setFontSize(14);\n        doc.setTextColor(50, 50, 50);\n        doc.text(currentLang === 'ca' ? 'Dades de l\\'animal:' : 'Datos del animal:', 20, contentStartY);\n        \n        // Recopilar datos del animal\n        const datos = [];\n        document.querySelectorAll('#content-info .space-y-3').forEach(section => {\n          section.querySelectorAll('div').forEach(item => {\n            const label = item.querySelector('p.text-sm')?.textContent;\n            const value = item.querySelector('p.font-medium')?.textContent;\n            if (label && value) {\n              datos.push([label, value]);\n            }\n          });\n        });\n        \n        // Añadir tabla con datos del animal - usando autoTable como en ExplotacionesPage\n        window.autoTable(doc, {\n          startY: contentStartY + 10,\n          head: [[currentLang === 'ca' ? 'Camp' : 'Campo', currentLang === 'ca' ? 'Valor' : 'Valor']],\n          body: datos,\n          theme: 'grid',\n          styles: { \n            fontSize: 9, \n            cellPadding: 2,\n            lineWidth: 0.1,\n            lineColor: [200, 200, 200],\n            minCellHeight: 8,\n            valign: 'middle'\n          },\n          headStyles: { \n            fillColor: [126, 211, 33], // Color verde lima corporativo\n            textColor: 255,\n            fontStyle: 'bold',\n            minCellHeight: 10\n          },\n          alternateRowStyles: {\n            fillColor: [245, 245, 245]\n          },\n          columnStyles: {\n            0: { cellWidth: 40, halign: 'left' }, // Columna de \"Campo\" más estrecha\n            1: { cellWidth: 'auto', halign: 'left' } // Columna de \"Valor\" usa el resto del espacio\n          }\n        });\n        \n        // Verificar si es una vaca (género F) para añadir tabla de partos\n        const generoAnimal = datos.find(d => d[0].includes('Sexo') || d[0].includes('Género'));\n        const esVaca = generoAnimal && (generoAnimal[1] === 'Hembra' || generoAnimal[1] === 'Femella' || generoAnimal[1] === 'F');\n        \n        // Posición para el siguiente elemento (observaciones o tabla de partos)\n        let nextY = doc.previousAutoTable.finalY + 15;\n        \n        // Si es una vaca, verificamos si tiene partos y añadimos la tabla\n        if (esVaca) {\n          // Obtener los datos de partos\n          const partosRows = [];\n          const partosContainer = document.querySelector('#content-partos table tbody');\n          \n          if (partosContainer) {\n            const partosFilas = partosContainer.querySelectorAll('tr');\n            let hayPartos = false;\n            \n            partosFilas.forEach(fila => {\n              // Verificar si es una fila de datos (no de mensaje \"no hay partos\")\n              const celdas = fila.querySelectorAll('td');\n              if (celdas.length >= 3 && !fila.textContent.includes('No hay registros')) {\n                hayPartos = true;\n                // Extraer información de las celdas: fecha, género, estado, observaciones\n                const fecha = celdas[0]?.textContent?.trim() || 'N/A';\n                const genero = celdas[1]?.textContent?.trim() || 'N/A';\n                const estado = celdas[2]?.querySelector('span')?.textContent?.trim() || 'N/A';\n                const obs = celdas[3]?.textContent?.trim() || 'N/A';\n                \n                // Añadir a los datos de la tabla\n                partosRows.push([fecha, genero, estado, obs]);\n              }\n            });\n            \n            // Si hay partos, añadir la tabla\n            if (hayPartos && partosRows.length > 0) {\n              // Título de la sección de partos\n              doc.setFontSize(14);\n              doc.setTextColor(50, 50, 50);\n              doc.text(currentLang === 'ca' ? 'Historial de Parts:' : 'Historial de Partos:', 20, nextY);\n              \n              // Cabecera de la tabla de partos\n              const partosHead = [\n                currentLang === 'ca' ? 'Data' : 'Fecha', \n                currentLang === 'ca' ? 'Gènere' : 'Género', \n                currentLang === 'ca' ? 'Estat' : 'Estado', \n                currentLang === 'ca' ? 'Observacions' : 'Observaciones'\n              ];\n              \n              // Añadir tabla de partos\n              window.autoTable(doc, {\n                startY: nextY + 5,\n                head: [partosHead],\n                body: partosRows,\n                theme: 'grid',\n                styles: { \n                  fontSize: 8, \n                  cellPadding: 2,\n                  lineWidth: 0.1,\n                  lineColor: [200, 200, 200],\n                  minCellHeight: 6,\n                  valign: 'middle'\n                },\n                headStyles: { \n                  fillColor: [126, 211, 33], // Color verde lima corporativo\n                  textColor: 255,\n                  fontStyle: 'bold',\n                  minCellHeight: 8\n                },\n                alternateRowStyles: {\n                  fillColor: [245, 245, 245]\n                },\n                columnStyles: {\n                  0: { cellWidth: 25, halign: 'center' }, // Fecha\n                  1: { cellWidth: 30, halign: 'center' }, // Género\n                  2: { cellWidth: 25, halign: 'center' }, // Estado\n                  3: { cellWidth: 'auto', halign: 'left' } // Observaciones\n                }\n              });\n              \n              // Actualizar la posición para las observaciones\n              nextY = doc.previousAutoTable.finalY + 15;\n            }\n          }\n        }\n        \n        // Añadir observaciones si existen\n        const observaciones = document.querySelector('.p-4.bg-gray-50 p')?.textContent;\n        \n        if (observaciones && observaciones !== (currentLang === 'ca' ? 'No hi ha observacions' : 'No hay observaciones')) {\n          doc.setFontSize(14);\n          doc.setTextColor(50, 50, 50);\n          doc.text(currentLang === 'ca' ? 'Observacions:' : 'Observaciones:', 20, nextY);\n          \n          doc.setFontSize(10);\n          doc.setTextColor(80, 80, 80);\n          const observacionesText = doc.splitTextToSize(observaciones, 170);\n          doc.text(observacionesText, 20, nextY + 10);\n        }\n        \n        // Pie de página\n        const pageCount = doc.internal.getNumberOfPages();\n        for(let i = 1; i <= pageCount; i++) {\n          doc.setPage(i);\n          doc.setFontSize(8);\n          doc.setTextColor(100, 100, 100);\n          doc.text('Masclet Imperi - Sistema de Gestión Ganadera', 105, doc.internal.pageSize.height - 10, { align: 'center' });\n          doc.text(`Página ${i} de ${pageCount}`, 195, doc.internal.pageSize.height - 10, { align: 'right' });\n        }\n        \n        // Guardar el PDF\n        doc.save(`${animalName}_ficha_${date.replace(/\\//g, '')}.pdf`);\n        \n      } catch (error) {\n        console.error('Error al generar PDF:', error);\n        alert(localStorage.getItem('userLanguage') === 'ca' ? 'Error en generar el PDF' : 'Error al generar el PDF');\n      }\n    }\n    \n    // Traducciones del lado del cliente\n    const translations = {\n      es: {\n        title: \"Ficha de Animal\",\n        back_to_list: \"Volver al listado\",\n        animal_id: \"ID Animal\",\n        loading: \"Cargando datos del animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Activo\",\n        inactive: \"Baja\",\n        dead: \"Fallecido\",\n        update: \"Actualizar\",\n        code: \"Código\",\n        name: \"Nombre\",\n        serial_number: \"Número de Serie\",\n        gender: \"Sexo\",\n        male: \"Macho\",\n        female: \"Hembra\",\n        birth_date: \"Fecha de nacimiento\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Fecha incorrecta\",\n        status: \"Estado\",\n        exploitation: \"Explotación\",\n        stable: \"Origen\",\n        not_assigned: \"No asignada\",\n        father: \"Padre\",\n        mother: \"Madre\",\n        nursing_status: \"Estado de amamantamiento\",\n        not_nursing: \"No amamanta\",\n        nursing_one: \"Amamanta a un ternero\",\n        nursing_two: \"Amamanta a dos terneros\",\n        back_to_animal_list: \"Volver al listado de animales\",\n        complete_info_tab: \"Información Completa\",\n        birth_history_tab: \"Historial de Partos\",\n        changes_history_tab: \"Historial de Cambios\",\n        identification_data: \"Datos de Identificación\",\n        general_data: \"Datos Generales\",\n        birth_history: \"Historial de Partos\",\n        birth_registry: \"Registro de todos los partos del animal\",\n        no_births: \"Este animal no tiene partos registrados\",\n        date: \"Fecha\",\n        gender_label: \"Género\",\n        observations: \"Observaciones\",\n        changes_history: \"Historial de Cambios\",\n        changes_registry: \"Registro de cambios realizados al animal\",\n        no_changes: \"No hay cambios registrados para este animal\",\n        changes_date: \"Fecha\",\n        changes_user: \"Usuario\",\n        changes_field: \"Campo\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nuevo\"\n      },\n      ca: {\n        title: \"Fitxa d'Animal\",\n        back_to_list: \"Tornar al llistat\",\n        animal_id: \"ID Animal\",\n        loading: \"Carregant dades de l'animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Actiu\",\n        inactive: \"Baixa\",\n        dead: \"Mort\",\n        update: \"Actualitzar\",\n        code: \"Codi\",\n        name: \"Nom\",\n        serial_number: \"Número de Sèrie\",\n        gender: \"Sexe\",\n        male: \"Mascle\",\n        female: \"Femella\",\n        birth_date: \"Data de naixement\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Data incorrecta\",\n        status: \"Estat\",\n        exploitation: \"Explotació\",\n        stable: \"Origen\",\n        not_assigned: \"No assignada\",\n        father: \"Pare\",\n        mother: \"Mare\",\n        nursing_status: \"Estat d'alletament\",\n        not_nursing: \"No alleta\",\n        nursing_one: \"Alleta un vedell\",\n        nursing_two: \"Alleta dos vedells\",\n        back_to_animal_list: \"Tornar al llistat d'animals\",\n        complete_info_tab: \"Informació Completa\",\n        birth_history_tab: \"Historial de Parts\",\n        changes_history_tab: \"Historial de Canvis\",\n        identification_data: \"Dades d'Identificació\",\n        general_data: \"Dades Generals\",\n        birth_history: \"Historial de Parts\",\n        birth_registry: \"Registre de tots els parts de l'animal\",\n        no_births: \"Aquest animal no té parts registrats\",\n        date: \"Data\",\n        gender_label: \"Gènere\",\n        observations: \"Observacions\",\n        changes_history: \"Historial de Canvis\",\n        changes_registry: \"Registre de canvis realitzats a l'animal\",\n        no_changes: \"No hi ha canvis registrats per a aquest animal\",\n        changes_date: \"Data\",\n        changes_user: \"Usuari\",\n        changes_field: \"Camp\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nou\"\n      }\n    };\n\n    // Función para obtener traducción\n    function t(key, lang) {\n      return translations[lang]?.[key] || key;\n    }\n\n    // Función para traducir la ficha de animal\n    function translateAnimalFile() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      \n      // Traducir título y encabezados principales\n      document.querySelector('h1.text-3xl').textContent = t('title', currentLang);\n      \n      // Mantener el texto completo \"Volver al listado de animales\" en el botón superior\n      // Comentamos esta parte para que no sobrescriba el texto que ya establecimos\n      /* \n      const backLink = document.getElementById('back-to-list-link');\n      if (backLink) {\n        backLink.innerHTML = `<span class=\"mr-1\">←</span> ${t('back_to_list', currentLang)}`;\n      }\n      */\n      \n      // Corregir problema de ID duplicado\n      const idElement = document.getElementById('animal-id-text');\n      if (idElement) {\n        // Obtener el ID de animal (desde la URL)\n        const animalIdFromUrl = window.location.pathname.split('/').pop();\n        // Actualizar el texto con el formato e ID correcto\n        idElement.textContent = `${t('animal_id', currentLang)}: ${animalIdFromUrl}`;\n      }\n      \n      // Traducir elementos básicos\n      const elements = [\n        { selector: '.text-gray-600.dark\\\\:text-gray-300', key: 'animal_id', prefix: true },\n        { selector: '.animate-spin + p', key: 'loading', prefix: false },\n        { selector: '.text-lg.font-medium.text-red-800', key: 'error_title', prefix: false },\n        { selector: '#retry-button', key: 'retry', prefix: true },\n        { selector: 'a[href^=\"/animals/update\"]', key: 'update', prefix: true },\n      ];\n      \n      elements.forEach(el => {\n        const element = document.querySelector(el.selector);\n        if (element) {\n          if (el.prefix) {\n            // Si tiene un prefijo (como un ícono), preservarlo\n            const text = element.innerHTML;\n            const iconPrefix = text.match(/.*?[^\\w\\s]/); // Captura todo hasta el primer no alfanumérico\n            if (iconPrefix) {\n              element.innerHTML = iconPrefix[0] + ' ' + t(el.key, currentLang);\n            } else {\n              element.textContent = t(el.key, currentLang);\n            }\n          } else {\n            element.textContent = t(el.key, currentLang);\n          }\n        }\n      });\n\n      // Traducir estado del animal\n      const estadoElement = document.querySelector('.px-3.py-1.rounded-full');\n      if (estadoElement) {\n        // Determinar si está activo o inactivo basado en la clase CSS\n        const isActive = estadoElement.classList.contains('bg-green-100') || \n                         estadoElement.classList.contains('text-green-800');\n        estadoElement.textContent = isActive ? t('active', currentLang) : t('inactive', currentLang);\n      }\n      \n      // Traducir información del animal (resumen y detalle)\n      document.querySelectorAll('.text-sm.text-gray-500').forEach(label => {\n        const labelText = label.textContent.trim();\n        \n        // Mapear etiquetas a claves de traducción\n        let translationKey = '';\n        if (labelText.includes('Código') || labelText.includes('Codi')) translationKey = 'code';\n        else if (labelText.includes('Nombre') || labelText.includes('Nom')) translationKey = 'name';\n        else if (labelText.includes('Número de Serie') || labelText.includes('Número de Sèrie')) translationKey = 'serial_number';\n        else if (labelText.includes('Sexo') || labelText.includes('Sexe')) translationKey = 'gender';\n        else if (labelText.includes('Fecha de nacimiento') || labelText.includes('Data de naixement')) translationKey = 'birth_date';\n        else if (labelText.includes('Estado') || labelText.includes('Estat')) translationKey = 'status';\n        else if (labelText.includes('Explotación') || labelText.includes('Explotació')) translationKey = 'exploitation';\n        else if (labelText.includes('Origen') || labelText.includes('Origen')) translationKey = 'stable';\n        else if (labelText.includes('Padre') || labelText.includes('Pare')) translationKey = 'father';\n        else if (labelText.includes('Madre') || labelText.includes('Mare')) translationKey = 'mother';\n        else if (labelText.includes('amamantamiento') || labelText.includes('alletament')) translationKey = 'nursing_status';\n        \n        if (translationKey) {\n          label.textContent = t(translationKey, currentLang);\n        }\n      });\n      \n      // Traducir pestañas de navegación\n      document.querySelectorAll('button[id^=\"tab-\"]').forEach(tab => {\n        if (tab.id === 'tab-info') {\n          tab.textContent = t('complete_info_tab', currentLang);\n        } else if (tab.id === 'tab-partos') {\n          tab.textContent = t('birth_history_tab', currentLang);\n        } else if (tab.id === 'tab-changes') {\r\n          tab.textContent = t('changes_history_tab', currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de secciones\r\n      document.querySelectorAll('h3.text-lg.font-medium').forEach(header => {\r\n        const headerText = header.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (headerText.includes('Datos de Identificación') || headerText.includes('Dades d\\'Identificació')) {\r\n          translationKey = 'identification_data';\r\n        } else if (headerText.includes('Datos Generales') || headerText.includes('Dades Generals')) {\r\n          translationKey = 'general_data';\r\n        } else if (headerText.includes('Historial de Partos') || headerText.includes('Historial de Parts')) {\r\n          translationKey = 'birth_history';\r\n        } else if (headerText.includes('Historial de Cambios') || headerText.includes('Historial de Canvis')) {\r\n          translationKey = 'changes_history';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          header.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir descripciones de secciones\r\n      document.querySelectorAll('.mb-4 p.text-gray-500, .p-6.text-center p').forEach(desc => {\r\n        const descText = desc.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (descText.includes('Registro de todos los partos') || descText.includes('Registre de tots els parts')) {\r\n          translationKey = 'birth_registry';\r\n        } else if (descText.includes('No tiene partos registrados') || descText.includes('no té parts registrats')) {\r\n          translationKey = 'no_births';\r\n        } else if (descText.includes('Registro de cambios') || descText.includes('Registre de canvis')) {\r\n          translationKey = 'changes_registry';\r\n        } else if (descText.includes('No hay cambios registrados') || descText.includes('No hi ha canvis registrats')) {\r\n          translationKey = 'no_changes';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          desc.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de tablas\r\n      document.querySelectorAll('th.px-6.py-3').forEach(th => {\r\n        const headerText = th.textContent.trim();\r\n        let translationKey = '';\r\n        \r\n        if (headerText.includes('Fecha') || headerText.includes('Data')) {\r\n          translationKey = 'date';\r\n          // Conservar el indicador de ordenación\r\n          const sortIndicator = th.querySelector('.sort-indicator');\r\n          if (sortIndicator) {\r\n            th.innerHTML = t(translationKey, currentLang) + ' <span class=\"ml-1 sort-indicator\">' + sortIndicator.innerHTML + '</span>';\r\n            return;\r\n          }\r\n        } else if (headerText.includes('Género') || headerText.includes('Gènere')) {\r\n          translationKey = 'gender_label';\r\n        } else if (headerText.includes('Estado') || headerText.includes('Estat')) {\r\n          translationKey = 'status';\r\n        } else if (headerText.includes('Observaciones') || headerText.includes('Observacions')) {\r\n          translationKey = 'observations';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          th.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir botones de volver al listado\r\n      document.querySelectorAll('a[href=\"/animals\"].inline-flex').forEach(button => {\r\n        // Preservar el icono de flecha\r\n        const arrowSpan = button.querySelector('span.mr-2');\r\n        if (arrowSpan) {\r\n          button.innerHTML = `<span class=\"mr-2\">←</span> ${t('back_to_animal_list', currentLang)}`;\r\n        }\r\n      });\r\n      \r\n      // Traducir textos en el contenido dinámico\r\n      document.querySelectorAll('.font-medium').forEach(value => {\r\n        const valueText = value.textContent.trim();\r\n        \r\n        // Solo traducir valores específicos que sabemos que necesitan traducción\r\n        if (valueText === 'No disponible') {\r\n          value.textContent = t('not_available', currentLang);\r\n        } else if (valueText === 'No asignada') {\r\n          value.textContent = t('not_assigned', currentLang);\r\n        } else if (valueText === 'Fecha incorrecta') {\r\n          value.textContent = t('incorrect_date', currentLang);\r\n        } else if (valueText === 'Macho') {\r\n          value.textContent = t('male', currentLang);\r\n        } else if (valueText === 'Hembra') {\r\n          value.textContent = t('female', currentLang);\r\n        } else if (valueText === 'Activo') {\r\n          value.textContent = t('active', currentLang);\r\n        } else if (valueText === 'Fallecido') {\r\n          value.textContent = t('dead', currentLang);\r\n        } else if (valueText === 'No amamanta') {\r\n          value.textContent = t('not_nursing', currentLang);\r\n        } else if (valueText.includes('Amamanta un ternero')) {\r\n          value.textContent = t('nursing_one', currentLang);\r\n        } else if (valueText.includes('Amamanta dos terneros')) {\r\n          value.textContent = t('nursing_two', currentLang);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Ejecutar traducción inicial\r\n    translateAnimalFile();\r\n    \r\n    // Retraducir cuando cambie el idioma\r\n    window.addEventListener('storage', function(e) {\r\n      if (e.key === 'userLanguage') {\r\n        translateAnimalFile();\r\n        translateTableButtons();\r\n      }\r\n    });\r\n\r\n    // SOLUCIÓN AGRESIVA PARA FORZAR LAS TRADUCCIONES\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // Función de fuerza bruta para traducir todo, con selección directa de elementos\r\n      function traducirTodoForzado() {\r\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\r\n        console.log('[DEBUG] Aplicando traducción forzada, idioma: ' + currentLang);\r\n        \r\n        // Botones de eliminar\r\n        document.querySelectorAll('button').forEach(btn => {\r\n          if (btn.textContent.trim() === 'Eliminar') {\r\n            if (currentLang === 'ca') {\r\n              btn.title = 'Eliminar part';\r\n            } else {\r\n              btn.title = 'Eliminar parto';\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Textos de género\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Macho') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Mascle' : 'Macho';\r\n            console.log('[DEBUG] Traducido Macho→Mascle');\r\n          } \r\n          if (texto === 'Hembra') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Femella' : 'Hembra';\r\n            console.log('[DEBUG] Traducido Hembra→Femella');\r\n          }\r\n        });\r\n        \r\n        // Sin observaciones\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Sin observaciones' || texto === 'animals.no_observations') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Sense observacions' : 'Sin observaciones';\n            console.log('[DEBUG] Traducido observaciones');\n          }\n        });\n        \n        // Estados (Vivo/Fallecido)\n        document.querySelectorAll('span.inline-flex').forEach(span => {\n          const texto = span.textContent.trim();\n          if (texto === 'Vivo') {\n            span.innerHTML = currentLang === 'ca' ? 'Viu' : 'Vivo';\n            console.log('[DEBUG] Traducido Vivo→Viu');\n          }\n          if (texto === 'Fallecido') {\n            span.innerHTML = currentLang === 'ca' ? 'Mort' : 'Fallecido';\n            console.log('[DEBUG] Traducido Fallecido→Mort');\n          }\n        });\n      }\n      \n      // Ejecutar inmediatamente\n      traducirTodoForzado();\n      \n      // Repetir cada 500ms durante los primeros 10 segundos\n      for (let i = 1; i <= 20; i++) {\n        setTimeout(traducirTodoForzado, i * 500);\n      }\n      \n      // Establecer un intervalo permanente para seguir traduciéndolo\n      setInterval(traducirTodoForzado, 2000);\n      \n      // Cuando cambie el idioma\n      window.addEventListener('storage', function(e) {\n        if (e.key === 'userLanguage') {\n          console.log('[DEBUG] Cambio de idioma detectado');\n          // Aplicar inmediatamente y luego con retrasos\n          traducirTodoForzado();\n          for (let i = 1; i <= 10; i++) {\n            setTimeout(traducirTodoForzado, i * 200);\n          }\n        }\n      });\n    });\n    \n    // Botón de reintentar carga\n    const retryButton = document.getElementById('retry-button');\n    if (retryButton) {\n      retryButton.addEventListener('click', () => {\n        window.location.reload();\n      });\n    }\n    \n    // Obtener todas las pestañas y contenidos\n    const tabs = document.querySelectorAll('#tab-info, #tab-partos, #tab-changes');\n    const contents = document.querySelectorAll('#content-info, #content-partos, #content-changes');\n    \n    console.log('Pestañas encontradas:', tabs.length);\n    console.log('Contenidos encontrados:', contents.length);\n    \n    // Función para mostrar pestaña y ocultar las demás\n    const showTab = (tabId) => {\n      console.log('Cambiando a pestaña:', tabId);\n      \n      // Ocultar todos los contenidos\n      contents.forEach(content => {\n        content.classList.add('hidden');\n      });\n      \n      // Resetear estilos de todas las pestañas\n      tabs.forEach(tab => {\n        tab.classList.remove('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n        tab.classList.add('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n      });\n      \n      // Activar pestaña seleccionada\n      const selectedTab = document.getElementById(tabId);\n      if (selectedTab) {\n        selectedTab.classList.remove('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n        selectedTab.classList.add('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n      }\n      \n      // Mostrar contenido correspondiente\n      const contentId = tabId.replace('tab-', 'content-');\n      const selectedContent = document.getElementById(contentId);\n      if (selectedContent) {\n        selectedContent.classList.remove('hidden');\n      }\n    };\n    \n    // Inicializar con la pestaña de información abierta\n    showTab('tab-info');\n    \n    // Eventos de clic para pestañas\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        showTab(tab.id);\n        console.log('Clic en pestaña:', tab.id);\n      });\n    });\n\n    // Ordenación de la tabla de partos\n    const sortColumns = document.querySelectorAll('#sort-fecha, #sort-genero, #sort-estado');\n    let currentSortColumn = 'sort-fecha';\n    let currentSortDirection = 'asc';\n\n    // Función para ordenar la tabla\n    const sortTable = (columnId, direction) => {\n      const table = document.getElementById('tabla-partos');\n      if (!table) return;\n\n      const tbody = table.querySelector('tbody');\n      if (!tbody) return;\n\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      const sortedRows = [...rows];\n\n      // Obtener el índice de la columna según el ID del encabezado\n      let columnIndex = 0;\n      if (columnId === 'sort-genero') columnIndex = 1;\n      if (columnId === 'sort-estado') columnIndex = 2;\n\n      // Ordenar filas\n      sortedRows.sort((a, b) => {\n        const cellA = a.querySelectorAll('td')[columnIndex].textContent.trim();\n        const cellB = b.querySelectorAll('td')[columnIndex].textContent.trim();\n        \n        if (columnId === 'sort-fecha') {\n          // Para fechas, intentar convertir a objetos Date para comparación\n          const dateA = parseDate(cellA);\n          const dateB = parseDate(cellB);\n          \n          if (direction === 'asc') {\n            return dateA - dateB;\n          } else {\n            return dateB - dateA;\n          }\n        } else {\n          // Para texto, comparar strings\n          if (direction === 'asc') {\n            return cellA.localeCompare(cellB, 'es');\n          } else {\n            return cellB.localeCompare(cellA, 'es');\n          }\n        }\n      });\n\n      // Limpiar y reconstruir la tabla\n      while (tbody.firstChild) {\n        tbody.removeChild(tbody.firstChild);\n      }\n\n      sortedRows.forEach(row => tbody.appendChild(row));\n\n      // Actualizar indicadores de ordenación\n      sortColumns.forEach(col => {\n        const indicator = col.querySelector('.sort-indicator');\n        if (indicator) {\n          indicator.textContent = '';\n        }\n      });\n\n      const activeHeader = document.getElementById(columnId);\n      const indicator = activeHeader.querySelector('.sort-indicator');\n      if (indicator) {\n        indicator.textContent = direction === 'asc' ? '↑' : '↓';\n      }\n    };\n\n    // Ayudante para convertir texto de fecha a objeto Date\n    const parseDate = (dateStr) => {\n      if (dateStr === 'N/A' || dateStr === 'Fecha incorrecta') {\n        return new Date(0); // Para valores no fechas, usar una fecha muy antigua\n      }\n      \n      // Intenta analizar la fecha en formato DD/MM/YYYY\n      const parts = dateStr.split(/[\\/\\-]/);\n      if (parts.length === 3) {\n        // Asumir formato DD/MM/YYYY\n        return new Date(parts[2], parts[1] - 1, parts[0]);\n      }\n      \n      // Como último recurso, intentar crear fecha directamente\n      return new Date(dateStr);\n    };\n\n    // Agregar eventos de clic a las columnas\n    sortColumns.forEach(col => {\n      col.addEventListener('click', () => {\n        // Si es la misma columna, cambiar dirección\n        if (col.id === currentSortColumn) {\n          currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n          // Si es una nueva columna, establecer como ascendente\n          currentSortColumn = col.id;\n          currentSortDirection = 'asc';\n        }\n        \n        sortTable(currentSortColumn, currentSortDirection);\n      });\n    });\n\n    // Ordenar por fecha ascendente al cargar la página\n    sortTable('sort-fecha', 'asc');\n    \n\n  });\n  // Crear un modal personalizado para interacciones con el usuario\n  function crearModalPersonalizado() {\n    // Comprobar si ya existe un modal\n    let modal = document.getElementById('modal-personalizado');\n    if (modal) return modal;\n    \n    // Crear el modal\n    modal = document.createElement('div');\n    modal.id = 'modal-personalizado';\n    modal.className = 'fixed inset-0 flex items-center justify-center z-50 hidden';\n    modal.innerHTML = `\n      <div class=\"fixed inset-0 bg-black bg-opacity-25\" onclick=\"document.getElementById('modal-personalizado').classList.add('hidden')\"></div>\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-auto z-50 relative shadow-lg\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\" id=\"modal-titulo\"></h3>\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\" id=\"modal-mensaje\"></p>\n        <div class=\"flex justify-end space-x-4\">\n          <button id=\"modal-btn-cancelar\" class=\"px-4 py-2 bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 focus:outline-none\">Cancelar</button>\n          <button id=\"modal-btn-confirmar\" class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none\">Confirmar</button>\n        </div>\n      </div>\n    `;\n    document.body.appendChild(modal);\n    \n    // Configurar el botón Cancelar\n    const btnCancelar = modal.querySelector('#modal-btn-cancelar');\n    btnCancelar.addEventListener('click', function() {\n      modal.classList.add('hidden');\n    });\n    \n    return modal;\n  }\n  \n  // Función para mostrar una notificación\n  function mostrarNotificacion(mensaje, tipo = 'success') {\n    // Crear elemento de notificación\n    const notificacion = document.createElement('div');\n    notificacion.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg text-white ${tipo === 'success' ? 'bg-green-500' : 'bg-red-500'} z-50 animate-fadeIn`;\n    notificacion.textContent = mensaje;\n    document.body.appendChild(notificacion);\n    \n    // Eliminar después de 3 segundos\n    setTimeout(() => {\n      notificacion.classList.add('animate-fadeOut');\n      setTimeout(() => {\n        notificacion.remove();\n      }, 500);\n    }, 3000);\n  }\n  \n  // Añadir botones de acciones a la tabla de partos\n  document.addEventListener('DOMContentLoaded', function() {\n    console.log('DOM cargado: Inicializando funcionalidades de animal...');\n    \n    // Agregar estilos para animaciones\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      @keyframes fadeOut {\n        from { opacity: 1; transform: translateY(0); }\n        to { opacity: 0; transform: translateY(10px); }\n      }\n      .animate-fadeIn {\n        animation: fadeIn 0.3s ease-out forwards;\n      }\n      .animate-fadeOut {\n        animation: fadeOut 0.3s ease-in forwards;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    // Crear modal personalizado\n    const modal = crearModalPersonalizado();\n    \n    const tablaPartos = document.getElementById('tabla-partos');\n    if (!tablaPartos) return;\n    \n    const tbody = tablaPartos.querySelector('tbody');\n    if (!tbody) return;\n    \n    // No añadir botones si no hay partos (solo hay mensaje de 'no hay registros')\n    const filasVacias = tbody.querySelectorAll('tr[data-empty=\"true\"]');\n    if (filasVacias.length > 0) return;\n    \n    // Añadir columna de acciones al encabezado\n    const thead = tablaPartos.querySelector('thead tr');\n    if (thead) {\n      const thAcciones = document.createElement('th');\n      thAcciones.scope = 'col';\n      thAcciones.className = 'px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider';\n      thAcciones.textContent = 'Acciones';\n      thead.appendChild(thAcciones);\n    }\n    \n    // Añadir botones a cada fila\n    const filas = tbody.querySelectorAll('tr');\n    filas.forEach(function(fila) {\n      // Si es una fila vacía, no añadir botones\n      if (fila.getAttribute('data-empty') === 'true') return;\n      \n      // Extraer el ID del parto - intentaremos obtenerlo de un atributo data-id\n      // Si no está disponible, usaremos un ID generado\n      const partoId = fila.getAttribute('data-id') || `parto-${Math.floor(Math.random() * 1000000)}`;\n      \n      // Crear celda para botones\n      const tdAcciones = document.createElement('td');\n      tdAcciones.className = 'px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400';\n      \n      // Botón editar\n      const btnEditar = document.createElement('button');\n      btnEditar.className = 'bg-gray-100 text-blue-600 py-1 px-3 rounded-md mr-2 text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-blue-400 dark:hover:bg-gray-600';\n      btnEditar.title = 'Editar información del parto';\n      btnEditar.textContent = 'Editar';\n      btnEditar.setAttribute('data-id', partoId);\n      \n      // Botón eliminar\n      const btnEliminar = document.createElement('button');\n      btnEliminar.className = 'bg-gray-100 text-red-600 py-1 px-3 rounded-md text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-red-400 dark:hover:bg-gray-600';\n      btnEliminar.textContent = 'Eliminar';\n      btnEliminar.setAttribute('data-id', partoId);\n      btnEliminar.title = 'Eliminar parto';\n      \n      // Añadir botones a la celda\n      tdAcciones.appendChild(btnEditar);\n      tdAcciones.appendChild(btnEliminar);\n      \n      // Añadir celda a la fila\n      fila.appendChild(tdAcciones);\n      \n      // Evento para editar parto\n      btnEditar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        console.log('Editando parto:', partoId);\n        \n        // Usar la función del script editar-parto-v4.js\n        if (window.editarPartoV4 && window.editarPartoV4.mostrarModal) {\n          window.editarPartoV4.mostrarModal(partoId, fila);\n        } else {\n          console.error('No se ha cargado correctamente el script de edición de partos v4');\n          mostrarNotificacion('Error al cargar el editor de partos', 'error');\n        }\n      });\n      \n      // Evento para eliminar parto\n      btnEliminar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        const rect = this.getBoundingClientRect();\n        \n        // Configurar el modal\n        document.getElementById('modal-titulo').textContent = 'Eliminar parto';\n        document.getElementById('modal-mensaje').textContent = '¿Seguro que desea eliminar este parto? Esta acción no se puede deshacer.';\n        \n        // Mostrar el modal\n        modal.classList.remove('hidden');\n        \n        // Configurar el botón Confirmar\n        const btnConfirmar = modal.querySelector('#modal-btn-confirmar');\n        btnConfirmar.onclick = function() {\n          modal.classList.add('hidden');\n          console.log('Eliminando parto:', partoId);\n          \n          const token = localStorage.getItem('token');\n          if (!token) {\n            mostrarNotificacion('Error: No se ha encontrado el token de autenticación', 'error');\n            return;\n          }\n          \n          // Obtener el ID del animal de la URL\n          const animalIdMatch = window.location.pathname.match(/\\/animals\\/([0-9]+)/);\n          const animalId = animalIdMatch ? animalIdMatch[1] : null;\n          \n          if (!animalId) {\n            alert('Error: No se pudo determinar el ID del animal');\n            return;\n          }\n          \n          // Vamos a intentar diferentes rutas de API en orden de prioridad\n          const apiUrls = [\n            `http://localhost:8000/api/v1/animals/${animalId}/partos/${partoId}`, // Ruta preferida con ID de animal\n            `http://localhost:8000/api/v1/partos/${partoId}` // Ruta alternativa\n          ];\n          \n          // Probar con el endpoint principal (animal_id/partos/parto_id)\n          console.log(`Intentando eliminar parto ${partoId} del animal ${animalId}`);\n          fetch(apiUrls[0], {\n            method: 'DELETE',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(function(response) {\n            if (!response.ok) {\n              // Si el primer endpoint falla, probar con el endpoint alternativo\n              console.log(`Endpoint principal falló con ${response.status}, intentando endpoint alternativo...`);\n              return fetch(apiUrls[1], {\r\n                method: 'DELETE',\r\n                headers: {\r\n                  'Authorization': `Bearer ${token}`,\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              });\r\n            }\r\n            \r\n            // Algunos endpoints no devuelven JSON válido\r\n            return response.json().catch(() => ({ success: true }));\r\n          })\r\n          .then(function(responseOrData) {\r\n            // Si es una respuesta HTTP de la segunda petición\r\n            if (responseOrData instanceof Response) {\r\n              const response = responseOrData;\r\n              if (!response.ok) {\r\n                throw new Error(`Error en la API: ${response.status}`);\r\n              }\r\n              \r\n              // Algunos endpoints no devuelven JSON válido\r\n              return response.json().catch(() => ({ success: true }));\r\n            }\r\n            \r\n            // Si son datos de una petición exitosa anterior\r\n            return responseOrData;\r\n          })\r\n          .then(function(data) {\r\n            console.log('Parto eliminado correctamente:', data);\r\n            \r\n            // Eliminar la fila de la tabla\r\n            if (fila) {\r\n              fila.remove();\r\n              \r\n              // Si no quedan filas, mostrar mensaje\r\n              const filas = tablaPartos.querySelectorAll('tbody tr');\r\n              if (filas.length === 0) {\r\n                const tbody = tablaPartos.querySelector('tbody');\r\n                if (tbody) {\r\n                  const tr = document.createElement('tr');\r\n                  tr.setAttribute('data-empty', 'true');\r\n                  tr.innerHTML = `\r\n                    <td colspan=\"5\" class=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\r\n                      No hay registros de partos para este animal\r\n                    </td>\r\n                  `;\r\n                  tbody.appendChild(tr);\r\n                }\r\n              }\r\n            }\r\n            \r\n            mostrarNotificacion('Parto eliminado correctamente', 'success');\r\n          })\r\n          .catch(function(error) {\r\n            console.error('Error al eliminar parto:', error);\r\n            \r\n            // Intentar mostrar un mensaje más descriptivo basado en el error\r\n            let mensajeError = error.message || 'Error desconocido';\r\n            \r\n            // Si es un error específico de API, intentar extraer más información\r\n            if (mensajeError.includes('500')) {\r\n              mensajeError = 'Error interno del servidor. Posible problema con la base de datos.';\r\n            } else if (mensajeError.includes('404')) {\r\n              mensajeError = 'No se encontró el recurso. Es posible que el parto ya haya sido eliminado.';\r\n            } else if (mensajeError.includes('403')) {\r\n              mensajeError = 'No tiene permisos para eliminar este parto.';\r\n            } else if (mensajeError.includes('401')) {\r\n              mensajeError = 'Su sesión ha expirado. Por favor, inicie sesión nuevamente.';\r\n            }\r\n            \r\n            mostrarNotificacion(`Error al eliminar parto: ${mensajeError}`, 'error');\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["scriptHistorial","tabChanges","scriptPartos","exportPdfBtn","exportPartosPdfBtn","exportChangesPdfBtn","exportAnimalToPDF","animalName","animalId","currentLang","jsPDF","doc","title","date","logoY","contentStartY","logoUrl","pageWidth","logoX","logoHeight","error","datos","section","item","label","value","generoAnimal","d","esVaca","nextY","partosRows","partosContainer","partosFilas","hayPartos","fila","celdas","fecha","genero","estado","obs","partosHead","observaciones","observacionesText","pageCount","i","translations","t","key","lang","translateAnimalFile","idElement","animalIdFromUrl","el","element","iconPrefix","estadoElement","isActive","labelText","translationKey","tab","header","headerText","desc","descText","th","sortIndicator","button","valueText","e","traducirTodoForzado","btn","celda","texto","span","retryButton","tabs","contents","showTab","tabId","content","selectedTab","contentId","selectedContent","sortColumns","currentSortColumn","currentSortDirection","sortTable","columnId","direction","table","tbody","sortedRows","columnIndex","a","b","cellA","cellB","dateA","parseDate","dateB","row","col","indicator","dateStr","parts","crearModalPersonalizado","modal","mostrarNotificacion","mensaje","tipo","notificacion","style","tablaPartos","thead","thAcciones","partoId","tdAcciones","btnEditar","btnEliminar","event","btnConfirmar","token","animalIdMatch","apiUrls","response","responseOrData","data","tr","mensajeError"],"mappings":"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"}