{"version":3,"file":"profile.astro.mjs","sources":["../../../src/components/profile/ProfileManagement.tsx","../../../src/pages/profile/index.astro"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getStoredUser, isAuthenticated } from '../../services/authService';\nimport type { User, UserRole } from '../../services/authService';\nimport { getCurrentRole } from '../../services/roleService';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const ProfileManagement: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Estado para el formulario de cambio de contrase침a\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [currentRole, setCurrentRole] = useState('');\n\n  useEffect(() => {\n    // Verificamos que el usuario est칠 autenticado\n    if (!isAuthenticated()) {\n      setError('Debes iniciar sesi칩n para ver esta p치gina');\n      setLoading(false);\n      return;\n    }\n\n    // Obtenemos la informaci칩n del usuario actual\n    let user = getStoredUser();\n    \n    // Usamos SOLO la informaci칩n del token JWT para determinar el usuario\n    const tokenData = localStorage.getItem('token');\n    \n    if (tokenData) {\n      try {\n        // Decodificar el token JWT para obtener la informaci칩n real del usuario\n        const decoded = jwtDecode<{ sub?: string; role?: string }>(tokenData);\n        console.log('Token JWT decodificado:', decoded);\n        \n        const tokenUsername = decoded.sub || '';\n        const tokenRole = decoded.role || '';\n        \n        // Si el token indica que es Ramon, usar datos de Ramon\n        if (tokenUsername === 'Ramon' || tokenRole === 'Ramon') {\n          console.log('游닇 Usuario Ramon detectado en el token JWT - usando datos reales');\n          user = {\n            id: 14, // ID real de Ramon seg칰n se verific칩 en la base de datos\n            username: 'Ramon',\n            email: 'ramon@prueba.com', // Email correcto seg칰n la base de datos\n            // Eliminamos el campo full_name que no existe realmente en la DB\n            role: 'Ramon' as UserRole,\n            is_active: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n          \n          // Actualizamos localStorage con los datos correctos\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('userRole', 'Ramon'); \n          localStorage.setItem('username', 'Ramon');\n        } \n        // Si el token indica que es admin u otro usuario\n        else {\n          console.log(`游닇 Usuario ${tokenUsername} detectado en el token JWT - usando datos del token`);\n          user = {\n            id: 1, // ID provisional\n            username: tokenUsername,\n            email: `${tokenUsername.toLowerCase()}@mascletimperi.com`,\n            // Eliminamos el campo full_name que no existe realmente en la DB\n            role: (tokenRole as UserRole) || 'usuario',\n            is_active: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n          \n          // Actualizar localStorage para mantener coherencia\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('userRole', tokenRole); \n          localStorage.setItem('username', tokenUsername);\n        }\n      } catch (err) {\n        console.error('Error al procesar el token JWT:', err);\n      }\n    }\n    \n    if (!user) {\n      setError('No se pudo obtener la informaci칩n del usuario');\n      setLoading(false);\n      return;\n    }\n\n    // Aseguramos que el rol sea correcto para los usuarios espec칤ficos\n    if (user) {\n      if (user.username === 'admin' && user.role !== 'administrador') {\n        console.log('Corrigiendo rol para usuario admin de:', user.role, 'a: administrador');\n        user.role = 'administrador';\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n      \n      // Asegurarse que Ramon siempre tiene el rol correcto\n      if (user.username === 'Ramon' && user.role !== 'Ramon') {\n        console.log('Corrigiendo rol para usuario Ramon de:', user.role, 'a: Ramon');\n        user.role = 'Ramon' as UserRole;\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('ramonFix', 'true'); // Marcar indicador\n        localStorage.setItem('userRole', 'Ramon');\n      }\n    }\n\n    // Obtener el rol actualizado\n    const actualRole = getCurrentRole();\n    console.log('Rol actual detectado:', actualRole);\n\n    setCurrentUser(user);\n    setCurrentRole(actualRole);\n    setLoading(false);\n  }, []);\n\n  const handlePasswordChange = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validaci칩n b치sica\n    if (!oldPassword || !newPassword || !confirmPassword) {\n      setPasswordError('Todos los campos son obligatorios');\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Las nuevas contrase침as no coinciden');\n      return;\n    }\n\n    if (newPassword.length < 8) {\n      setPasswordError('La nueva contrase침a debe tener al menos 8 caracteres');\n      return;\n    }\n\n    setPasswordError(null);\n    setLoading(true);\n    \n    try {\n      // Hacer la petici칩n al backend para cambiar la contrase침a\n      const response = await fetch('/api/v1/users/me/password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          current_password: oldPassword,\n          new_password: newPassword\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Error al cambiar la contrase침a');\n      }\n\n      // Limpiar formulario y mostrar mensaje de 칠xito\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setSuccess('Contrase침a actualizada correctamente');\n      \n      // Ocultar mensaje de 칠xito despu칠s de 5 segundos\n      setTimeout(() => {\n        setSuccess(null);\n      }, 5000);\n    } catch (err) {\n      setPasswordError((err as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center p-4\">Cargando...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <strong className=\"font-bold\">Error:</strong>\n        <span className=\"block sm:inline\"> {error}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6\">\n      {currentUser && (\n        <>\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Informaci칩n del usuario</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Nombre de usuario</p>\n                <p className=\"font-medium\">{currentUser?.username}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Correo electr칩nico</p>\n                <p className=\"font-medium\">{currentUser?.email}</p>\n              </div>\n              {/* Campo Nombre completo eliminado - no existe en la DB */}\n              <div>\n                <p className=\"text-sm text-gray-600\">Rol</p>\n                <p className=\"font-medium\">{currentUser?.role}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"border-t pt-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Cambiar contrase침a</h2>\n            \n            {success && (\n              <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n                <span className=\"block sm:inline\">{success}</span>\n              </div>\n            )}\n            \n            {passwordError && (\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n                <span className=\"block sm:inline\">{passwordError}</span>\n              </div>\n            )}\n            \n            <form onSubmit={handlePasswordChange}>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"oldPassword\">\n                  Contrase침a actual\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"oldPassword\"\n                  type=\"password\"\n                  value={oldPassword}\n                  onChange={(e) => setOldPassword(e.target.value)}\n                  placeholder=\"Ingresa tu contrase침a actual\"\n                />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"newPassword\">\n                  Nueva contrase침a\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"newPassword\"\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  placeholder=\"Ingresa tu nueva contrase침a\"\n                />\n              </div>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\n                  Confirmar nueva contrase침a\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  placeholder=\"Confirma tu nueva contrase침a\"\n                />\n              </div>\n              \n              <div className=\"flex items-center justify-end\">\n                <button\n                  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline disabled:opacity-50\"\n                  type=\"submit\"\n                  disabled={loading}\n                >\n                  {loading ? 'Procesando...' : 'Cambiar contrase침a'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","---\n// Importar el layout\nimport DefaultLayout from '../../layouts/DefaultLayout.astro';\nimport { ProfileManagement } from '../../components/profile/ProfileManagement';\nimport { t, getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual\nconst lang = getCurrentLanguage();\n\n// Definir t칤tulo usando i18n\nconst title = `${t('ui.edit_profile', lang)} | Masclet Imperi`;\n---\n\n<DefaultLayout title={title}>\n  <div class=\"mb-6\">\n    <h1 class=\"text-3xl font-bold text-gray-900\">{t('ui.edit_profile', lang)}</h1>\n    <p class=\"text-gray-600\">{lang === 'ca' ? 'Gestiona la teva informaci칩 personal i contrasenya' : 'Gestiona tu informaci칩n personal y contrase침a'}</p>\n  </div>\n\n  <ProfileManagement client:load />\n</DefaultLayout>\n"],"names":["$$createComponent","$$render","$$renderComponent","DefaultLayout","$$result","$$maybeRenderHead"],"mappings":"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"}