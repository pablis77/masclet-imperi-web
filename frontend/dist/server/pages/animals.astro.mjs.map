{"version":3,"file":"animals.astro.mjs","sources":["../../../src/components/animals/AnimalTable.tsx","../../../src/components/animals/AnimalFilters.tsx","../../../src/pages/animals/index.astro"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport animalService from '../../services/animalService';\nimport type { Animal, AnimalFilters, PaginatedResponse } from '../../services/animalService';\n// import { t } from '../../i18n/config';\n\n// Implementación directa de traducciones para solucionar problemas de importación\nconst translations = {\n  es: {\n    'animals.table.type': 'Tipo',\n    'animals.table.name': 'Nombre',\n    'animals.table.code': 'Código',\n    'animals.table.exploitation': 'Explotación',\n    'animals.table.status': 'Estado',\n    'animals.table.actions': 'Acciones',\n    'animals.table.view': 'Ver',\n    'animals.table.update': 'Actualizar',\n    'animals.table.active': 'Activo',\n    'animals.table.inactive': 'Baja',\n    'animals.male': 'Macho',\n    'animals.female': 'Hembra'\n  },\n  ca: {\n    'animals.table.type': 'Tipus',\n    'animals.table.name': 'Nom',\n    'animals.table.code': 'Codi',\n    'animals.table.exploitation': 'Explotació',\n    'animals.table.status': 'Estat',\n    'animals.table.actions': 'Accions',\n    'animals.table.view': 'Veure',\n    'animals.table.update': 'Actualitzar',\n    'animals.table.active': 'Actiu',\n    'animals.table.inactive': 'Baixa',\n    'animals.male': 'Mascle',\n    'animals.female': 'Femella'\n  }\n};\n\n// Función de traducción directa con diagnóstico\nfunction t(key: string, lang: string): string {\n  // Forzamos españól si no es un idioma válido\n  if (lang !== 'es' && lang !== 'ca') {\n    lang = 'es';\n  }\n  \n  try {\n    // Traducciones directas para cada idioma\n    const translationsForLang = translations[lang as 'es' | 'ca'];\n    \n    // Verificar si la clave existe en el diccionario de traducciones\n    if (key in translationsForLang) {\n      return translationsForLang[key];\n    } else {\n      console.warn(`[Translation] Clave no encontrada: ${key} para idioma: ${lang}`);\n      return key; // Devolvemos la clave si no hay traducción\n    }\n  } catch (error) {\n    console.error(`[Translation] Error al traducir ${key}:`, error);\n    return key;\n  }\n}\n\ninterface AnimalTableProps {\n  initialFilters?: AnimalFilters;\n  id?: string;\n  canEdit?: boolean;\n  canCreate?: boolean;\n}\n\nconst AnimalTable: React.FC<AnimalTableProps> = ({ initialFilters = {}, id, canEdit = false, canCreate = false }) => {\n  const [animals, setAnimals] = useState<Animal[]>([]);\n  const [loading, setLoading] = useState<boolean>(false); \n  const [error, setError] = useState<string | null>(null);\n  const [filters, setFilters] = useState<AnimalFilters>(initialFilters);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [totalAnimals, setTotalAnimals] = useState<number>(0);\n  const [useMockData, setUseMockData] = useState(false);\n  const [searchInfo, setSearchInfo] = useState<{\n    term: string;\n    count: number;\n    total: number;\n    usedMock: boolean;\n    reason?: string;\n  } | null>(null);\n  const tableRef = useRef<HTMLDivElement>(null);\n  const loadTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Configuración para multilenguaje - Solución para SSR\n  const [currentLang, setCurrentLang] = useState('es'); // Valor por defecto para SSR\n  const [isClient, setIsClient] = useState(false);\n  \n  // Sistema de idioma simple v3 - Compatible con SSR\n  useEffect(() => {\n    // Marcamos que estamos en el cliente\n    setIsClient(true);\n    \n    // Ahora es seguro acceder al localStorage\n    const userLang = localStorage.getItem('userLanguage') || 'es';\n    console.log('[AnimalTable] Idioma detectado:', userLang);\n    setCurrentLang(userLang);\n  }, []); // Se ejecuta solo al montar el componente\n  \n  // Función auxiliar para formatear texto con variables\n  const formatText = (text: string, ...args: any[]) => {\n    return text.replace(/{(\\d+)}/g, (match, number) => {\n      return typeof args[number] !== 'undefined' ? args[number].toString() : match;\n    });\n  };\n\n  const loadAnimals = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Establecer un timeout para evitar carga indefinida\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n      }\n      \n      loadTimeoutRef.current = setTimeout(() => {\n        if (loading) {\n          setLoading(false);\n          setError('Tiempo de espera agotado. Por favor, intenta de nuevo.');\n        }\n      }, 10000); // 10 segundos de timeout\n      \n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Detectar si estamos en Render para usar manejo especial\n      const isRenderEnvironment = window.location.hostname.includes('render.com');\n      \n      let response;\n      try {\n        console.log(`Cargando animales - Página: ${currentPage}, Límite: 15`);\n        response = await animalService.getAnimals({\n          ...filters,\n          page: currentPage, // Usar la página actual seleccionada\n          limit: 15 // Mostrar 15 animales por página para mejor experiencia de usuario\n        });\n      } catch (error) {\n        console.error('Error al obtener animales desde API:', error);\n        // Si estamos en Render y hay un error, usar datos simulados\n        if (isRenderEnvironment) {\n          console.warn('Detectado entorno Render: usando respuesta alternativa');\n          response = { items: [], total: 0, page: 1, limit: 10, pages: 1 };\n        } else {\n          // En local, propagar el error normalmente\n          throw error;\n        }\n      }\n      \n      // SOLUCIÓN DEFENSIVA PARA RENDER\n      // Verificar y reparar la respuesta si es necesario\n      if (isRenderEnvironment || !response.items || !Array.isArray(response.items)) {\n        console.log('Aplicando corrección defensiva a la respuesta');\n        \n        // Asegurar que tenemos una estructura válida\n        if (!response || typeof response !== 'object') {\n          response = { items: [], total: 0, page: 1, limit: 10, pages: 1 };\n        }\n        \n        // Reparar response.items si no es un array\n        if (!response.items) {\n          response.items = [];\n        } else if (!Array.isArray(response.items)) {\n          console.warn('response.items no es un array, intentando reparar');\n          \n          // Intentar convertir a array si es un objeto\n          if (typeof response.items === 'object') {\n            const tempItems = [];\n            try {\n              // Intentar extraer valores del objeto\n              Object.values(response.items).forEach(item => {\n                if (item && typeof item === 'object') {\n                  tempItems.push(item);\n                }\n              });\n              response.items = tempItems.length > 0 ? tempItems : [];\n            } catch (e) {\n              console.error('Error al intentar reparar items:', e);\n              response.items = [];\n            }\n          } else {\n            response.items = [];\n          }\n        }\n      }\n      \n      // Ahora sabemos que response.items es seguro para usar\n      let orderedAnimals = [...response.items];\n      if (filters.search && filters.search.trim() !== '') {\n        const searchTerm = filters.search.trim().toLowerCase();\n        // Ordenar los resultados localmente por nombre coincidente\n        orderedAnimals.sort((a, b) => {\n          // Coincidencia exacta de nombre (máxima prioridad)\n          const aExactMatch = a.nom?.toLowerCase() === searchTerm;\n          const bExactMatch = b.nom?.toLowerCase() === searchTerm;\n          if (aExactMatch && !bExactMatch) return -1;\n          if (!aExactMatch && bExactMatch) return 1;\n          \n          // Coincide al inicio del nombre (segunda prioridad)\n          const aStartsWith = a.nom?.toLowerCase().startsWith(searchTerm);\n          const bStartsWith = b.nom?.toLowerCase().startsWith(searchTerm);\n          if (aStartsWith && !bStartsWith) return -1;\n          if (!aStartsWith && bStartsWith) return 1;\n          \n          // Coincide en cualquier parte del nombre (tercera prioridad)\n          const aContains = a.nom?.toLowerCase().includes(searchTerm);\n          const bContains = b.nom?.toLowerCase().includes(searchTerm);\n          if (aContains && !bContains) return -1;\n          if (!aContains && bContains) return 1;\n          \n          // Si los criterios son iguales, mantener el orden original\n          return 0;\n        });\n        \n        console.log('Animales ordenados localmente:', orderedAnimals.map(a => a.nom || 'Sin nombre'));\n      }\n      \n      setAnimals(orderedAnimals);\n      setTotalAnimals(response.total || 0);\n      setTotalPages(response.pages || 1);\n      \n      document.dispatchEvent(new CustomEvent('animals-loaded', {\n        detail: {\n          total: response.total || 0,\n          filtered: response.items?.length || 0,\n          page: response.page || 1,\n          pages: response.pages || 1\n        }\n      }));\n    } catch (err: any) {\n      console.error('Error cargando animales:', err);\n      \n      // Manejar específicamente el error de estado_t\n      if (err.code === 'DB_COLUMN_ERROR' || (err.message && err.message.includes('estado_t'))) {\n        setError('La columna \"estado_t\" no existe en la tabla de animales. Este es un problema conocido del backend que está siendo solucionado. Mientras tanto, se mostrarán datos simulados si están disponibles.');\n        setUseMockData(true);\n      } else {\n        setError(err.message || 'Error al cargar los animales');\n      }\n      \n      setAnimals([]);\n      setTotalAnimals(0);\n      setTotalPages(0);\n    } finally {\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n        loadTimeoutRef.current = null;\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadAnimals();\n    \n    return () => {\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Efecto para cargar animales cuando cambia la página o los filtros\n  useEffect(() => {\n    // Cargar animales siempre que cambie la página o los filtros\n    loadAnimals();\n  }, [filters, currentPage]);\n\n  useEffect(() => {\n    const handleApplyFilters = (event: CustomEvent<AnimalFilters>) => {\n      setFilters(event.detail);\n      setCurrentPage(1); \n      // Limpiar la información de búsqueda cuando se aplican nuevos filtros\n      if (!event.detail.search) {\n        setSearchInfo(null);\n      }\n    };\n\n    const handleRefreshAnimals = () => {\n      loadAnimals();\n      setSearchInfo(null); // Limpiar información de búsqueda al refrescar\n    };\n    \n    const handleSearchCompleted = (event: CustomEvent<{\n      term: string;\n      count: number;\n      total: number;\n      usedMock: boolean;\n      reason?: string;\n    }>) => {\n      setSearchInfo(event.detail);\n      setUseMockData(event.detail.usedMock);\n      \n      if (event.detail.usedMock) {\n        setError(`Nota: Mostrando resultados simulados debido a un ${event.detail.reason}. Se encontraron ${event.detail.count} coincidencias para \"${event.detail.term}\".`);\n      } else {\n        // Si la búsqueda fue exitosa, limpiar mensaje de error\n        setError(null);\n      }\n    };\n\n    document.addEventListener('refresh-animals', handleRefreshAnimals);\n    document.addEventListener('reload-animals', handleRefreshAnimals); // Añadir listener para el nuevo evento\n    document.addEventListener('search-completed', handleSearchCompleted as EventListener);\n\n    const rootElement = document.getElementById(id || '');\n    if (rootElement) {\n      rootElement.addEventListener('apply-filters', handleApplyFilters as EventListener);\n    } else {\n      document.addEventListener('filters-applied', handleApplyFilters as EventListener);\n    }\n\n    return () => {\n      document.removeEventListener('refresh-animals', handleRefreshAnimals);\n      document.removeEventListener('reload-animals', handleRefreshAnimals); // Eliminar listener al desmontar\n      document.removeEventListener('search-completed', handleSearchCompleted as EventListener);\n      if (rootElement) {\n        rootElement.removeEventListener('apply-filters', handleApplyFilters as EventListener);\n      } else {\n        document.removeEventListener('filters-applied', handleApplyFilters as EventListener);\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const totalAnimalsContainer = document.getElementById('totalAnimalsContainer');\n    if (totalAnimalsContainer) {\n      if (loading) {\n        totalAnimalsContainer.innerHTML = `\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 flex items-center\">\n            <div class=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-primary mr-2\"></div>\n            Cargando...\n          </span>\n        `;\n      } else {\n        // Si hay información de búsqueda, mostrarla\n        if (searchInfo && searchInfo.term) {\n          const mockBadge = searchInfo.usedMock ? \n            '<span class=\"ml-1 px-1 py-0.5 text-xs bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-200 rounded\">DATOS SIMULADOS</span>' : \n            '';\n          \n          totalAnimalsContainer.innerHTML = `\n            <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n              Total: ${totalAnimals} animales | Búsqueda: \"${searchInfo.term}\" (${searchInfo.count} coincidencias) ${mockBadge}\n            </span>\n          `;\n        } else {\n          // Mensaje normal sin búsqueda\n          const mockBadge = useMockData ? \n            '<span class=\"ml-1 px-1 py-0.5 text-xs bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-200 rounded\">DATOS SIMULADOS</span>' : \n            '';\n          \n          totalAnimalsContainer.innerHTML = `\n            <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n              Total: ${totalAnimals} animales ${mockBadge}\n            </span>\n          `;\n        }\n      }\n    }\n  }, [totalAnimals, loading, searchInfo, useMockData]);\n\n  // Función para manejar el cambio de página\n  const handlePageChange = (page: number) => {\n    console.log(`Cambiando a página ${page}`);\n    \n    // No hacer nada si estamos en la misma página\n    if (page === currentPage) return;\n    \n    // Actualizar el estado de la página actual y forzar recarga\n    setCurrentPage(page);\n    \n    // Hacer scroll hacia arriba cuando cambiamos de página\n    if (tableRef.current) {\n      tableRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleAnimalDeactivation = async (animalId: number) => {\n    try {\n      await animalService.deleteAnimal(animalId);\n      loadAnimals();\n    } catch (err) {\n      console.error('Error al dar de baja al animal:', err);\n      alert('No se pudo dar de baja al animal. Por favor, inténtalo de nuevo.');\n    }\n  };\n\n  \n  // Implementación de controles de paginación\n  const renderPagination = () => {\n    // Solo mostrar controles si hay más de una página\n    if (totalPages <= 1) return null;\n    \n    return (\n      <div className=\"flex items-center justify-center mt-6 space-x-1\">\n        {/* Botón primera página */}\n        <button \n          onClick={() => handlePageChange(1)} \n          disabled={currentPage === 1}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === 1 \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Primera</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n          </svg>\n        </button>\n        \n        {/* Botón anterior */}\n        <button \n          onClick={() => handlePageChange(currentPage - 1)} \n          disabled={currentPage === 1}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === 1 \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Anterior</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n        \n        {/* Números de página */}\n        {[...Array(totalPages)].map((_, index) => {\n          const pageNumber = index + 1;\n          // Mostrar solo páginas relevantes\n          if (\n            pageNumber === 1 ||\n            pageNumber === totalPages ||\n            (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n          ) {\n            return (\n              <button\n                key={pageNumber}\n                onClick={() => handlePageChange(pageNumber)}\n                className={`inline-flex items-center px-3 py-1 border text-sm font-medium rounded-md \n                          ${pageNumber === currentPage \n                            ? 'bg-primary/10 dark:bg-primary/30 text-primary border-primary/20 dark:border-primary/40' \n                            : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n              >\n                {pageNumber}\n              </button>\n            );\n          } else if (\n            pageNumber === currentPage - 2 ||\n            pageNumber === currentPage + 2\n          ) {\n            return <span key={`ellipsis-${pageNumber}`} className=\"px-1 text-gray-500 dark:text-gray-400\">...</span>;\n          }\n          return null;\n        })}\n        \n        {/* Botón siguiente */}\n        <button \n          onClick={() => handlePageChange(currentPage + 1)} \n          disabled={currentPage === totalPages}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === totalPages \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Siguiente</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n        \n        {/* Botón última página */}\n        <button \n          onClick={() => handlePageChange(totalPages)} \n          disabled={currentPage === totalPages}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === totalPages \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Última</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    );\n  };\n\n  const getAnimalIcon = (animal: Animal) => {\n    const iconClass = \"text-2xl\";\n    \n    if (animal.genere === 'M') {\n      return <span className={iconClass}>🐂</span>; // Toro\n    } else {\n      if (animal.alletar !== '0') {\n        return <span className={iconClass}>🐄</span>; // Vaca amamantando\n      } else {\n        return <span className={iconClass}>🐮</span>; // Vaca\n      }\n    }\n  };\n\n  const renderStatusBadge = (animal: Animal) => {\n    const statusClass = animal.estado === 'OK' ?\n      'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n      'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}`}>\n        {animal.estado === 'OK' ? t('animals.table.active', currentLang) : t('animals.table.inactive', currentLang)}\n      </span>\n    );\n  };\n\n  return (\n    <div ref={tableRef} className=\"w-full overflow-x-auto\">\n      {/* Mensaje de datos simulados */}\n      {useMockData && (\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/30 border-l-4 border-yellow-400 p-4 mb-4\">\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-yellow-700 dark:text-yellow-200\">\n                Mostrando datos simulados. No se pudo conectar con el servidor. Los animales mostrados son de ejemplo y no reflejan datos reales.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Mensaje de error */}\n      {error && (\n        <div className=\"bg-red-50 dark:bg-red-900/30 border-l-4 border-red-400 p-4 mb-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700 dark:text-red-200\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {loading ? (\n        <div className=\"flex justify-center items-center p-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\n          <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Cargando animales...</span>\n        </div>\n      ) : animals.length === 0 ? (\n        <div className=\"text-center py-8 bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-100 dark:border-gray-700\">\n          <p className=\"text-gray-600 dark:text-gray-300 text-lg\">No se encontraron animales</p>\n          <p className=\"text-gray-500 dark:text-gray-400 mt-2\">Intenta con otros filtros o importa datos de prueba</p>\n          <button \n            onClick={loadAnimals}\n            className=\"mt-4 bg-primary hover:bg-primary/80 text-white px-4 py-2 rounded-md transition-colors\"\n          >\n            Reintentar\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"overflow-x-auto bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-100 dark:border-gray-700\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n              <thead className=\"bg-gray-100 dark:bg-gray-800\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Tipus' : 'Tipo'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Nom' : 'Nombre'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Codi' : 'Código'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Explotació' : 'Explotación'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Estat' : 'Estado'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Accions' : 'Acciones'}\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                {animals.map((animal) => (\n                  <tr key={animal.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"px-4 py-4 whitespace-nowrap text-center\">\n                      <a href={`/animals/${animal.id}`} className=\"cursor-pointer hover:scale-110 transition-transform inline-block\" title={animal.alletar === '0' ? 'No amamantando' : animal.alletar === '1' ? 'Amamantando 1 ternero' : 'Amamantando 2 terneros'}>\n                        {getAnimalIcon(animal)}\n                      </a>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-gray-200\">\n                        {animal.nom}\n                      </div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {animal.genere === 'M' ? t('animals.male', currentLang) : t('animals.female', currentLang)}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-gray-200\">\n                        {animal.cod || '-'}\n                      </div>\n                      {animal.num_serie && (\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          Serie: {animal.num_serie}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {animal.explotacio}\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      {renderStatusBadge(animal)}\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-2\">\n                        <a \n                          href={`/animals/${animal.id}`}\n                          className=\"inline-flex items-center px-2 py-1 bg-primary text-white rounded hover:bg-primary/80\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          </svg>\n                          {t('animals.table.view', currentLang)}\n                        </a>\n                        {canEdit && animal.estado === 'OK' && (\n                          <a \n                            href={`/animals/update/${animal.id}`}\n                            className=\"inline-flex items-center px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                            {t('animals.table.update', currentLang)}\n                          </a>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          {renderPagination()}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AnimalTable;\n","import React, { useState, useEffect } from 'react';\nimport type { AnimalFilters as AnimalFiltersType } from '../../services/animalService';\n\n// Objeto que almacenará las traducciones una vez esté en el cliente\nlet labelText = 'Buscar';\nlet placeholderText = 'Buscar por nombre, explotación, código...';\nlet clearButtonText = 'Limpiar';\nlet searchButtonText = 'BUSCAR';\n\n// Función para actualizar textos (se llamará en useEffect)\nfunction updateTexts(lang: string) {\n  if (lang === 'ca') {\n    labelText = 'Cercar';\n    placeholderText = 'Cercar per nom, explotació, codi...';\n    clearButtonText = 'Netejar';\n    searchButtonText = 'CERCAR';\n  } else {\n    labelText = 'Buscar';\n    placeholderText = 'Buscar por nombre, explotación, código...';\n    clearButtonText = 'Limpiar';\n    searchButtonText = 'BUSCAR';\n  }\n}\n\ninterface AnimalFiltersProps {\n  onApplyFilters?: (filters: AnimalFiltersType) => void;\n  initialFilters?: AnimalFiltersType;\n  id?: string;\n}\n\nconst AnimalFilters: React.FC<AnimalFiltersProps> = ({ \n  onApplyFilters, \n  initialFilters = {},\n  id\n}) => {\n  const [filters, setFilters] = useState<AnimalFiltersType>(initialFilters);\n  \n  // Gestión del idioma - simplificado para evitar problemas de hidratación\n  const [isClient, setIsClient] = useState(false);\n  \n  useEffect(() => {\n    // Esto solo se ejecuta en el cliente\n    setIsClient(true);\n    const userLang = localStorage.getItem('userLanguage') || 'es';\n    // Actualizar los textos basados en el idioma\n    updateTexts(userLang);\n    \n    // Escuchar cambios de idioma\n    const checkLanguage = () => {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      updateTexts(currentLang);\n      // Forzar una actualización\n      setIsClient(prevState => !prevState);\n    };\n    \n    window.addEventListener('storage', checkLanguage);\n    return () => window.removeEventListener('storage', checkLanguage);\n  }, []);\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    \n    // Actualizar los filtros con el valor de búsqueda\n    setFilters(prev => ({\n      ...prev,\n      [name]: value === '' ? undefined : value\n    }));\n  };\n  \n  // Manejar la pulsación de Enter en el campo de búsqueda\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      handleApplyFilters();\n    }\n  };\n\n  const handleApplyFilters = () => {\n    // Si hay una función onApplyFilters proporcionada, llamarla\n    if (onApplyFilters) {\n      onApplyFilters(filters);\n    }\n    \n    // Emitir un evento personalizado para que otros componentes puedan escucharlo\n    document.dispatchEvent(new CustomEvent('filters-applied', {\n      detail: filters\n    }));\n  };\n\n  const handleClearFilters = () => {\n    const emptyFilters: AnimalFiltersType = {};\n    setFilters(emptyFilters);\n    \n    // Aplicar los filtros vacíos\n    if (onApplyFilters) {\n      onApplyFilters(emptyFilters);\n    }\n    \n    // Emitir evento con filtros vacíos\n    document.dispatchEvent(new CustomEvent('filters-applied', {\n      detail: emptyFilters\n    }));\n    \n    // Recargar la lista de animales\n    document.dispatchEvent(new CustomEvent('reload-animals'));\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 gap-4\" id={id}>\n      {/* Búsqueda consolidada */}\n      <div className=\"mb-3\">\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          {labelText}\n        </label>\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            name=\"search\"\n            value={filters.search || ''}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            placeholder={placeholderText}\n            className=\"w-full px-3 py-2 pl-9 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-700 dark:text-white\"\n          />\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-500 dark:text-gray-400\">🔍</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Botones */}\n      <div className=\"flex justify-end space-x-2 mt-2\">\n        <button\n          type=\"button\"\n          onClick={handleClearFilters}\n          className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n        >\n          {clearButtonText}\n        </button>\n        <button\n          type=\"button\"\n          onClick={handleApplyFilters}\n          className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary/80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n        >\n          {searchButtonText}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AnimalFilters;\n","---\n// Importar el layout y componentes\nimport MainLayout from '../../components/layout/MainLayout.astro';\nimport AnimalTable from '../../components/animals/AnimalTable';\nimport AnimalFilters from '../../components/animals/AnimalFilters';\nimport authService from '../../services/authService';\nimport { getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual en el servidor\nconst currentLang = getCurrentLanguage();\n\n// Traducciones directas en variables simples para evitar problemas de hidratación\nlet pageTitle = 'Gestión de Animales';\nlet newAnimalText = 'Nuevo Animal';\nlet refreshText = 'Actualizar';\nlet searchTitleText = 'Búsqueda y Filtros';\nlet searchDescriptionText = 'Utiliza los filtros para encontrar animales específicos. Puedes filtrar por explotación, género, estado y más.';\nlet listTitleText = 'Listado de Animales';\nlet loadingText = 'Cargando animales...';\n\n// Establecer las traducciones basadas en el idioma\nif (currentLang === 'ca') {\n  pageTitle = 'Gestió d\\'Animals';\n  newAnimalText = 'Nou Animal';\n  refreshText = 'Actualitzar';\n  searchTitleText = 'Cerca i Filtres';\n  searchDescriptionText = 'Utilitza els filtres per trobar animals específics. Pots filtrar per explotació, gènere, estat i més.';\n  listTitleText = 'Llistat d\\'Animals';\n  loadingText = 'Carregant animals...';\n}\n\n// Comprobar autenticación pero sin verificar permisos\nconst isLoggedIn = true; // Forzamos a true durante el desarrollo\n// const isLoggedIn = isAuthenticated();\n\n// Comprobaciones simplificadas - siempre permitir todo para desarrollo rápido\nconst canViewAnimals = true;\nconst canEditAnimals = true;\nconst canCreateAnimals = true;\n\n// En modo desarrollo, no redirigimos\n// if (!isLoggedIn) {\n//   return Astro.redirect('/login');\n// }\n\n// Definir título y rol de usuario\nconst title = pageTitle;\n\n// No definimos el rol aquí para componentes server-side\n// El rol se detectará en el cliente con JavaScript\nconst userRole = 'pending'; // Este valor será reemplazado por JS del cliente\n\n---\n\n<MainLayout title={title} userRole={userRole} currentPath=\"/animals\">\n  <div class=\"w-full max-w-full px-2 sm:px-4 py-4 sm:py-6\">\n    <div class=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 sm:mb-6 gap-3\">\n      <h1 class=\"text-xl sm:text-2xl font-bold text-gray-900 dark:text-white\">\n        {title}\n      </h1>\n      <div class=\"flex flex-wrap gap-2\">\n        <script is:inline>\n          // Comprobar rol de usuario directamente aquí\n          (function() {\n            try {\n              const token = localStorage.getItem('token');\n              if (token) {\n                const payload = JSON.parse(atob(token.split('.')[1]));\n                const role = payload.role.toLowerCase();\n                \n                // Variable global para que otros scripts sepan que ya está bloqueado\n                window.newAnimalButtonBlocked = (role === 'editor' || role === 'usuario');\n                \n                document.addEventListener('DOMContentLoaded', function() {\n                  // Si se ejecuta muy rápido, esperar un tick para asegurar que el DOM esté listo\n                  setTimeout(() => {\n                    if (window.newAnimalButtonBlocked) {\n                      console.log('BLOQUEANDO BOTÓN NUEVO ANIMAL INMEDIATAMENTE PARA ROL:', role);\n                      const btn = document.getElementById('new-animal-btn');\n                      if (btn) {\n                        btn.disabled = true;\n                        btn.style.opacity = '0.5';\n                        btn.style.cursor = 'not-allowed';\n                        btn.style.pointerEvents = 'none';\n                        btn.title = 'NO TIENES PERMISOS PARA CREAR NUEVOS ANIMALES';\n                        \n                        // Añadir icono de candado\n                        if (!btn.querySelector('.lock-icon')) {\n                          const lockIcon = document.createElement('span');\n                          lockIcon.textContent = ' 🔒';\n                          lockIcon.className = 'ml-1 lock-icon';\n                          btn.appendChild(lockIcon);\n                        }\n                        \n                        // Prevenir navegación\n                        btn.onclick = function(e) {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          alert('NO TIENES PERMISOS PARA CREAR NUEVOS ANIMALES');\n                          return false;\n                        };\n                      }\n                    }\n                  }, 0);\n                });\n              }\n            } catch (e) {\n              console.error('Error al verificar permisos para botón Nuevo Animal:', e);\n            }\n          })();\n        </script>\n        \n        {/* Botón sencillo - se bloqueará por el script anterior si el rol es restringido */}\n        <button \n           class=\"btn btn-primary flex items-center\" \n           id=\"new-animal-btn\"\n           onclick=\"window.location.href='/animals/new';\">\n          <span class=\"mr-1\">+</span>\n          {newAnimalText}\n        </button>\n        <!-- Ya no usamos scripts en línea aquí - todo se maneja desde block-delete-button.js -->\n        <button id=\"refreshBtn\" class=\"btn btn-secondary flex items-center\">\n          <span class=\"mr-1\">↻</span>\n          {refreshText}\n        </button>\n      </div>\n    </div>\n\n    <!-- Card de búsqueda y filtros -->\n    <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4 mb-4 sm:mb-6\">\n      <div class=\"mb-3 sm:mb-4\">\n        <h2 class=\"text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-3\">\n          {searchTitleText}\n        </h2>\n        <p class=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300 mb-3 sm:mb-4\">\n          {searchDescriptionText}\n        </p>\n      </div>\n      \n      <!-- Componente de filtros -->\n      <AnimalFilters id=\"animal-filters\" client:load />\n    </div>\n\n    <!-- Tabla de animales -->\n    <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4\">\n      <div class=\"mb-3 sm:mb-4 flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n        <h2 class=\"text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-0\">\n          {listTitleText}\n        </h2>\n        <div id=\"totalAnimalsContainer\" class=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400\">\n          {loadingText}\n        </div>\n      </div>\n      <div class=\"overflow-x-auto\">\n        <AnimalTable \n          client:load \n          canEdit={canEditAnimals}\n          canCreate={canCreateAnimals}\n        />\n      </div>\n    </div>\n  </div>\n  <!-- SOLUCIÓN RADICAL: Interceptor global de clics -->\n  <script is:inline>\n    // Esta función se ejecuta INMEDIATAMENTE al cargar el script\n    (function() {\n      console.log('INTERCEPTOR GLOBAL INICIADO');\n      \n      // Obtener el rol del usuario (una sola vez al inicio)\n      let userRoleGlobal = 'pending';\n      \n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          userRoleGlobal = (payload.role || 'guest').toLowerCase();\n          console.log('ROL GLOBAL DETECTADO:', userRoleGlobal);\n        }\n      } catch (e) {\n        console.error('Error obteniendo rol global:', e);\n      }\n      \n      // Interceptar TODOS los clics en el documento\n      document.addEventListener('click', function(event) {\n        // Solo procesar para roles restringidos\n        if (userRoleGlobal !== 'editor' && userRoleGlobal !== 'usuario') {\n          return; // Permitir clics para administradores y Ramon\n        }\n        \n        // Verificar si el clic es en un enlace a /animals/new\n        let target = event.target;\n        \n        // Si el clic es en un span dentro del enlace, buscar el enlace padre\n        while (target && target.tagName !== 'A') {\n          target = target.parentElement;\n        }\n        \n        // Si encontramos un enlace y va a /animals/new, bloquearlo\n        if (target && target.tagName === 'A' && \n            (target.getAttribute('href') === '/animals/new' || \n             target.textContent.includes('Nuevo Animal') || \n             target.textContent.includes('Nou Animal'))) {\n          \n          console.log('¡INTERCEPTADO CLIC EN BOTÓN NUEVO ANIMAL!');\n          event.preventDefault();\n          event.stopPropagation();\n          \n          // Mostrar alerta\n          alert('NO TIENES PERMISOS PARA CREAR NUEVOS ANIMALES');\n          \n          // También intentar bloquear visualmente el botón\n          try {\n            target.href = 'javascript:void(0);';\n            target.style.opacity = '0.5';\n            target.style.cursor = 'not-allowed';\n            target.style.pointerEvents = 'none';\n            \n            // Añadir candado si no existe\n            if (!target.querySelector('.lock-icon')) {\n              const lockIcon = document.createElement('span');\n              lockIcon.textContent = ' 🔒';\n              lockIcon.className = 'ml-1 lock-icon';\n              target.appendChild(lockIcon);\n            }\n          } catch (e) {\n            console.error('Error modificando botón:', e);\n          }\n          \n          return false;\n        }\n      }, true); // Usar fase de captura para interceptar antes de otros handlers\n      \n      console.log('INTERCEPTOR GLOBAL ACTIVADO EXITOSAMENTE');\n    })();\n  </script>\n</MainLayout>\n\n<style>\n  .btn {\n    @apply px-3 py-2 sm:px-4 sm:py-2 rounded-md text-xs sm:text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 transition-colors;\n  }\n  \n  .btn-primary {\n    @apply bg-primary text-white hover:bg-primary/80 focus:ring-primary;\n  }\n  \n  .btn-secondary {\n    @apply bg-gray-200 text-gray-800 hover:bg-gray-300 focus:ring-gray-500 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600;\n  }\n</style>\n\n<script>\n  // Script para manejar interacciones de la página\n  document.addEventListener('DOMContentLoaded', () => {\n    // Elementos del DOM\n    const refreshBtn = document.getElementById('refreshBtn');\n    const totalAnimalsContainer = document.getElementById('totalAnimalsContainer');\n    \n    // Volver a cargar la página cuando se pulse el botón de actualizar\n    if (refreshBtn) {\n      refreshBtn.addEventListener('click', () => {\n        window.location.reload();\n      });\n    }\n    \n    // Escuchar eventos de la tabla de animales\n    document.addEventListener('animals-loaded', (e) => {\n      if (totalAnimalsContainer && e.detail && e.detail.total !== undefined) {\n        // Obtener idioma actual\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\n        const animalesText = currentLang === 'ca' ? 'animals' : 'animales';\n        \n        totalAnimalsContainer.innerHTML = `<span class=\"text-sm text-gray-500 dark:text-gray-400\">\n          Total: ${e.detail.total} ${animalesText} \n        </span>`;\n      }\n    });\n    \n    // Actualizar el título cuando se apliquen filtros\n    document.addEventListener('filters-applied', (e) => {\n      if (totalAnimalsContainer) {\n        // Obtener idioma actual\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\n        const filtrosText = currentLang === 'ca' ? 'Aplicant filtres...' : 'Aplicando filtros...';\n        \n        totalAnimalsContainer.innerHTML = `<span class=\"text-sm text-gray-500 dark:text-gray-400\">\n          ${filtrosText}\n        </span>`;\n      }\n    });\n    \n    // TRADUCCIÓN DIRECTA DE LOS TEXTOS FIJOS - NUEVO\n    function translatePageTexts() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      if (currentLang === 'ca') {\n        // Traducir título principal\n        const mainTitle = document.querySelector('[data-astro-source-loc=\"56:79\"]');\n        if (mainTitle) mainTitle.textContent = 'Gestió d\\'Animals';\n        \n        // Traducir botón nuevo animal y aplicar restricciones según rol\n        const newAnimalBtn = document.querySelector('a[href=\"/animals/new\"]');\n        if (newAnimalBtn) {\n          // Obtener rol del usuario\n          try {\n            const token = localStorage.getItem('token');\n            let userRole = 'guest';\n            \n            if (token) {\n              const payload = JSON.parse(atob(token.split('.')[1]));\n              userRole = (payload.role || 'guest').toLowerCase();\n              console.log('Rol detectado en script traducción:', userRole);\n            }\n            \n            // Si es rol restringido, deshabilitar el botón\n            if (userRole === 'editor' || userRole === 'usuario') {\n              console.log('BLOQUEANDO BOTÓN EN SCRIPT DE TRADUCCIÓN');\n              \n              // Aplicar estrictamente bloqueo\n              newAnimalBtn.href = 'javascript:void(0);';\n              newAnimalBtn.disabled = true;\n              newAnimalBtn.setAttribute('disabled', 'disabled');\n              newAnimalBtn.style.opacity = '0.5';\n              newAnimalBtn.style.pointerEvents = 'none';\n              newAnimalBtn.style.cursor = 'not-allowed';\n              newAnimalBtn.title = 'NO TIENES PERMISOS PARA CREAR NUEVOS ANIMALES';\n              newAnimalBtn.classList.add('opacity-50', 'cursor-not-allowed');\n              \n              // Icono candado\n              if (!newAnimalBtn.querySelector('.lock-icon')) {\n                const lockIcon = document.createElement('span');\n                lockIcon.textContent = ' 🔒';\n                lockIcon.className = 'ml-1 lock-icon';\n                newAnimalBtn.appendChild(lockIcon);\n              }\n              \n              // Manejador click\n              newAnimalBtn.addEventListener('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                alert('NO TIENES PERMISOS PARA CREAR NUEVOS ANIMALES');\n                return false;\n              });\n            }\n          } catch (e) {\n            console.error('Error aplicando restricciones en traducción:', e);\n          }\n          \n          // Traducir el texto (independientemente del rol)\n          const spanPlus = newAnimalBtn.querySelector('span');\n          if (spanPlus && spanPlus.nextSibling) {\n            spanPlus.nextSibling.textContent = ' Nou Animal';\n          }\n        }\n        \n        // Traducir botón actualizar\n        const refreshBtn = document.getElementById('refreshBtn');\n        if (refreshBtn) {\n          // Mantener el icono pero cambiar el texto\n          const spanRefresh = refreshBtn.querySelector('span');\n          if (spanRefresh && spanRefresh.nextSibling) {\n            spanRefresh.nextSibling.textContent = ' Actualitzar';\n          }\n        }\n        \n        // Traducir encabezado de búsqueda\n        const searchHeader = document.querySelector('[data-astro-source-loc=\"74:97\"]');\n        if (searchHeader) searchHeader.textContent = 'Cerca i Filtres';\n        \n        // Traducir descripción de búsqueda\n        const searchDesc = document.querySelector('[data-astro-source-loc=\"77:85\"]');\n        if (searchDesc) searchDesc.textContent = 'Utilitza els filtres per trobar animals específics. Pots filtrar per explotació, gènere, estat i més.';\n        \n        // Traducir encabezado de listado\n        const listHeader = document.querySelector('[data-astro-source-loc=\"93:97\"]');\n        if (listHeader) listHeader.textContent = 'Llistat d\\'Animals';\n      }\n    }\n    \n    // Ejecutar traducción al cargar la página\n    translatePageTexts();\n    \n    // Escuchar cambios en el idioma (para cuando se cambia sin recargar)\n    window.addEventListener('storage', () => {\n      translatePageTexts();\n    });\n  });\n</script>"],"names":["error","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","MainLayout","$$result","$$maybeRenderHead"],"mappings":"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"}