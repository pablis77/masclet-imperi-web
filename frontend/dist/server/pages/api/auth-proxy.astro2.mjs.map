{"version":3,"file":"auth-proxy.astro2.mjs","sources":["../../../../src/pages/api/auth-proxy.js"],"sourcesContent":["// Astro API endpoint para autenticación (formato Astro v4)\nexport async function POST({ request }) {\n  try {\n    // URL del backend con la ruta correcta para la autenticación\n    const backendUrl = 'http://127.0.0.1:8000/api/v1/auth/login';\n    \n    // Determinar el tipo de contenido\n    const contentType = request.headers.get('content-type') || '';\n    \n    let username, password;\n    \n    // Procesar según el tipo de contenido\n    if (contentType.includes('application/json')) {\n      // Obtener los datos JSON del cuerpo de la solicitud\n      const data = await request.json();\n      username = data.username;\n      password = data.password;\n    } else if (contentType.includes('multipart/form-data')) {\n      // Obtener los datos del formulario\n      const formData = await request.formData();\n      username = formData.get('username');\n      password = formData.get('password');\n    } else if (contentType.includes('application/x-www-form-urlencoded')) {\n      // Obtener los datos del formulario codificado\n      const formData = await request.formData();\n      username = formData.get('username');\n      password = formData.get('password');\n    } else {\n      // Tipo de contenido no soportado\n      return new Response(\n        JSON.stringify({ error: 'Tipo de contenido no soportado' }),\n        {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Verificar que tenemos los datos necesarios\n    if (!username || !password) {\n      return new Response(\n        JSON.stringify({ error: 'Falta usuario o contraseña' }),\n        {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Preparar datos para la autenticación en el formato correcto para FastAPI\n    const formData = new URLSearchParams();\n    formData.append('username', username);\n    formData.append('password', password);\n    \n    console.log('Enviando solicitud a:', backendUrl);\n    console.log('Con datos:', { username: username, password: '***********' });\n    \n    // Realizar la solicitud al backend\n    const response = await fetch(backendUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json'\n      },\n      body: formData\n    });\n    \n    console.log('Respuesta del backend:', response.status, response.statusText);\n    \n    // Obtener el texto de respuesta\n    const responseText = await response.text();\n    console.log('Respuesta como texto:', responseText.substring(0, 100) + (responseText.length > 100 ? '...' : ''));\n    \n    // Intentar parsear como JSON\n    let responseData;\n    try {\n      responseData = JSON.parse(responseText);\n    } catch (e) {\n      console.error('Error parseando respuesta JSON:', e);\n      console.error('Respuesta recibida:', responseText);\n      return new Response(\n        JSON.stringify({ \n          error: 'Error parseando respuesta del servidor',\n          details: responseText.substring(0, 255)\n        }),\n        {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Si la respuesta no es exitosa, devolver el error\n    if (!response.ok) {\n      console.error('Error de autenticación:', response.status, responseData);\n      return new Response(\n        JSON.stringify({\n          error: true,\n          status: response.status,\n          message: responseData.detail || 'Error de autenticación',\n          data: responseData\n        }),\n        {\n          status: response.status,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Verificar que la respuesta tenga un token\n    if (!responseData.access_token) {\n      console.error('La respuesta no contiene un token de acceso:', responseData);\n      return new Response(\n        JSON.stringify({\n          error: true,\n          message: 'La respuesta no contiene un token de acceso',\n          data: responseData\n        }),\n        {\n          status: 500,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Obtener información del usuario\n    let userData;\n    try {\n      // Hacer una petición al endpoint de usuario actual usando el token\n      const userResponse = await fetch('http://127.0.0.1:8000/api/v1/users/me', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${responseData.access_token}`,\n          'Accept': 'application/json'\n        }\n      });\n      \n      if (userResponse.ok) {\n        userData = await userResponse.json();\n        console.log('Datos de usuario obtenidos:', userData);\n        \n        // Añadir información del usuario a la respuesta\n        responseData.user = userData;\n      } else {\n        console.error('Error al obtener datos del usuario:', userResponse.status);\n        // Si no podemos obtener los datos del usuario, creamos un objeto básico\n        // para que la aplicación pueda continuar\n        responseData.user = {\n          id: 1,\n          username: data.username,\n          is_active: true,\n          role: data.username === 'admin' ? 'administrador' : 'usuario'\n        };\n        console.log('Usando datos de usuario por defecto:', responseData.user);\n      }\n    } catch (error) {\n      console.error('Error al obtener datos del usuario:', error);\n      // Si hay un error, creamos un objeto básico de usuario\n      responseData.user = {\n        id: 1,\n        username: data.username,\n        is_active: true,\n        role: data.username === 'admin' ? 'administrador' : 'usuario'\n      };\n      console.log('Usando datos de usuario por defecto:', responseData.user);\n    }\n    \n    // Devolver la respuesta completa\n    return new Response(\n      JSON.stringify(responseData),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  } catch (error) {\n    // Manejo de errores\n    console.error('Error en el proxy de autenticación:', error);\n    \n    return new Response(\n      JSON.stringify({ \n        error: true,\n        message: error instanceof Error ? error.message : 'Error desconocido',\n        stack: process.env.NODE_ENV === 'development' ? (error instanceof Error ? error.stack : undefined) : undefined\n      }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  }\n}\n"],"names":[],"mappings":"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"}