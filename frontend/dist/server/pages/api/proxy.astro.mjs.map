{"version":3,"file":"proxy.astro.mjs","sources":["../../../../src/pages/api/proxy.js"],"sourcesContent":["// Proxy API para evitar problemas de CORS\nimport fetch from 'node-fetch';\n\n// Configuración de la API\nconst API_URL = 'http://127.0.0.1:8000';\nconst API_PREFIX = '/api/v1';\n\n// Función para normalizar endpoints\nconst normalizeEndpoint = (endpoint) => {\n  // Si es un endpoint que debe terminar con /, asegurarse de que lo tenga\n  if (\n    (endpoint.includes('/dashboard/') || \n     endpoint.includes('/animals/') || \n     endpoint.includes('/explotacions/')) && \n    !endpoint.endsWith('/')\n  ) {\n    console.log(`🔄 [Proxy] Normalizando endpoint: ${endpoint} -> ${endpoint}/`);\n    return `${endpoint}/`;\n  }\n  return endpoint;\n};\n\n// Función para manejar peticiones POST\nexport const POST = async ({ request }) => {\n  try {\n    const body = await request.json();\n    const endpoint = body.endpoint;\n    const data = body.data || {};\n    const method = body.method || 'POST';\n    \n    // Normalizar y asegurarse de que el endpoint tenga el prefijo correcto\n    const normalizedEndpoint = normalizeEndpoint(endpoint);\n    const fullEndpoint = normalizedEndpoint.startsWith(API_PREFIX) \n      ? normalizedEndpoint \n      : `${API_PREFIX}${normalizedEndpoint}`;\n    \n    console.log(`🔄 [Proxy] Redirigiendo ${method} a ${API_URL}${fullEndpoint}`);\n    console.log(`🔄 [Proxy] URL completa: ${API_URL}${fullEndpoint}`);\n    \n    // Obtener los headers de la petición original\n    const requestHeaders = Object.fromEntries(request.headers.entries());\n    \n    // Crear los headers para la petición a la API\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    \n    // Pasar el token de autenticación si existe, excepto para el endpoint de login\n    if (!fullEndpoint.includes('/auth/login/')) {\n      if (requestHeaders.authorization) {\n        headers['Authorization'] = requestHeaders.authorization;\n        console.log(`🔄 [Proxy] Usando token de autenticación: ${requestHeaders.authorization.substring(0, 15)}...`);\n      } else {\n        // Intentar obtener el token de la cookie\n        const cookies = requestHeaders.cookie;\n        if (cookies) {\n          const tokenMatch = cookies.match(/token=([^;]+)/);\n          if (tokenMatch && tokenMatch[1]) {\n            const token = tokenMatch[1];\n            headers['Authorization'] = `Bearer ${token}`;\n            console.log(`🔄 [Proxy] Usando token de autenticación desde cookie: ${token.substring(0, 15)}...`);\n          } else {\n            console.log(`🔄 [Proxy] No se encontró token de autenticación en cookies`);\n          }\n        } else {\n          console.log(`🔄 [Proxy] No se encontró token de autenticación en headers ni cookies`);\n        }\n      }\n    } else {\n      console.log(`🔄 [Proxy] Petición de login, no se requiere token`);\n    }\n    \n    // Configurar timeout para la petición\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 segundos de timeout\n    \n    // Configurar la petición según el método\n    let fetchOptions = {\n      method: method,\n      headers: headers,\n      signal: controller.signal\n    };\n    \n    // Para métodos GET, convertir el cuerpo en parámetros de consulta\n    let url = `${API_URL}${fullEndpoint}`;\n    \n    if (method === 'GET' && data && Object.keys(data).length > 0) {\n      // Convertir datos a parámetros de consulta\n      const queryParams = new URLSearchParams();\n      Object.entries(data).forEach(([key, value]) => {\n        queryParams.append(key, value);\n      });\n      \n      // Añadir parámetros a la URL\n      url = `${url}${url.includes('?') ? '&' : '?'}${queryParams.toString()}`;\n      console.log(`🔄 [Proxy] Datos enviados como parámetros de consulta: ${queryParams.toString()}`);\n      \n      // No incluir body en peticiones GET\n      fetchOptions.body = undefined;\n    } else if (method !== 'GET') {\n      // Solo incluir body para métodos que no sean GET\n      fetchOptions.body = JSON.stringify(data);\n      console.log(`🔄 [Proxy] Datos enviados en el cuerpo:`, data);\n    }\n    \n    // Para el endpoint de login, añadir información adicional\n    if (fullEndpoint.includes('/auth/login')) {\n      console.log('🔑 [Proxy] Procesando solicitud de login');\n      \n      // Para OAuth2, necesitamos enviar los datos como form-urlencoded\n      if (method === 'POST' && data) {\n        console.log('🔑 [Proxy] Convirtiendo datos a formato form-urlencoded para OAuth2');\n        \n        // Cambiar el Content-Type para form-urlencoded\n        headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        \n        // Convertir el objeto a URLSearchParams\n        const formData = new URLSearchParams();\n        \n        // Añadir los campos requeridos por OAuth2 de FastAPI\n        formData.append('username', data.username || '');\n        formData.append('password', data.password || '');\n        \n        // Campos adicionales que pueden ser requeridos por OAuth2\n        formData.append('grant_type', 'password');\n        formData.append('scope', '');\n        formData.append('client_id', '');\n        formData.append('client_secret', '');\n        \n        // Reemplazar el body con los datos en formato form-urlencoded\n        fetchOptions.body = formData.toString();\n        console.log(`🔑 [Proxy] Datos convertidos: ${fetchOptions.body}`);\n      }\n    }\n    \n    const response = await fetch(url, fetchOptions);\n    \n    clearTimeout(timeoutId);\n    \n    console.log(`🔄 [Proxy] Respuesta recibida con estado: ${response.status} ${response.statusText}`);\n    \n    // Verificar si la respuesta es exitosa\n    if (!response.ok) {\n      console.error(`🔄 [Proxy] Error ${response.status} al conectar con ${url}`);\n      console.error(`🔄 [Proxy] Texto de estado: ${response.statusText}`);\n      \n      // Intentar obtener detalles del error\n      let errorData;\n      try {\n        errorData = await response.json();\n        console.error(`🔄 [Proxy] Detalles del error:`, errorData);\n      } catch (e) {\n        errorData = { message: response.statusText };\n        console.error(`🔄 [Proxy] No se pudo parsear la respuesta de error como JSON`);\n      }\n      \n      return new Response(\n        JSON.stringify({\n          error: true,\n          status: response.status,\n          message: errorData.detail || errorData.message || response.statusText,\n          details: errorData\n        }),\n        {\n          status: response.status,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Procesar la respuesta exitosa\n    const data_response = await response.json();\n    \n    // Para el endpoint de login, añadir información adicional\n    if (fullEndpoint.includes('/auth/login/') && data_response.access_token) {\n      console.log('🔑 [Proxy] Inicio de sesión exitoso, procesando token');\n      \n      try {\n        // Decodificar el token para obtener información del usuario\n        const tokenParts = data_response.access_token.split('.');\n        if (tokenParts.length === 3) {\n          const payload = JSON.parse(atob(tokenParts[1]));\n          \n          // Añadir información del usuario a la respuesta\n          data_response.user = {\n            username: payload.sub || 'usuario',\n            role: payload.role || 'usuario',\n            id: payload.user_id || 0,\n            is_active: true\n          };\n          \n          console.log(`🔑 [Proxy] Información de usuario extraída del token: ${data_response.user.username} (${data_response.user.role})`);\n        }\n      } catch (error) {\n        console.error('❌ [Proxy] Error al decodificar token:', error);\n      }\n    }\n    \n    return new Response(\n      JSON.stringify(data_response),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  } catch (error) {\n    console.error(`🔄 [Proxy] Error al procesar la petición:`, error);\n    \n    return new Response(\n      JSON.stringify({\n        error: true,\n        message: error.message || 'Error desconocido',\n        stack: error.stack\n      }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  }\n};\n\n// Función para manejar peticiones GET\nexport const GET = async ({ request, url }) => {\n  try {\n    // Obtener el endpoint de los parámetros de consulta\n    const params = new URL(request.url).searchParams;\n    const endpoint = params.get('endpoint');\n    \n    if (!endpoint) {\n      return new Response(\n        JSON.stringify({\n          error: true,\n          message: 'Se requiere el parámetro endpoint'\n        }),\n        {\n          status: 400,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Normalizar y asegurarse de que el endpoint tenga el prefijo correcto\n    const normalizedEndpoint = normalizeEndpoint(endpoint);\n    const fullEndpoint = normalizedEndpoint.startsWith(API_PREFIX) \n      ? normalizedEndpoint \n      : `${API_PREFIX}${normalizedEndpoint}`;\n    \n    console.log(`🔄 [Proxy] Redirigiendo GET a ${API_URL}${fullEndpoint}`);\n    \n    // Obtener los headers de la petición original\n    const requestHeaders = Object.fromEntries(request.headers.entries());\n    \n    // Crear los headers para la petición a la API\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n    \n    // Pasar el token de autenticación si existe\n    if (requestHeaders.authorization) {\n      headers['Authorization'] = requestHeaders.authorization;\n      console.log(`🔄 [Proxy] Usando token de autenticación: ${requestHeaders.authorization.substring(0, 15)}...`);\n    } else {\n      // Intentar obtener el token de la cookie\n      const cookies = requestHeaders.cookie;\n      if (cookies) {\n        const tokenMatch = cookies.match(/token=([^;]+)/);\n        if (tokenMatch && tokenMatch[1]) {\n          const token = tokenMatch[1];\n          headers['Authorization'] = `Bearer ${token}`;\n          console.log(`🔄 [Proxy] Usando token de autenticación desde cookie: ${token.substring(0, 15)}...`);\n        } else {\n          console.log(`🔄 [Proxy] No se encontró token de autenticación en cookies`);\n        }\n      } else {\n        console.log(`🔄 [Proxy] No se encontró token de autenticación en headers ni cookies`);\n      }\n    }\n    \n    // Construir la URL con todos los parámetros de consulta excepto 'endpoint'\n    let apiUrl = `${API_URL}${fullEndpoint}`;\n    const queryParams = new URLSearchParams();\n    \n    // Copiar todos los parámetros excepto 'endpoint'\n    for (const [key, value] of params.entries()) {\n      if (key !== 'endpoint') {\n        queryParams.append(key, value);\n      }\n    }\n    \n    // Añadir parámetros a la URL si hay alguno\n    if (queryParams.toString()) {\n      apiUrl = `${apiUrl}${apiUrl.includes('?') ? '&' : '?'}${queryParams.toString()}`;\n    }\n    \n    console.log(`🔄 [Proxy] URL completa: ${apiUrl}`);\n    \n    // Configurar timeout para la petición\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 segundos de timeout\n    \n    const response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: headers,\n      signal: controller.signal\n    });\n    \n    clearTimeout(timeoutId);\n    \n    console.log(`🔄 [Proxy] Respuesta recibida con estado: ${response.status} ${response.statusText}`);\n    \n    // Verificar si la respuesta es exitosa\n    if (!response.ok) {\n      console.error(`🔄 [Proxy] Error ${response.status} al conectar con ${apiUrl}`);\n      console.error(`🔄 [Proxy] Texto de estado: ${response.statusText}`);\n      \n      // Intentar obtener detalles del error\n      let errorData;\n      try {\n        errorData = await response.json();\n        console.error(`🔄 [Proxy] Detalles del error:`, errorData);\n      } catch (e) {\n        errorData = { message: response.statusText };\n        console.error(`🔄 [Proxy] No se pudo parsear la respuesta de error como JSON`);\n      }\n      \n      return new Response(\n        JSON.stringify({\n          error: true,\n          status: response.status,\n          message: errorData.detail || errorData.message || response.statusText,\n          details: errorData\n        }),\n        {\n          status: response.status,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n    }\n    \n    // Procesar la respuesta exitosa\n    const data_response = await response.json();\n    \n    return new Response(\n      JSON.stringify(data_response),\n      {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  } catch (error) {\n    console.error(`🔄 [Proxy] Error al procesar la petición GET:`, error);\n    \n    return new Response(\n      JSON.stringify({\n        error: true,\n        message: error.message || 'Error desconocido',\n        stack: error.stack\n      }),\n      {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n  }\n};\n"],"names":[],"mappings":"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"}