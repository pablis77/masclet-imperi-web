{"version":3,"file":"settings.astro.mjs","sources":["../../../src/i18n/index.js","../../../src/pages/settings.astro"],"sourcesContent":["// Configuración básica para multilenguaje\nexport const defaultLang = 'es';\nexport const supportedLanguages = ['es', 'ca'];\n\n// Traducción en Español\nconst es = {\n  common: {\n    welcome: \"Bienvenido a Masclet Imperi\",\n    dashboard: \"Dashboard\",\n    animals: \"Animales\",\n    exploitations: \"Explotaciones\",\n    users: \"Usuarios\",\n    settings: \"Configuración\"\n  },\n  imports: {\n    title: \"Importación\"\n  }\n};\n\n// Traducción en Catalán\nconst ca = {\n  common: {\n    welcome: \"Benvingut a Masclet Imperi\",\n    dashboard: \"Tauler de control\",\n    animals: \"Animals\",\n    exploitations: \"Explotacions\",\n    users: \"Usuaris\",\n    settings: \"Configuració\"\n  },\n  imports: {\n    title: \"Importació\"\n  }\n};\n\n// Función simple pero efectiva para las traducciones\nexport function t(key, lang = defaultLang) {\n  try {\n    const parts = key.split('.');\n    if (parts.length !== 2) return key;\n    \n    const section = parts[0];\n    const term = parts[1];\n    \n    const dict = lang === 'ca' ? ca : es;\n    \n    if (dict[section] && dict[section][term]) {\n      return dict[section][term];\n    }\n    \n    return key;\n  } catch (e) {\n    console.error(`Error en traducción para la clave: ${key}`, e);\n    return key;\n  }\n}\n\n// Función para cambiar el idioma\nexport function setLanguage(lang) {\n  if (supportedLanguages.includes(lang)) {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem('userLanguage', lang);\n    }\n    return lang;\n  }\n  return defaultLang;\n}\n\n// Función para obtener el idioma actual\nexport function getCurrentLanguage() {\n  if (typeof window !== 'undefined' && typeof localStorage !== 'undefined') {\n    const savedLang = localStorage.getItem('userLanguage');\n    return savedLang && supportedLanguages.includes(savedLang) \n      ? savedLang \n      : defaultLang;\n  }\n  return defaultLang;\n}\n","---\n// Importar el layout\nimport MainLayout from '../components/layout/MainLayout.astro';\n\n// Importar funciones de i18n\nimport { getCurrentLanguage, t } from '../i18n';\n\n// Definir rol de usuario (esto eventualmente vendrá de la autenticación)\nconst userRole = \"administrador\"; // Simulación de rol\n\n// Obtener el idioma actual para el servidor\nconst currentLang = getCurrentLanguage();\n---\n\n<MainLayout title={t('settings.title')} userRole={userRole} currentPath=\"/settings\">\n  <div class=\"mx-auto px-4 py-6\">\n    <div class=\"bg-white dark:bg-gray-800 shadow-md rounded-lg p-6\">\n      <!-- Formulario de configuración integrado directamente -->\n      <div class=\"max-w-4xl mx-auto\">\n        <!-- Modal de notificación -->\n        <div id=\"notification-modal\" class=\"hidden fixed inset-0 z-50 overflow-auto bg-black bg-opacity-40 flex justify-center items-center\">\n          <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full mx-4 p-6\">\n            <div id=\"notification-content\" class=\"flex items-center\">\n              <div id=\"notification-icon\" class=\"mr-3 text-2xl\"></div>\n              <div id=\"notification-message\" class=\"flex-1\"></div>\n            </div>\n            <div class=\"mt-4 text-right\">\n              <button id=\"close-notification\" class=\"px-4 py-2 bg-primary text-white rounded-md hover:bg-primary-dark\">\n                Aceptar\n              </button>\n            </div>\n          </div>\n        </div>\n      \n        <div class=\"mb-8\">\n          <h2 class=\"text-xl font-semibold mb-4 text-primary border-b pb-2\" id=\"title-user-preferences\">Preferencias de usuario</h2>\n          \n          <!-- Preferencias de usuario: Idioma y tema visual -->\n          <div class=\"space-y-6\">\n            <!-- Selección de Idioma -->\n            <div class=\"flex flex-col md:flex-row md:items-center gap-4\">\n              <label for=\"language\" class=\"font-medium w-48\" id=\"label-language\">Idioma:</label>\n              <div class=\"flex-1\">\n                <select id=\"language\" class=\"w-full md:w-64 p-2 border rounded-md bg-white dark:bg-gray-700 focus:ring-2 focus:ring-primary\">\n                  <option value=\"es\" id=\"option-es\">Español</option>\n                  <option value=\"ca\" id=\"option-ca\">Catalán</option>\n                </select>\n              </div>\n            </div>\n      \n            <!-- Selección de Tema -->\n            <div class=\"flex flex-col md:flex-row md:items-center gap-4\">\n              <label for=\"theme\" class=\"font-medium w-48\" id=\"label-theme\">Tema visual:</label>\n              <div class=\"flex-1\">\n                <select id=\"theme\" class=\"w-full md:w-64 p-2 border rounded-md bg-white dark:bg-gray-700 focus:ring-2 focus:ring-primary\">\n                  <option value=\"light\" id=\"option-light\">Claro</option>\n                  <option value=\"dark\" id=\"option-dark\">Oscuro</option>\n                  <option value=\"system\" id=\"option-system\">Usar preferencia del sistema</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        <div class=\"mb-8\">\n          <h2 class=\"text-xl font-semibold mb-4 text-primary border-b pb-2\" id=\"title-notifications\">Notificaciones</h2>\n          \n          <!-- Configuración de notificaciones -->\n          <div class=\"space-y-4\">\n            <div class=\"flex items-start gap-3\">\n              <input type=\"checkbox\" id=\"notify_backups\" class=\"mt-1 h-5 w-5 text-primary focus:ring-primary\">\n              <div>\n                <label for=\"notify_backups\" class=\"font-medium\" id=\"label-backups\">Avisos de copias de seguridad</label>\n                <p class=\"text-gray-500 text-sm\" id=\"desc-backups\">Recibir notificación cuando se realicen copias de seguridad automáticas</p>\n              </div>\n            </div>\n      \n            <div class=\"flex items-start gap-3\">\n              <input type=\"checkbox\" id=\"notify_imports\" class=\"mt-1 h-5 w-5 text-primary focus:ring-primary\">\n              <div>\n                <label for=\"notify_imports\" class=\"font-medium\" id=\"label-imports\">Avisos de importaciones</label>\n                <p class=\"text-gray-500 text-sm\" id=\"desc-imports\">Recibir notificación cuando se completen importaciones</p>\n              </div>\n            </div>\n      \n            <div class=\"flex items-start gap-3\">\n              <input type=\"checkbox\" id=\"notify_animals\" class=\"mt-1 h-5 w-5 text-primary focus:ring-primary\">\n              <div>\n                <label for=\"notify_animals\" class=\"font-medium\" id=\"label-animals\">Avisos sobre animales</label>\n                <p class=\"text-gray-500 text-sm\" id=\"desc-animals\">Recibir notificación sobre cambios importantes en los animales</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        <!-- Botones de acción -->\n        <div class=\"flex justify-end gap-3 mt-8 pt-4 border-t\">\n          <button type=\"button\" id=\"btn-cancel\" class=\"px-4 py-2 border rounded-md hover:bg-gray-100 dark:hover:bg-gray-700\">\n            Cancelar\n          </button>\n          <button type=\"button\" id=\"btn-save\" class=\"px-4 py-2 bg-primary text-white rounded-md hover:bg-primary-dark\">\n            Guardar\n          </button>\n        </div>\n      </div>\n\n      <script>\n        // Recuperar configuración actual del usuario\n        document.addEventListener('DOMContentLoaded', () => {\n          // Aquí se cargarían las preferencias guardadas\n          // Por ahora, solo detectamos el idioma actual\n          const currentLang = document.documentElement.lang || 'es';\n          const languageSelect = document.getElementById('language');\n          if (languageSelect) {\n            languageSelect.value = currentLang;\n          }\n      \n          // Detectar tema actual\n          const themeSelect = document.getElementById('theme');\n          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n          const currentTheme = localStorage.getItem('theme') || (prefersDark ? 'dark' : 'light');\n          if (themeSelect) {\n            themeSelect.value = currentTheme;\n          }\n          \n          // Cargar configuraciones de notificaciones guardadas\n          try {\n            const savedSettings = JSON.parse(localStorage.getItem('userSettings') || '{}');\n            \n            // Inicializar las casillas de notificaciones\n            if (savedSettings.notifications) {\n              const notifyBackupsCheckbox = document.getElementById('notify_backups');\n              if (notifyBackupsCheckbox && savedSettings.notifications.backups !== undefined) {\n                notifyBackupsCheckbox.checked = savedSettings.notifications.backups;\n              }\n              \n              const notifyImportsCheckbox = document.getElementById('notify_imports');\n              if (notifyImportsCheckbox && savedSettings.notifications.imports !== undefined) {\n                notifyImportsCheckbox.checked = savedSettings.notifications.imports;\n              }\n              \n              const notifyAnimalsCheckbox = document.getElementById('notify_animals');\n              if (notifyAnimalsCheckbox && savedSettings.notifications.animals !== undefined) {\n                notifyAnimalsCheckbox.checked = savedSettings.notifications.animals;\n              }\n            }\n          } catch (error) {\n            console.error('Error al cargar la configuración guardada:', error);\n          }\n      \n          // Listeners para guardar cambios\n          const saveButton = document.querySelector('button[type=\"button\"]:last-child');\n          if (saveButton) {\n            saveButton.addEventListener('click', saveSettings);\n          }\n        });\n      \n        function saveSettings() {\n          const language = document.getElementById('language')?.value;\n          const theme = document.getElementById('theme')?.value;\n          const notifyBackups = document.getElementById('notify_backups')?.checked;\n          const notifyImports = document.getElementById('notify_imports')?.checked;\n          const notifyAnimals = document.getElementById('notify_animals')?.checked;\n      \n          // Guardar en localStorage por ahora\n          localStorage.setItem('userSettings', JSON.stringify({\n            language,\n            theme,\n            notifications: {\n              backups: notifyBackups,\n              imports: notifyImports,\n              animals: notifyAnimals\n            }\n          }));\n      \n          // Aplicar cambios de idioma\n          if (language) {\n            const currentUrl = new URL(window.location.href);\n            currentUrl.searchParams.set('lang', language);\n            window.location.href = currentUrl.toString();\n          }\n      \n          // Aplicar cambios de tema\n          if (theme) {\n            if (theme === 'dark') {\n              document.documentElement.classList.add('dark');\n              localStorage.setItem('theme', 'dark');\n            } else if (theme === 'light') {\n              document.documentElement.classList.remove('dark');\n              localStorage.setItem('theme', 'light');\n            } else {\n              // Sistema\n              localStorage.removeItem('theme');\n              if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                document.documentElement.classList.add('dark');\n              } else {\n                document.documentElement.classList.remove('dark');\n              }\n            }\n          }\n      \n          // Mostrar notificación de éxito\n          showNotification('✅', 'Configuración guardada correctamente');\n        }\n      \n        function showNotification(icon, message) {\n          const modal = document.getElementById('notification-modal');\n          const iconEl = document.getElementById('notification-icon');\n          const messageEl = document.getElementById('notification-message');\n          \n          if (modal && iconEl && messageEl) {\n            iconEl.textContent = icon;\n            messageEl.textContent = message;\n            modal.classList.remove('hidden');\n          }\n        }\n      </script>\n    </div>\n  </div>\n</MainLayout>\n"],"names":["$$createComponent","$$render","$$renderComponent","MainLayout","$$result","$$maybeRenderHead"],"mappings":";;;;;AAAA;AACO,MAAM,WAAW,GAAG,IAAI;AACxB,MAAM,kBAAkB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;AAE9C;AACA,MAAM,EAAE,GAAG;AACX,EAAE,MAAM,EAAE;AACV,IAAI,OAAO,EAAE,6BAA6B;AAC1C,IAAI,SAAS,EAAE,WAAW;AAC1B,IAAI,OAAO,EAAE,UAAU;AACvB,IAAI,aAAa,EAAE,eAAe;AAClC,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,QAAQ,EAAE;AACd,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,KAAK,EAAE;AACX;AACA,CAAC;;AAED;AACA,MAAM,EAAE,GAAG;AACX,EAAE,MAAM,EAAE;AACV,IAAI,OAAO,EAAE,4BAA4B;AACzC,IAAI,SAAS,EAAE,mBAAmB;AAClC,IAAI,OAAO,EAAE,SAAS;AACtB,IAAI,aAAa,EAAE,cAAc;AACjC,IAAI,KAAK,EAAE,SAAS;AACpB,IAAI,QAAQ,EAAE;AACd,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,KAAK,EAAE;AACX;AACA,CAAC;;AAED;AACO,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,WAAW,EAAE;AAC3C,EAAE,IAAI;AACN,IAAI,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AAChC,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,GAAG;AACtC;AACA,IAAI,MAAM,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC;AAC5B,IAAI,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC;AACzB;AACA,IAAI,MAAM,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;AACxC;AACA,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE;AAC9C,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;AAChC;AACA;AACA,IAAI,OAAO,GAAG;AACd,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,mCAAmC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACjE,IAAI,OAAO,GAAG;AACd;AACA;;AAaA;AACO,SAAS,kBAAkB,GAAG;AACrC,EAAE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;AAC5E,IAAI,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC;AAC1D,IAAI,OAAO,SAAS,IAAI,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC9D,QAAQ,SAAS;AACjB,QAAQ,WAAW;AACnB;AACA,EAAE,OAAO,WAAW;AACpB;;AC5EA,MAAA,UAAA,GAAAA,eAAA,CAAA,CAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAQA,EAAA,MAAM,QAAW,GAAA,eAAA;AAGjB,EAAoB,kBAAmB;AAXvC,EAAA,OAAAC,cAAA,CAAA,EAAAC,gBAAA,QAAA,EAAA,YAAA,EAAAC,cAAA,EAcY,OAAA,EAAO,CAAA,CAAA,gBAAA,CAAqB,EAAA,UAAA,EAAU,UAAU,aAd5D,EAAA,WAAA,IAAA,EAAA,SAAA,EAAA,CAAAC,SAAA,KAAAH,cAAA,CAAA,CAAA,EAAAI,eAAAD,CAAA,CAAA,CAAA;;;;;;AAAA,uCAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,4EAAA,MAAA,CAAA;;;;;;;;;;;;;;;;"}