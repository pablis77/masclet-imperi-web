{"version":3,"file":"_id_.astro.mjs","sources":["../../../../src/pages/animals/[id].astro"],"sourcesContent":["---\r\n// Importar el layout y componentes\r\nimport MainLayout from '../../components/layout/MainLayout.astro';\r\nimport animalService from '../../services/animalService';\r\nimport { getCurrentLanguage } from '../../i18n/config';\r\nimport EditarPartoModal from '../../components/animals/EditarPartoModal';\r\n\r\n// Obtener el ID del animal de los par√°metros de la URL\r\nconst { id } = Astro.params;\r\n\r\n// Obtener el idioma actual para renderizado en servidor\r\nconst serverLang = getCurrentLanguage();\r\n\r\n// Variables de traducci√≥n directas \r\nconst txtMacho = serverLang === 'ca' ? 'Mascle' : 'Macho';\r\nconst txtHembra = serverLang === 'ca' ? 'Femella' : 'Hembra';\r\nconst txtNoDisponible = serverLang === 'ca' ? 'No disponible' : 'No disponible';\r\nconst txtObservaciones = serverLang === 'ca' ? 'Sense observacions' : 'Sin observaciones';\r\nconst txtVivo = serverLang === 'ca' ? 'Viu' : 'Vivo';\r\nconst txtMuerto = serverLang === 'ca' ? 'Mort' : 'Fallecido';\r\n\r\n// Traducciones para la ficha de animal\r\nconst translations = {\r\n  es: {\r\n    title: \"Ficha de Animal\",\r\n    back_to_list: \"Volver al listado\",\r\n    animal_id: \"ID Animal\",\r\n    loading: \"Cargando datos del animal...\",\r\n    error_title: \"Error\",\r\n    retry: \"Reintentar\",\r\n    active: \"Activo\",\r\n    inactive: \"Baja\",\r\n    dead: \"Fallecido\",\r\n    update: \"Actualizar\",\r\n    code: \"C√≥digo\",\r\n    name: \"Nombre\",\r\n    serial_number: \"N√∫mero de Serie\",\r\n    gender: \"Sexo\",\r\n    male: \"Macho\",\r\n    female: \"Hembra\",\r\n    birth_date: \"Fecha de nacimiento\",\r\n    not_available: \"No disponible\",\r\n    incorrect_date: \"Fecha incorrecta\",\r\n    status: \"Estado\",\r\n    exploitation: \"Explotaci√≥n\",\r\n    stable: \"Origen\",\r\n    not_assigned: \"No asignada\",\r\n    father: \"Padre\",\r\n    mother: \"Madre\",\r\n    nursing_status: \"Estado de amamantamiento\",\r\n    not_nursing: \"No amamanta\",\r\n    nursing_one: \"Amamanta a un ternero\",\r\n    nursing_two: \"Amamanta a dos terneros\",\r\n    back_to_animal_list: \"Volver al listado de animales\",\r\n    complete_info_tab: \"Informaci√≥n Completa\",\r\n    birth_history_tab: \"Historial de Partos\",\r\n    changes_history_tab: \"Historial de Cambios\",\r\n    identification_data: \"Datos de Identificaci√≥n\",\r\n    general_data: \"Datos Generales\",\r\n    birth_history: \"Historial de Partos\",\r\n    birth_registry: \"Registro de todos los partos del animal\",\r\n    no_births: \"Este animal no tiene partos registrados\",\r\n    date: \"Fecha\",\r\n    gender_label: \"G√©nero\",\r\n    observations: \"Observaciones\",\r\n    changes_history: \"Historial de Cambios\",\r\n    changes_registry: \"Registro de cambios realizados al animal\",\r\n    no_changes: \"No hay cambios registrados para este animal\",\r\n    changes_date: \"Fecha\",\r\n    changes_user: \"Usuario\",\r\n    changes_field: \"Campo\",\r\n    changes_old_value: \"Valor anterior\",\r\n    changes_new_value: \"Valor nuevo\"\r\n  },\r\n  ca: {\r\n    title: \"Fitxa d'Animal\",\r\n    back_to_list: \"Tornar al llistat\",\r\n    animal_id: \"ID Animal\",\r\n    loading: \"Carregant dades de l'animal...\",\r\n    error_title: \"Error\",\r\n    retry: \"Reintentar\",\r\n    active: \"Actiu\",\r\n    inactive: \"Baixa\",\r\n    dead: \"Mort\",\r\n    update: \"Actualitzar\",\r\n    code: \"Codi\",\r\n    name: \"Nom\",\r\n    serial_number: \"N√∫mero de S√®rie\",\r\n    gender: \"Sexe\",\r\n    male: \"Mascle\",\r\n    female: \"Femella\",\r\n    birth_date: \"Data de naixement\",\r\n    not_available: \"No disponible\",\r\n    incorrect_date: \"Data incorrecta\",\r\n    status: \"Estat\",\r\n    exploitation: \"Explotaci√≥\",\r\n    stable: \"Origen\",\r\n    not_assigned: \"No assignada\",\r\n    father: \"Pare\",\r\n    mother: \"Mare\",\r\n    nursing_status: \"Estat d'alletament\",\r\n    not_nursing: \"No alleta\",\r\n    nursing_one: \"Alleta un vedell\",\r\n    nursing_two: \"Alleta dos vedells\",\r\n    back_to_animal_list: \"Tornar al llistat d'animals\",\r\n    complete_info_tab: \"Informaci√≥ Completa\",\r\n    birth_history_tab: \"Historial de Parts\",\r\n    changes_history_tab: \"Historial de Canvis\",\r\n    identification_data: \"Dades d'Identificaci√≥\",\r\n    general_data: \"Dades Generals\",\r\n    birth_history: \"Historial de Parts\",\r\n    birth_registry: \"Registre de tots els parts de l'animal\",\r\n    no_births: \"Aquest animal no t√© parts registrats\",\r\n    date: \"Data\",\r\n    gender_label: \"G√®nere\",\r\n    observations: \"Observacions\",\r\n    changes_history: \"Historial de Canvis\",\r\n    changes_registry: \"Registre de canvis realitzats a l'animal\",\r\n    no_changes: \"No hi ha canvis registrats per a aquest animal\",\r\n    changes_date: \"Data\",\r\n    changes_user: \"Usuari\",\r\n    changes_field: \"Camp\",\r\n    changes_old_value: \"Valor anterior\",\r\n    changes_new_value: \"Valor nou\"\r\n  }\n};\n\n// Funci√≥n para obtener traducci√≥n seg√∫n idioma\nfunction t(key) {\n  return translations[serverLang as 'es' | 'ca']?.[key] || key;\n}\n\n// Definir t√≠tulo y rol de usuario\nconst title = t('title');\nconst userRole = \"administrador\"; // Simulaci√≥n de rol\n\n// Variables para almacenar datos y estado\nlet animal = null;\nlet error = null;\nlet loading = true;\n\ntry {\n  if (!id || isNaN(parseInt(id))) {\n    throw new Error('ID de animal no v√°lido');\n  }\n\n  // Intentar cargar los datos del animal\n  console.log(`Intentando cargar animal con ID: ${id}`);\n  animal = await animalService.getAnimalById(parseInt(id));\n  console.log('Animal cargado:', animal);\n  \n  if (!animal) {\n    throw new Error('No se pudo encontrar el animal');\n  }\n  \n  loading = false;\n} catch (e) {\n  console.error('Error al cargar datos del animal:', e);\n  error = e.message || 'Error al cargar los datos del animal';\n  loading = false;\n}\n\n// Variables para controlar pesta√±as\nconst showPartosTab = animal && animal.genere === 'F'; // Solo mostrar pesta√±a de partos para hembras\n\n// Obtener el icono del animal \n// En lugar de usar emojis, utilizaremos rutas a im√°genes PNG\nlet iconPath = '/images/toro_sin_borde_2.png'; // Valor por defecto\n\nif (animal) {\n  if (animal.genere === 'M') {\n    iconPath = '/images/toro_sin_borde_2.png';\n  } else {\n    iconPath = animal.alletar !== '0' ? '/images/vaca azul.png' : '/images/vaca blanca.png';\n  }\n}\n\n// Mantenemos el icono emoji para compatibilidad con otras partes del c√≥digo\nconst icon = animal ? animalService.getAnimalIcon(animal) : 'üêÇ';\n\n// Obtener la clase CSS para el estado del animal\nconst estadoClass = animal ? animalService.getAnimalStatusClass(animal.estado) : 'bg-gray-100 text-gray-800';\n\n---\n\n<MainLayout title={title} userRole={userRole} currentPath=\"/animals\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-center items-center gap-2 mb-2 mt-4\">\n      <a href=\"/animals\" id=\"back-to-list-link\" class=\"inline-flex items-center justify-center px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/80 transition-colors\">\n        <span class=\"mr-2\">‚Üê</span> Volver al listado de animales\n      </a>\n    </div>\n    <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">{title}</h1>\n    <p class=\"text-gray-600 dark:text-gray-300\" id=\"animal-id-text\">{t('animal_id')}: {id}</p>\n  </div>\n\n  {loading && (\n    <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-100 dark:border-gray-700 p-6 mb-6 flex justify-center items-center\">\n      <div class=\"flex items-center space-x-2\">\n        <div class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\n        <p>{t('loading')}</p>\n      </div>\n    </div>\n  )}\n\n  {error && (\n    <div class=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6 mb-6\">\n      <div class=\"flex items-start\">\n        <div class=\"flex-shrink-0\">\n          ‚ö†Ô∏è\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-lg font-medium text-red-800 dark:text-red-300\">{t('error_title')}</h3>\n          <div class=\"mt-2 text-red-700 dark:text-red-200\">\n            <p>{error}</p>\n          </div>\n          <div class=\"mt-4\">\n            <button \n              id=\"retry-button\"\n              class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              ‚Üª {t('retry')}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )}\n\n  {animal && (\n    <>\n      <!-- Elemento oculto con datos del animal para el script -->\n      <div id=\"animal-data\" class=\"hidden\" \n        data-genere={animal.genere}\n        data-tiene-partos={\n          (animal.partos && animal.partos.items && animal.partos.items.length > 0) || \n          (animal.partos && Array.isArray(animal.partos) && animal.partos.length > 0) || \n          (animal.parts && Array.isArray(animal.parts) && animal.parts.length > 0) ? 'true' : 'false'\n        }\n      ></div>\n      <!-- Resumen del animal -->\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-100 dark:border-gray-700 p-6 mb-6\">\n        <div class=\"flex flex-col md:flex-row gap-6\">\n          <!-- Icono y estado -->\n          <div class=\"flex flex-col items-center md:items-start\">\n            <!-- Usamos imagen en lugar de emoji para mejor visualizaci√≥n -->\n            <div class=\"mb-3\">\n              <img src={iconPath} alt=\"Icono Animal\" class=\"w-24 h-24 object-contain\" />\n            </div>\n            {animal.estado === 'DEF' && (\n              <span class=\"px-3 py-1 rounded-full bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200 text-sm font-medium\">\n                Baja\n              </span>\n            )}\n          </div>\n          \n          <!-- Informaci√≥n b√°sica -->\n          <div class=\"flex-grow\">\n            <h2 class=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">{animal.nom}</h2>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('code')}</p>\n                <p class=\"font-medium\">{animal.cod || t('not_available')}</p>\n              </div>\n              <div>\n                <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('gender')}</p>\n                <p class=\"font-medium\">{animal.genere === 'M' ? t('male') : t('female')}</p>\n              </div>\n              <div>\n                <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('birth_date')}</p>\n                <p class=\"font-medium\">\n                  {animal.dob ? \n                    (() => {\n                      try {\n                        // Primero verificar si ya viene en formato espa√±ol DD/MM/YYYY\n                        if (typeof animal.dob === 'string' && new RegExp('^\\\\d{1,2}[/\\\\-]\\\\d{1,2}[/\\\\-]\\\\d{4}$').test(animal.dob)) {\n                          // Interpretar como DD/MM/YYYY (formato espa√±ol)\n                          const partes = animal.dob.split(/[\\/\\-]/);\n                          if (partes.length === 3) {\n                            // Asegurar que se interprete como d√≠a/mes/a√±o\n                            const fecha = new Date(parseInt(partes[2]), parseInt(partes[1])-1, parseInt(partes[0]));\n                            if (!isNaN(fecha.getTime())) {\n                              return `${partes[0].padStart(2, '0')}/${partes[1].padStart(2, '0')}/${partes[2]}`;\n                            }\n                          }\n                          // Si no pudimos procesar pero tiene el formato adecuado, lo mostramos como est√°\n                          return animal.dob;\n                        }\n                        \n                        // Intentar procesar otros formatos de fecha\n                        const fecha = new Date(animal.dob);\n                        if (!isNaN(fecha.getTime())) {\n                          return fecha.toLocaleDateString('es-ES', {day: '2-digit', month: '2-digit', year: 'numeric'});\n                        }\n                        \n                        return String(animal.dob);\n                      } catch (e) {\n                        return t('incorrect_date');\n                      }\n                    })() \n                    : t('not_available')\n                  }\n                </p>\n              </div>\n              <div>\n                <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('exploitation')}</p>\n                <p class=\"font-medium\">{animal.explotacio || t('not_available')}</p>\n              </div>\n              <div>\n                <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('stable')}</p>\n                <p class=\"font-medium\">{animal.origen || t('not_assigned')}</p>\n              </div>\n              {animal.genere === 'F' && (\n                <div>\n                  <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('nursing_status')}</p>\n                  <p class=\"font-medium\">\n                    {animal.alletar === '0' ? t('not_nursing') : \n                     animal.alletar === '1' ? t('nursing_one') : \n                     animal.alletar === '2' ? t('nursing_two') : t('not_available')}\n                  </p>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <!-- Acciones -->\n          <div class=\"flex flex-col gap-2\">\n            <a href={`/animals/update/${id}`} class=\"flex items-center justify-center px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/80 transition-colors\">\n              ‚Üª Actualizar\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <!-- Pesta√±as de informaci√≥n detallada -->\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-100 dark:border-gray-700 overflow-hidden\">\n        <!-- Pesta√±as de navegaci√≥n -->\n        <div class=\"flex border-b border-gray-200 dark:border-gray-700\">\n          <button id=\"tab-info\" class=\"px-6 py-3 text-primary border-b-2 border-primary font-medium\">\n            {t('complete_info_tab')}\n          </button>\n          {showPartosTab && (\n            <button id=\"tab-partos\" class=\"px-6 py-3 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\">\n              {t('birth_history_tab')}\n            </button>\n          )}\n          <button id=\"tab-changes\" class=\"px-6 py-3 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\">\n            {t('changes_history_tab')}\n          </button>\n        </div>\n\n        <!-- Contenido de pesta√±as -->\n        <div class=\"p-6\">\n          <!-- Pesta√±a 1: Informaci√≥n Completa -->\n          <div id=\"content-info\">\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{t('identification_data')}</h3>\n                <div class=\"space-y-3\">\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('code')}</p>\n                    <p class=\"font-medium\">{animal.cod || t('not_available')}</p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('name')}</p>\n                    <p class=\"font-medium\">{animal.nom}</p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('serial_number')}</p>\n                    <p class=\"font-medium\">{animal.num_serie || t('not_available')}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{t('general_data')}</h3>\n                <div class=\"space-y-3\">\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('gender')}</p>\n                    <p class=\"font-medium\">{animal.genere === 'M' ? t('male') : t('female')}</p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('birth_date')}</p>\n                    <p class=\"font-medium\">\n                      {animal.dob ? \n                        (() => {\n                          try {\n                            // Primero verificar si ya viene en formato espa√±ol DD/MM/YYYY\n                            if (typeof animal.dob === 'string' && new RegExp('^\\\\d{1,2}[\\/\\\\-]\\\\d{1,2}[\\/\\\\-]\\\\d{4}$').test(animal.dob)) {\n                              // Interpretar como DD/MM/YYYY (formato espa√±ol)\n                              const partes = animal.dob.split(/[\\/\\-]/);\n                              if (partes.length === 3) {\n                                // Asegurar que se interprete como d√≠a/mes/a√±o\n                                const fecha = new Date(parseInt(partes[2]), parseInt(partes[1])-1, parseInt(partes[0]));\n                                if (!isNaN(fecha.getTime())) {\n                                  return `${partes[0].padStart(2, '0')}/${partes[1].padStart(2, '0')}/${partes[2]}`;\n                                }\n                              }\n                              // Si no pudimos procesar pero tiene el formato adecuado, lo mostramos como est√°\n                              return animal.dob;\n                            }\n                            \n                            // Intentar procesar otros formatos de fecha\n                            const fecha = new Date(animal.dob);\n                            if (!isNaN(fecha.getTime())) {\n                              return fecha.toLocaleDateString('es-ES', {day: '2-digit', month: '2-digit', year: 'numeric'});\n                            }\n                            \n                            return String(animal.dob);\n                          } catch (e) {\n                            return t('incorrect_date');\n                          }\n                        })() \n                        : t('not_available')\n                      }\n                    </p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('status')}</p>\n                    <p class=\"font-medium\">{animal.estado === 'OK' ? t('active') : t('dead')}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <!-- Eliminado encabezado de Ubicaci√≥n -->\n                <div class=\"space-y-3\">\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('exploitation')}</p>\n                    <p class=\"font-medium\">{animal.explotacio || t('not_available')}</p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('stable')}</p>\n                    <p class=\"font-medium\">{animal.origen || t('not_assigned')}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <!-- Eliminado encabezado de Parentesco -->\n                <div class=\"space-y-3\">\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('father')}</p>\n                    <p class=\"font-medium\">{animal.pare || t('not_available')}</p>\n                  </div>\n                  <div>\n                    <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('mother')}</p>\n                    <p class=\"font-medium\">{animal.mare || t('not_available')}</p>\n                  </div>\n                  {animal.genere === 'F' && (\n                    <div>\n                      <p class=\"text-sm text-gray-500 dark:text-gray-400\">{t('nursing_status')}</p>\n                      <p class=\"font-medium\">\n                        {animal.alletar === '0' ? t('not_nursing') : \n                         animal.alletar === '1' ? t('nursing_one') : \n                         animal.alletar === '2' ? t('nursing_two') : t('not_available')}\n                      </p>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              <!-- Secci√≥n de Observaciones -->\n              <div class=\"md:col-span-2 mt-4\">\n                <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{t('observations')}</h3>\n                <div class=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-md\">\n                  {animal.observaciones ? (\n                    <p class=\"text-gray-800 dark:text-gray-200 whitespace-pre-wrap\">{animal.observaciones}</p>\n                  ) : (\n                    <p class=\"text-gray-500 dark:text-gray-400 italic\">{t('no_observations')}</p>\n                  )}\n                </div>\n              </div>\n              \n            </div>\n            \n            <!-- Barra de ancho completo para los botones al final de la pesta√±a Informaci√≥n Completa -->\n            <div class=\"w-full col-span-1 md:col-span-2 mt-10 py-4 border-t border-gray-100 dark:border-gray-700\">\n              <div class=\"container mx-auto px-4 flex justify-between items-center\">\n                <!-- Bot√≥n Volver al centro -->\n                <div class=\"flex-1 text-center\">\n                  <a href=\"/animals\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                    <span class=\"mr-2\">‚Üê</span> Volver al listado de animales\n                  </a>\n                </div>\n                \n                <!-- Bot√≥n Exportar PDF a la derecha -->\n                <div class=\"flex-none\">\n                  <button id=\"export-animal-pdf\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                    <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                    </svg>\n                    Exportar PDF\n                  </button>\n                </div>\n              </div>\n            </div>\n              \n            </div>\n          </div>\n          \n          <!-- Eliminados los botones de la parte superior -->\n\n          <!-- Pesta√±a 2: Historial de Partos (oculta por defecto) -->\n          <div id=\"content-partos\" class=\"hidden\">\n            <div class=\"mb-4\">\n              <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{t('birth_history')}</h3>\n              <p class=\"text-gray-500 dark:text-gray-400\">{t('birth_registry')}</p>\n            </div>\n            {showPartosTab && (\n              \n              <div class=\"overflow-x-auto\">\n                <table id=\"tabla-partos\" class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n                  <thead class=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" id=\"sort-fecha\">\n                        {t('date')} <span class=\"ml-1 sort-indicator\">‚Üë</span>\n                      </th>\n                      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" id=\"sort-genero\">{t('gender_label')}</th>\n                      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider cursor-pointer\" id=\"sort-estado\">{t('status')}</th>\n                      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">{t('observations')}</th>\n                    </tr>\n                  </thead>\n                  <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {animal && (() => {\n                      // Manejar diferentes estructuras posibles de partos\n                      let partosArray = [];\n                      \n                      if (animal.partos && animal.partos.items && animal.partos.items.length > 0) {\n                        // Estructura esperada: animal.partos.items[]\n                        partosArray = animal.partos.items;\n                      } else if (animal.partos && Array.isArray(animal.partos) && animal.partos.length > 0) {\n                        // Estructura alternativa: animal.partos[]\n                        partosArray = animal.partos;\n                      } else if (animal.parts && Array.isArray(animal.parts) && animal.parts.length > 0) {\n                        // Estructura antigua: animal.parts[]\n                        partosArray = animal.parts;\n                      }\n                      \n                      if (partosArray.length > 0) {\n                        // Ordenar partos por fecha (de m√°s antiguo a m√°s reciente por defecto)\n                        partosArray.sort((a, b) => {\n                          const fechaA = a.part ? new Date(a.part) : new Date(0);\n                          const fechaB = b.part ? new Date(b.part) : new Date(0);\n                          return fechaA - fechaB; // Orden ascendente (m√°s antiguo primero)\n                        });\n                        \n                        return partosArray.map((parto) => (\n                          <tr data-id={parto.id}>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                              {parto.part ? \n                                (() => {\n                                  try {\n                                    if (typeof parto.part === 'string') {\n                                      // Primero verificar si ya viene en formato espa√±ol DD/MM/YYYY\n                                      if (new RegExp('^\\\\d{1,2}[/\\\\-]\\\\d{1,2}[/\\\\-]\\\\d{4}$').test(parto.part)) {\n                                        // Interpretar como DD/MM/YYYY (formato espa√±ol)\n                                        const partes = parto.part.split(/[\\/\\-]/);\n                                        if (partes.length === 3) {\n                                          // Asegurar que se interprete como d√≠a/mes/a√±o\n                                          const fecha = new Date(parseInt(partes[2]), parseInt(partes[1])-1, parseInt(partes[0]));\n                                          if (!isNaN(fecha.getTime())) {\n                                            return `${partes[0].padStart(2, '0')}/${partes[1].padStart(2, '0')}/${partes[2]}`;\n                                          }\n                                        }\n                                        // Si no pudimos procesar pero tiene el formato adecuado, lo mostramos como est√°\n                                        return parto.part;\n                                      } else {\n                                        // Intentar procesar otros formatos de fecha\n                                        const fecha = new Date(parto.part);\n                                        if (!isNaN(fecha.getTime())) {\n                                          return fecha.toLocaleDateString('es-ES', {day: '2-digit', month: '2-digit', year: 'numeric'});\n                                        }\n                                      }\n                                    }\n                                    return String(parto.part);\n                                  } catch (e) {\n                                    return 'Fecha incorrecta';\n                                  }\n                                })() \n                                : 'N/A'\n                              }\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                              {parto.GenereT === 'M' ? txtMacho : \n                               parto.GenereT === 'F' ? txtHembra : \n                               parto.GenereT === 'esforrada' ? 'Esforr√°' : txtNoDisponible}\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\n                              <span class={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${\n                                parto.EstadoT === 'OK' ? 'bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100' : \n                                'bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100'\n                              }`}>\n                                {parto.EstadoT === 'OK' ? txtVivo : txtMuerto}\n                              </span>\n                            </td>\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                              {parto.observacions || parto.observaciones || parto.obs || txtObservaciones}\n                            </td>\n                          </tr>\n                        ));\n                      } else {\n                        return (\n                          <tr>\n                            <td colspan=\"4\" class=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\n                              No hay registros de partos para este animal\n                            </td>\n                          </tr>\n                        );\n                      }\n                    })()}\n                  </tbody>\n                </table>\n              </div>\n            )}\n            <div class=\"p-6 text-center text-gray-500 dark:text-gray-400\">\n              {!showPartosTab && (\n                <p>{t('no_births')}</p>\n              )}\n              \n              <!-- Barra de ancho completo para los botones al final de la pesta√±a Partos -->\n              <div class=\"w-full mt-6 py-4 border-t border-gray-100 dark:border-gray-700\">\n                <div class=\"container mx-auto px-4 flex justify-between items-center\">\n                  <!-- Bot√≥n Volver al centro -->\n                  <div class=\"flex-1 text-center\">\n                    <a href=\"/animals\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                      <span class=\"mr-2\">‚Üê</span> Volver al listado de animales\n                    </a>\n                  </div>\n                  \n                  <!-- Bot√≥n Exportar PDF a la derecha -->\n                  <div class=\"flex-none\">\n                    <button id=\"export-partos-pdf\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                      <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                      </svg>\n                      Exportar PDF\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Pesta√±a 3: Historial de Cambios (oculta por defecto) -->\n          <div id=\"content-changes\" class=\"hidden\">\n            <div class=\"mb-4\">\n              <h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">{t('changes_history')}</h3>\n              <p class=\"text-gray-500 dark:text-gray-400\">{t('changes_registry')}</p>\n            </div>\n            <div class=\"p-6 text-center text-gray-500 dark:text-gray-400\">\n              <p>{t('no_changes')}</p>\n            </div>\n            \n            <!-- Barra de ancho completo para los botones al final de la pesta√±a Historial de Cambios -->\n            <div class=\"w-full mt-6 py-4 border-t border-gray-100 dark:border-gray-700\">\n              <div class=\"container mx-auto px-4 flex justify-between items-center\">\n                <!-- Bot√≥n Volver al centro -->\n                <div class=\"flex-1 text-center\">\n                  <a href=\"/animals\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                    <span class=\"mr-2\">‚Üê</span> Volver al listado de animales\n                  </a>\n                </div>\n                \n                <!-- Bot√≥n Exportar PDF a la derecha -->\n                <div class=\"flex-none\">\n                  <button id=\"export-changes-pdf\" class=\"inline-flex items-center justify-center px-5 py-2.5 bg-lime-500 text-white rounded-md hover:bg-lime-600 transition-colors shadow-md\">\n                    <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                    </svg>\n                    Exportar PDF\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Bot√≥n flotante para volver al listado -->\n      <div class=\"fixed bottom-6 right-6 z-10\">\n        <a href=\"/animals\" class=\"flex items-center justify-center w-12 h-12 rounded-full bg-primary text-white shadow-lg hover:bg-primary/80 transition-colors\">\n          <span class=\"text-xl\">‚Üê</span>\n        </a>\n      </div>\n      \n\n    </>\n  )}\n</MainLayout>\n\n<!-- Importaciones para PDF (misma estructura que en ExplotacionesPage.tsx) -->\n<script is:inline src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\"></script>\n<script is:inline src=\"https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js\"></script>\n\n<!-- Script para bloquear el bot√≥n de eliminar animales para editores -->\n<script is:inline src=\"/scripts/block-delete-button.js\"></script>\n<script is:inline>\n  // Aseguramos que autoTable est√© disponible globalmente\n  window.jsPDF = window.jspdf.jsPDF;\n  window.autoTable = function() {\n    const doc = arguments[0];\n    if (typeof doc.autoTable === 'function') {\n      doc.autoTable.apply(doc, Array.prototype.slice.call(arguments, 1));\n    } else if (window.jspdf && window.jspdf.jspdf && typeof window.jspdf.jspdf.autoTable === 'function') {\n      window.jspdf.jspdf.autoTable.apply(doc, Array.prototype.slice.call(arguments, 1));\n    } else {\n      console.error('autoTable function not found');\n    }\n  };\n</script>\n\n<script>\n  // Script para manejar interacciones de la p√°gina y traducciones\n  document.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM completamente cargado y analizado');\n    \n    // Configurar botones de exportar PDF para todas las pesta√±as\n    const exportPdfBtn = document.getElementById('export-animal-pdf');\n    const exportPartosPdfBtn = document.getElementById('export-partos-pdf');\n    const exportChangesPdfBtn = document.getElementById('export-changes-pdf');\n    \n    if (exportPdfBtn) {\n      exportPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportPartosPdfBtn) {\n      exportPartosPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportChangesPdfBtn) {\n      exportChangesPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    // Funci√≥n para exportar ficha del animal a PDF - estructura id√©ntica a ExplotacionesPage.tsx\n    function exportAnimalToPDF() {\n      try {\n        // Obtener los datos del animal\n        const animalName = document.querySelector('h2.text-2xl').textContent;\n        const animalId = document.getElementById('animal-id-text').textContent.split(':')[1].trim();\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\n        \n        // Crear el documento PDF - igual que en ExplotacionesPage.tsx\n        const { jsPDF } = window.jspdf;\n        const doc = new jsPDF();\n        \n        // Configurar t√≠tulo del documento\n        const title = currentLang === 'ca' ? `Fitxa d'Animal - ${animalName}` : `Ficha de Animal - ${animalName}`;\n        \n        // A√±adir fecha en la esquina superior derecha\n        doc.setFontSize(10);\n        doc.setTextColor(100, 100, 100);\n        const date = new Date().toLocaleDateString(currentLang === 'ca' ? 'ca-ES' : 'es-ES');\n        doc.text(\n          currentLang === 'ca' ? `Data: ${date}` : `Fecha: ${date}`, \n          195, 15, { align: 'right' }\n        );\n        \n        // Definimos la posici√≥n inicial para el resumen (usada en todo el documento)\n        const logoY = 10; // Valor predeterminado por si falla la carga del logo\n        const logoHeight = 35; // Valor predeterminado por si falla la carga del logo\n        let contentStartY = logoY + logoHeight + 20; // Posici√≥n inicial del contenido\n        \n        // A√±adir logo oficial de Masclet Imperi\n        try {\n          // Intentamos cargar el logo oficial desde una imagen base64\n          // La ruta es relativa a la ubicaci√≥n desde donde se sirve la aplicaci√≥n\n          const logoUrl = '/images/logo_masclet.png';\n          \n          // Tama√±o y posicionamiento del logo (centrado arriba)\n          const logoWidth = 45;\n          const logoHeight = 35;\n          const pageWidth = doc.internal.pageSize.getWidth();\n          const logoX = (pageWidth / 2) - (logoWidth / 2); // Centrado horizontalmente\n          \n          // A√±adir la imagen al PDF\n          doc.addImage(logoUrl, 'PNG', logoX, logoY, logoWidth, logoHeight);\n          \n          // A√±adir el t√≠tulo debajo del logo\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, logoY + logoHeight + 10, { align: 'center' });\n          \n          // Actualizamos la posici√≥n inicial del contenido con los valores reales del logo\n          contentStartY = logoY + logoHeight + 25;\n        } catch (error) {\n          console.error('Error al cargar el logo:', error);\n          \n          // Si hay error, usamos un t√≠tulo simple centrado sin logo\n          const pageWidth = doc.internal.pageSize.getWidth();\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, 30, { align: 'center' });\n          \n          // Ajustamos la posici√≥n inicial del contenido sin logo\n          contentStartY = 45;\n        }\n        \n        // A√±adir datos b√°sicos del animal\n        doc.setFontSize(14);\n        doc.setTextColor(50, 50, 50);\n        doc.text(currentLang === 'ca' ? 'Dades de l\\'animal:' : 'Datos del animal:', 20, contentStartY);\n        \n        // Recopilar datos del animal\n        const datos = [];\n        document.querySelectorAll('#content-info .space-y-3').forEach(section => {\n          section.querySelectorAll('div').forEach(item => {\n            const label = item.querySelector('p.text-sm')?.textContent;\n            const value = item.querySelector('p.font-medium')?.textContent;\n            if (label && value) {\n              datos.push([label, value]);\n            }\n          });\n        });\n        \n        // A√±adir tabla con datos del animal - usando autoTable como en ExplotacionesPage\n        window.autoTable(doc, {\n          startY: contentStartY + 10,\n          head: [[currentLang === 'ca' ? 'Camp' : 'Campo', currentLang === 'ca' ? 'Valor' : 'Valor']],\n          body: datos,\n          theme: 'grid',\n          styles: { \n            fontSize: 9, \n            cellPadding: 2,\n            lineWidth: 0.1,\n            lineColor: [200, 200, 200],\n            minCellHeight: 8,\n            valign: 'middle'\n          },\n          headStyles: { \n            fillColor: [126, 211, 33], // Color verde lima corporativo\n            textColor: 255,\n            fontStyle: 'bold',\n            minCellHeight: 10\n          },\n          alternateRowStyles: {\n            fillColor: [245, 245, 245]\n          },\n          columnStyles: {\n            0: { cellWidth: 40, halign: 'left' }, // Columna de \"Campo\" m√°s estrecha\n            1: { cellWidth: 'auto', halign: 'left' } // Columna de \"Valor\" usa el resto del espacio\n          }\n        });\n        \n        // Verificar si es una vaca (g√©nero F) para a√±adir tabla de partos\n        const generoAnimal = datos.find(d => d[0].includes('Sexo') || d[0].includes('G√©nero'));\n        const esVaca = generoAnimal && (generoAnimal[1] === 'Hembra' || generoAnimal[1] === 'Femella' || generoAnimal[1] === 'F');\n        \n        // Posici√≥n para el siguiente elemento (observaciones o tabla de partos)\n        let nextY = doc.previousAutoTable.finalY + 15;\n        \n        // Si es una vaca, verificamos si tiene partos y a√±adimos la tabla\n        if (esVaca) {\n          // Obtener los datos de partos\n          const partosRows = [];\n          const partosContainer = document.querySelector('#content-partos table tbody');\n          \n          if (partosContainer) {\n            const partosFilas = partosContainer.querySelectorAll('tr');\n            let hayPartos = false;\n            \n            partosFilas.forEach(fila => {\n              // Verificar si es una fila de datos (no de mensaje \"no hay partos\")\n              const celdas = fila.querySelectorAll('td');\n              if (celdas.length >= 3 && !fila.textContent.includes('No hay registros')) {\n                hayPartos = true;\n                // Extraer informaci√≥n de las celdas: fecha, g√©nero, estado, observaciones\n                const fecha = celdas[0]?.textContent?.trim() || 'N/A';\n                const genero = celdas[1]?.textContent?.trim() || 'N/A';\n                const estado = celdas[2]?.querySelector('span')?.textContent?.trim() || 'N/A';\n                const obs = celdas[3]?.textContent?.trim() || 'N/A';\n                \n                // A√±adir a los datos de la tabla\n                partosRows.push([fecha, genero, estado, obs]);\n              }\n            });\n            \n            // Si hay partos, a√±adir la tabla\n            if (hayPartos && partosRows.length > 0) {\n              // T√≠tulo de la secci√≥n de partos\n              doc.setFontSize(14);\n              doc.setTextColor(50, 50, 50);\n              doc.text(currentLang === 'ca' ? 'Historial de Parts:' : 'Historial de Partos:', 20, nextY);\n              \n              // Cabecera de la tabla de partos\n              const partosHead = [\n                currentLang === 'ca' ? 'Data' : 'Fecha', \n                currentLang === 'ca' ? 'G√®nere' : 'G√©nero', \n                currentLang === 'ca' ? 'Estat' : 'Estado', \n                currentLang === 'ca' ? 'Observacions' : 'Observaciones'\n              ];\n              \n              // A√±adir tabla de partos\n              window.autoTable(doc, {\n                startY: nextY + 5,\n                head: [partosHead],\n                body: partosRows,\n                theme: 'grid',\n                styles: { \n                  fontSize: 8, \n                  cellPadding: 2,\n                  lineWidth: 0.1,\n                  lineColor: [200, 200, 200],\n                  minCellHeight: 6,\n                  valign: 'middle'\n                },\n                headStyles: { \n                  fillColor: [126, 211, 33], // Color verde lima corporativo\n                  textColor: 255,\n                  fontStyle: 'bold',\n                  minCellHeight: 8\n                },\n                alternateRowStyles: {\n                  fillColor: [245, 245, 245]\n                },\n                columnStyles: {\n                  0: { cellWidth: 25, halign: 'center' }, // Fecha\n                  1: { cellWidth: 30, halign: 'center' }, // G√©nero\n                  2: { cellWidth: 25, halign: 'center' }, // Estado\n                  3: { cellWidth: 'auto', halign: 'left' } // Observaciones\n                }\n              });\n              \n              // Actualizar la posici√≥n para las observaciones\n              nextY = doc.previousAutoTable.finalY + 15;\n            }\n          }\n        }\n        \n        // A√±adir observaciones si existen\n        const observaciones = document.querySelector('.p-4.bg-gray-50 p')?.textContent;\n        \n        if (observaciones && observaciones !== (currentLang === 'ca' ? 'No hi ha observacions' : 'No hay observaciones')) {\n          doc.setFontSize(14);\n          doc.setTextColor(50, 50, 50);\n          doc.text(currentLang === 'ca' ? 'Observacions:' : 'Observaciones:', 20, nextY);\n          \n          doc.setFontSize(10);\n          doc.setTextColor(80, 80, 80);\n          const observacionesText = doc.splitTextToSize(observaciones, 170);\n          doc.text(observacionesText, 20, nextY + 10);\n        }\n        \n        // Pie de p√°gina\n        const pageCount = doc.internal.getNumberOfPages();\n        for(let i = 1; i <= pageCount; i++) {\n          doc.setPage(i);\n          doc.setFontSize(8);\n          doc.setTextColor(100, 100, 100);\n          doc.text('Masclet Imperi - Sistema de Gesti√≥n Ganadera', 105, doc.internal.pageSize.height - 10, { align: 'center' });\n          doc.text(`P√°gina ${i} de ${pageCount}`, 195, doc.internal.pageSize.height - 10, { align: 'right' });\n        }\n        \n        // Guardar el PDF\n        doc.save(`${animalName}_ficha_${date.replace(/\\//g, '')}.pdf`);\n        \n      } catch (error) {\n        console.error('Error al generar PDF:', error);\n        alert(localStorage.getItem('userLanguage') === 'ca' ? 'Error en generar el PDF' : 'Error al generar el PDF');\n      }\n    }\n    \n    // Traducciones del lado del cliente\n    const translations = {\n      es: {\n        title: \"Ficha de Animal\",\n        back_to_list: \"Volver al listado\",\n        animal_id: \"ID Animal\",\n        loading: \"Cargando datos del animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Activo\",\n        inactive: \"Baja\",\n        dead: \"Fallecido\",\n        update: \"Actualizar\",\n        code: \"C√≥digo\",\n        name: \"Nombre\",\n        serial_number: \"N√∫mero de Serie\",\n        gender: \"Sexo\",\n        male: \"Macho\",\n        female: \"Hembra\",\n        birth_date: \"Fecha de nacimiento\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Fecha incorrecta\",\n        status: \"Estado\",\n        exploitation: \"Explotaci√≥n\",\n        stable: \"Origen\",\n        not_assigned: \"No asignada\",\n        father: \"Padre\",\n        mother: \"Madre\",\n        nursing_status: \"Estado de amamantamiento\",\n        not_nursing: \"No amamanta\",\n        nursing_one: \"Amamanta a un ternero\",\n        nursing_two: \"Amamanta a dos terneros\",\n        back_to_animal_list: \"Volver al listado de animales\",\n        complete_info_tab: \"Informaci√≥n Completa\",\n        birth_history_tab: \"Historial de Partos\",\n        changes_history_tab: \"Historial de Cambios\",\n        identification_data: \"Datos de Identificaci√≥n\",\n        general_data: \"Datos Generales\",\n        birth_history: \"Historial de Partos\",\n        birth_registry: \"Registro de todos los partos del animal\",\n        no_births: \"Este animal no tiene partos registrados\",\n        date: \"Fecha\",\n        gender_label: \"G√©nero\",\n        observations: \"Observaciones\",\n        changes_history: \"Historial de Cambios\",\n        changes_registry: \"Registro de cambios realizados al animal\",\n        no_changes: \"No hay cambios registrados para este animal\",\n        changes_date: \"Fecha\",\n        changes_user: \"Usuario\",\n        changes_field: \"Campo\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nuevo\"\n      },\n      ca: {\n        title: \"Fitxa d'Animal\",\n        back_to_list: \"Tornar al llistat\",\n        animal_id: \"ID Animal\",\n        loading: \"Carregant dades de l'animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Actiu\",\n        inactive: \"Baixa\",\n        dead: \"Mort\",\n        update: \"Actualitzar\",\n        code: \"Codi\",\n        name: \"Nom\",\n        serial_number: \"N√∫mero de S√®rie\",\n        gender: \"Sexe\",\n        male: \"Mascle\",\n        female: \"Femella\",\n        birth_date: \"Data de naixement\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Data incorrecta\",\n        status: \"Estat\",\n        exploitation: \"Explotaci√≥\",\n        stable: \"Origen\",\n        not_assigned: \"No assignada\",\n        father: \"Pare\",\n        mother: \"Mare\",\n        nursing_status: \"Estat d'alletament\",\n        not_nursing: \"No alleta\",\n        nursing_one: \"Alleta un vedell\",\n        nursing_two: \"Alleta dos vedells\",\n        back_to_animal_list: \"Tornar al llistat d'animals\",\n        complete_info_tab: \"Informaci√≥ Completa\",\n        birth_history_tab: \"Historial de Parts\",\n        changes_history_tab: \"Historial de Canvis\",\n        identification_data: \"Dades d'Identificaci√≥\",\n        general_data: \"Dades Generals\",\n        birth_history: \"Historial de Parts\",\n        birth_registry: \"Registre de tots els parts de l'animal\",\n        no_births: \"Aquest animal no t√© parts registrats\",\n        date: \"Data\",\n        gender_label: \"G√®nere\",\n        observations: \"Observacions\",\n        changes_history: \"Historial de Canvis\",\n        changes_registry: \"Registre de canvis realitzats a l'animal\",\n        no_changes: \"No hi ha canvis registrats per a aquest animal\",\n        changes_date: \"Data\",\n        changes_user: \"Usuari\",\n        changes_field: \"Camp\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nou\"\n      }\n    };\n\n    // Funci√≥n para obtener traducci√≥n\n    function t(key, lang) {\n      return translations[lang]?.[key] || key;\n    }\n\n    // Funci√≥n para traducir la ficha de animal\n    function translateAnimalFile() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      \n      // Traducir t√≠tulo y encabezados principales\n      document.querySelector('h1.text-3xl').textContent = t('title', currentLang);\n      \n      // Mantener el texto completo \"Volver al listado de animales\" en el bot√≥n superior\n      // Comentamos esta parte para que no sobrescriba el texto que ya establecimos\n      /* \n      const backLink = document.getElementById('back-to-list-link');\n      if (backLink) {\n        backLink.innerHTML = `<span class=\"mr-1\">‚Üê</span> ${t('back_to_list', currentLang)}`;\n      }\n      */\n      \n      // Corregir problema de ID duplicado\n      const idElement = document.getElementById('animal-id-text');\n      if (idElement) {\n        // Obtener el ID de animal (desde la URL)\n        const animalIdFromUrl = window.location.pathname.split('/').pop();\n        // Actualizar el texto con el formato e ID correcto\n        idElement.textContent = `${t('animal_id', currentLang)}: ${animalIdFromUrl}`;\n      }\n      \n      // Traducir elementos b√°sicos\n      const elements = [\n        { selector: '.text-gray-600.dark\\\\:text-gray-300', key: 'animal_id', prefix: true },\n        { selector: '.animate-spin + p', key: 'loading', prefix: false },\n        { selector: '.text-lg.font-medium.text-red-800', key: 'error_title', prefix: false },\n        { selector: '#retry-button', key: 'retry', prefix: true },\n        { selector: 'a[href^=\"/animals/update\"]', key: 'update', prefix: true },\n      ];\n      \n      elements.forEach(el => {\n        const element = document.querySelector(el.selector);\n        if (element) {\n          if (el.prefix) {\n            // Si tiene un prefijo (como un √≠cono), preservarlo\n            const text = element.innerHTML;\n            const iconPrefix = text.match(/.*?[^\\w\\s]/); // Captura todo hasta el primer no alfanum√©rico\n            if (iconPrefix) {\n              element.innerHTML = iconPrefix[0] + ' ' + t(el.key, currentLang);\n            } else {\n              element.textContent = t(el.key, currentLang);\n            }\n          } else {\n            element.textContent = t(el.key, currentLang);\n          }\n        }\n      });\n\n      // Traducir estado del animal\n      const estadoElement = document.querySelector('.px-3.py-1.rounded-full');\n      if (estadoElement) {\n        // Determinar si est√° activo o inactivo basado en la clase CSS\n        const isActive = estadoElement.classList.contains('bg-green-100') || \n                         estadoElement.classList.contains('text-green-800');\n        estadoElement.textContent = isActive ? t('active', currentLang) : t('inactive', currentLang);\n      }\n      \n      // Traducir informaci√≥n del animal (resumen y detalle)\n      document.querySelectorAll('.text-sm.text-gray-500').forEach(label => {\n        const labelText = label.textContent.trim();\n        \n        // Mapear etiquetas a claves de traducci√≥n\n        let translationKey = '';\n        if (labelText.includes('C√≥digo') || labelText.includes('Codi')) translationKey = 'code';\n        else if (labelText.includes('Nombre') || labelText.includes('Nom')) translationKey = 'name';\n        else if (labelText.includes('N√∫mero de Serie') || labelText.includes('N√∫mero de S√®rie')) translationKey = 'serial_number';\n        else if (labelText.includes('Sexo') || labelText.includes('Sexe')) translationKey = 'gender';\n        else if (labelText.includes('Fecha de nacimiento') || labelText.includes('Data de naixement')) translationKey = 'birth_date';\n        else if (labelText.includes('Estado') || labelText.includes('Estat')) translationKey = 'status';\n        else if (labelText.includes('Explotaci√≥n') || labelText.includes('Explotaci√≥')) translationKey = 'exploitation';\n        else if (labelText.includes('Origen') || labelText.includes('Origen')) translationKey = 'stable';\n        else if (labelText.includes('Padre') || labelText.includes('Pare')) translationKey = 'father';\n        else if (labelText.includes('Madre') || labelText.includes('Mare')) translationKey = 'mother';\n        else if (labelText.includes('amamantamiento') || labelText.includes('alletament')) translationKey = 'nursing_status';\n        \n        if (translationKey) {\n          label.textContent = t(translationKey, currentLang);\n        }\n      });\n      \n      // Traducir pesta√±as de navegaci√≥n\n      document.querySelectorAll('button[id^=\"tab-\"]').forEach(tab => {\n        if (tab.id === 'tab-info') {\n          tab.textContent = t('complete_info_tab', currentLang);\n        } else if (tab.id === 'tab-partos') {\n          tab.textContent = t('birth_history_tab', currentLang);\n        } else if (tab.id === 'tab-changes') {\r\n          tab.textContent = t('changes_history_tab', currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de secciones\r\n      document.querySelectorAll('h3.text-lg.font-medium').forEach(header => {\r\n        const headerText = header.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (headerText.includes('Datos de Identificaci√≥n') || headerText.includes('Dades d\\'Identificaci√≥')) {\r\n          translationKey = 'identification_data';\r\n        } else if (headerText.includes('Datos Generales') || headerText.includes('Dades Generals')) {\r\n          translationKey = 'general_data';\r\n        } else if (headerText.includes('Historial de Partos') || headerText.includes('Historial de Parts')) {\r\n          translationKey = 'birth_history';\r\n        } else if (headerText.includes('Historial de Cambios') || headerText.includes('Historial de Canvis')) {\r\n          translationKey = 'changes_history';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          header.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir descripciones de secciones\r\n      document.querySelectorAll('.mb-4 p.text-gray-500, .p-6.text-center p').forEach(desc => {\r\n        const descText = desc.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (descText.includes('Registro de todos los partos') || descText.includes('Registre de tots els parts')) {\r\n          translationKey = 'birth_registry';\r\n        } else if (descText.includes('No tiene partos registrados') || descText.includes('no t√© parts registrats')) {\r\n          translationKey = 'no_births';\r\n        } else if (descText.includes('Registro de cambios') || descText.includes('Registre de canvis')) {\r\n          translationKey = 'changes_registry';\r\n        } else if (descText.includes('No hay cambios registrados') || descText.includes('No hi ha canvis registrats')) {\r\n          translationKey = 'no_changes';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          desc.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de tablas\r\n      document.querySelectorAll('th.px-6.py-3').forEach(th => {\r\n        const headerText = th.textContent.trim();\r\n        let translationKey = '';\r\n        \r\n        if (headerText.includes('Fecha') || headerText.includes('Data')) {\r\n          translationKey = 'date';\r\n          // Conservar el indicador de ordenaci√≥n\r\n          const sortIndicator = th.querySelector('.sort-indicator');\r\n          if (sortIndicator) {\r\n            th.innerHTML = t(translationKey, currentLang) + ' <span class=\"ml-1 sort-indicator\">' + sortIndicator.innerHTML + '</span>';\r\n            return;\r\n          }\r\n        } else if (headerText.includes('G√©nero') || headerText.includes('G√®nere')) {\r\n          translationKey = 'gender_label';\r\n        } else if (headerText.includes('Estado') || headerText.includes('Estat')) {\r\n          translationKey = 'status';\r\n        } else if (headerText.includes('Observaciones') || headerText.includes('Observacions')) {\r\n          translationKey = 'observations';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          th.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir botones de volver al listado\r\n      document.querySelectorAll('a[href=\"/animals\"].inline-flex').forEach(button => {\r\n        // Preservar el icono de flecha\r\n        const arrowSpan = button.querySelector('span.mr-2');\r\n        if (arrowSpan) {\r\n          button.innerHTML = `<span class=\"mr-2\">‚Üê</span> ${t('back_to_animal_list', currentLang)}`;\r\n        }\r\n      });\r\n      \r\n      // Traducir textos en el contenido din√°mico\r\n      document.querySelectorAll('.font-medium').forEach(value => {\r\n        const valueText = value.textContent.trim();\r\n        \r\n        // Solo traducir valores espec√≠ficos que sabemos que necesitan traducci√≥n\r\n        if (valueText === 'No disponible') {\r\n          value.textContent = t('not_available', currentLang);\r\n        } else if (valueText === 'No asignada') {\r\n          value.textContent = t('not_assigned', currentLang);\r\n        } else if (valueText === 'Fecha incorrecta') {\r\n          value.textContent = t('incorrect_date', currentLang);\r\n        } else if (valueText === 'Macho') {\r\n          value.textContent = t('male', currentLang);\r\n        } else if (valueText === 'Hembra') {\r\n          value.textContent = t('female', currentLang);\r\n        } else if (valueText === 'Activo') {\r\n          value.textContent = t('active', currentLang);\r\n        } else if (valueText === 'Fallecido') {\r\n          value.textContent = t('dead', currentLang);\r\n        } else if (valueText === 'No amamanta') {\r\n          value.textContent = t('not_nursing', currentLang);\r\n        } else if (valueText.includes('Amamanta un ternero')) {\r\n          value.textContent = t('nursing_one', currentLang);\r\n        } else if (valueText.includes('Amamanta dos terneros')) {\r\n          value.textContent = t('nursing_two', currentLang);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Ejecutar traducci√≥n inicial\r\n    translateAnimalFile();\r\n    \r\n    // Retraducir cuando cambie el idioma\r\n    window.addEventListener('storage', function(e) {\r\n      if (e.key === 'userLanguage') {\r\n        translateAnimalFile();\r\n        translateTableButtons();\r\n      }\r\n    });\r\n\r\n    // SOLUCI√ìN AGRESIVA PARA FORZAR LAS TRADUCCIONES\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // Funci√≥n de fuerza bruta para traducir todo, con selecci√≥n directa de elementos\r\n      function traducirTodoForzado() {\r\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\r\n        console.log('[DEBUG] Aplicando traducci√≥n forzada, idioma: ' + currentLang);\r\n        \r\n        // Botones de eliminar\r\n        document.querySelectorAll('button').forEach(btn => {\r\n          if (btn.textContent.trim() === 'Eliminar') {\r\n            if (currentLang === 'ca') {\r\n              btn.title = 'Eliminar part';\r\n            } else {\r\n              btn.title = 'Eliminar parto';\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Textos de g√©nero\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Macho') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Mascle' : 'Macho';\r\n            console.log('[DEBUG] Traducido Macho‚ÜíMascle');\r\n          } \r\n          if (texto === 'Hembra') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Femella' : 'Hembra';\r\n            console.log('[DEBUG] Traducido Hembra‚ÜíFemella');\r\n          }\r\n        });\r\n        \r\n        // Sin observaciones\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Sin observaciones' || texto === 'animals.no_observations') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Sense observacions' : 'Sin observaciones';\n            console.log('[DEBUG] Traducido observaciones');\n          }\n        });\n        \n        // Estados (Vivo/Fallecido)\n        document.querySelectorAll('span.inline-flex').forEach(span => {\n          const texto = span.textContent.trim();\n          if (texto === 'Vivo') {\n            span.innerHTML = currentLang === 'ca' ? 'Viu' : 'Vivo';\n            console.log('[DEBUG] Traducido Vivo‚ÜíViu');\n          }\n          if (texto === 'Fallecido') {\n            span.innerHTML = currentLang === 'ca' ? 'Mort' : 'Fallecido';\n            console.log('[DEBUG] Traducido Fallecido‚ÜíMort');\n          }\n        });\n      }\n      \n      // Ejecutar inmediatamente\n      traducirTodoForzado();\n      \n      // Repetir cada 500ms durante los primeros 10 segundos\n      for (let i = 1; i <= 20; i++) {\n        setTimeout(traducirTodoForzado, i * 500);\n      }\n      \n      // Establecer un intervalo permanente para seguir traduci√©ndolo\n      setInterval(traducirTodoForzado, 2000);\n      \n      // Cuando cambie el idioma\n      window.addEventListener('storage', function(e) {\n        if (e.key === 'userLanguage') {\n          console.log('[DEBUG] Cambio de idioma detectado');\n          // Aplicar inmediatamente y luego con retrasos\n          traducirTodoForzado();\n          for (let i = 1; i <= 10; i++) {\n            setTimeout(traducirTodoForzado, i * 200);\n          }\n        }\n      });\n    });\n    \n    // Bot√≥n de reintentar carga\n    const retryButton = document.getElementById('retry-button');\n    if (retryButton) {\n      retryButton.addEventListener('click', () => {\n        window.location.reload();\n      });\n    }\n    \n    // Obtener todas las pesta√±as y contenidos\n    const tabs = document.querySelectorAll('#tab-info, #tab-partos, #tab-changes');\n    const contents = document.querySelectorAll('#content-info, #content-partos, #content-changes');\n    \n    console.log('Pesta√±as encontradas:', tabs.length);\n    console.log('Contenidos encontrados:', contents.length);\n    \n    // Funci√≥n para mostrar pesta√±a y ocultar las dem√°s\n    const showTab = (tabId) => {\n      console.log('Cambiando a pesta√±a:', tabId);\n      \n      // Ocultar todos los contenidos\n      contents.forEach(content => {\n        content.classList.add('hidden');\n      });\n      \n      // Resetear estilos de todas las pesta√±as\n      tabs.forEach(tab => {\n        tab.classList.remove('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n        tab.classList.add('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n      });\n      \n      // Activar pesta√±a seleccionada\n      const selectedTab = document.getElementById(tabId);\n      if (selectedTab) {\n        selectedTab.classList.remove('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n        selectedTab.classList.add('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n      }\n      \n      // Mostrar contenido correspondiente\n      const contentId = tabId.replace('tab-', 'content-');\n      const selectedContent = document.getElementById(contentId);\n      if (selectedContent) {\n        selectedContent.classList.remove('hidden');\n      }\n    };\n    \n    // Inicializar con la pesta√±a de informaci√≥n abierta\n    showTab('tab-info');\n    \n    // Eventos de clic para pesta√±as\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        showTab(tab.id);\n        console.log('Clic en pesta√±a:', tab.id);\n      });\n    });\n\n    // Ordenaci√≥n de la tabla de partos\n    const sortColumns = document.querySelectorAll('#sort-fecha, #sort-genero, #sort-estado');\n    let currentSortColumn = 'sort-fecha';\n    let currentSortDirection = 'asc';\n\n    // Funci√≥n para ordenar la tabla\n    const sortTable = (columnId, direction) => {\n      const table = document.getElementById('tabla-partos');\n      if (!table) return;\n\n      const tbody = table.querySelector('tbody');\n      if (!tbody) return;\n\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      const sortedRows = [...rows];\n\n      // Obtener el √≠ndice de la columna seg√∫n el ID del encabezado\n      let columnIndex = 0;\n      if (columnId === 'sort-genero') columnIndex = 1;\n      if (columnId === 'sort-estado') columnIndex = 2;\n\n      // Ordenar filas\n      sortedRows.sort((a, b) => {\n        const cellA = a.querySelectorAll('td')[columnIndex].textContent.trim();\n        const cellB = b.querySelectorAll('td')[columnIndex].textContent.trim();\n        \n        if (columnId === 'sort-fecha') {\n          // Para fechas, intentar convertir a objetos Date para comparaci√≥n\n          const dateA = parseDate(cellA);\n          const dateB = parseDate(cellB);\n          \n          if (direction === 'asc') {\n            return dateA - dateB;\n          } else {\n            return dateB - dateA;\n          }\n        } else {\n          // Para texto, comparar strings\n          if (direction === 'asc') {\n            return cellA.localeCompare(cellB, 'es');\n          } else {\n            return cellB.localeCompare(cellA, 'es');\n          }\n        }\n      });\n\n      // Limpiar y reconstruir la tabla\n      while (tbody.firstChild) {\n        tbody.removeChild(tbody.firstChild);\n      }\n\n      sortedRows.forEach(row => tbody.appendChild(row));\n\n      // Actualizar indicadores de ordenaci√≥n\n      sortColumns.forEach(col => {\n        const indicator = col.querySelector('.sort-indicator');\n        if (indicator) {\n          indicator.textContent = '';\n        }\n      });\n\n      const activeHeader = document.getElementById(columnId);\n      const indicator = activeHeader.querySelector('.sort-indicator');\n      if (indicator) {\n        indicator.textContent = direction === 'asc' ? '‚Üë' : '‚Üì';\n      }\n    };\n\n    // Ayudante para convertir texto de fecha a objeto Date\n    const parseDate = (dateStr) => {\n      if (dateStr === 'N/A' || dateStr === 'Fecha incorrecta') {\n        return new Date(0); // Para valores no fechas, usar una fecha muy antigua\n      }\n      \n      // Intenta analizar la fecha en formato DD/MM/YYYY\n      const parts = dateStr.split(/[\\/\\-]/);\n      if (parts.length === 3) {\n        // Asumir formato DD/MM/YYYY\n        return new Date(parts[2], parts[1] - 1, parts[0]);\n      }\n      \n      // Como √∫ltimo recurso, intentar crear fecha directamente\n      return new Date(dateStr);\n    };\n\n    // Agregar eventos de clic a las columnas\n    sortColumns.forEach(col => {\n      col.addEventListener('click', () => {\n        // Si es la misma columna, cambiar direcci√≥n\n        if (col.id === currentSortColumn) {\n          currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n          // Si es una nueva columna, establecer como ascendente\n          currentSortColumn = col.id;\n          currentSortDirection = 'asc';\n        }\n        \n        sortTable(currentSortColumn, currentSortDirection);\n      });\n    });\n\n    // Ordenar por fecha ascendente al cargar la p√°gina\n    sortTable('sort-fecha', 'asc');\n    \n\n  });\n  // Crear un modal personalizado para interacciones con el usuario\n  function crearModalPersonalizado() {\n    // Comprobar si ya existe un modal\n    let modal = document.getElementById('modal-personalizado');\n    if (modal) return modal;\n    \n    // Crear el modal\n    modal = document.createElement('div');\n    modal.id = 'modal-personalizado';\n    modal.className = 'fixed inset-0 flex items-center justify-center z-50 hidden';\n    modal.innerHTML = `\n      <div class=\"fixed inset-0 bg-black bg-opacity-25\" onclick=\"document.getElementById('modal-personalizado').classList.add('hidden')\"></div>\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-auto z-50 relative shadow-lg\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\" id=\"modal-titulo\"></h3>\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\" id=\"modal-mensaje\"></p>\n        <div class=\"flex justify-end space-x-4\">\n          <button id=\"modal-btn-cancelar\" class=\"px-4 py-2 bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 focus:outline-none\">Cancelar</button>\n          <button id=\"modal-btn-confirmar\" class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none\">Confirmar</button>\n        </div>\n      </div>\n    `;\n    document.body.appendChild(modal);\n    \n    // Configurar el bot√≥n Cancelar\n    const btnCancelar = modal.querySelector('#modal-btn-cancelar');\n    btnCancelar.addEventListener('click', function() {\n      modal.classList.add('hidden');\n    });\n    \n    return modal;\n  }\n  \n  // Funci√≥n para mostrar una notificaci√≥n\n  function mostrarNotificacion(mensaje, tipo = 'success') {\n    // Crear elemento de notificaci√≥n\n    const notificacion = document.createElement('div');\n    notificacion.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg text-white ${tipo === 'success' ? 'bg-green-500' : 'bg-red-500'} z-50 animate-fadeIn`;\n    notificacion.textContent = mensaje;\n    document.body.appendChild(notificacion);\n    \n    // Eliminar despu√©s de 3 segundos\n    setTimeout(() => {\n      notificacion.classList.add('animate-fadeOut');\n      setTimeout(() => {\n        notificacion.remove();\n      }, 500);\n    }, 3000);\n  }\n  \n  // A√±adir botones de acciones a la tabla de partos\n  document.addEventListener('DOMContentLoaded', function() {\n    console.log('DOM cargado: Inicializando funcionalidades de animal...');\n    \n    // Agregar estilos para animaciones\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      @keyframes fadeOut {\n        from { opacity: 1; transform: translateY(0); }\n        to { opacity: 0; transform: translateY(10px); }\n      }\n      .animate-fadeIn {\n        animation: fadeIn 0.3s ease-out forwards;\n      }\n      .animate-fadeOut {\n        animation: fadeOut 0.3s ease-in forwards;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    // Crear modal personalizado\n    const modal = crearModalPersonalizado();\n    \n    const tablaPartos = document.getElementById('tabla-partos');\n    if (!tablaPartos) return;\n    \n    const tbody = tablaPartos.querySelector('tbody');\n    if (!tbody) return;\n    \n    // No a√±adir botones si no hay partos (solo hay mensaje de 'no hay registros')\n    const filasVacias = tbody.querySelectorAll('tr[data-empty=\"true\"]');\n    if (filasVacias.length > 0) return;\n    \n    // A√±adir columna de acciones al encabezado\n    const thead = tablaPartos.querySelector('thead tr');\n    if (thead) {\n      const thAcciones = document.createElement('th');\n      thAcciones.scope = 'col';\n      thAcciones.className = 'px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider';\n      thAcciones.textContent = 'Acciones';\n      thead.appendChild(thAcciones);\n    }\n    \n    // A√±adir botones a cada fila\n    const filas = tbody.querySelectorAll('tr');\n    filas.forEach(function(fila) {\n      // Si es una fila vac√≠a, no a√±adir botones\n      if (fila.getAttribute('data-empty') === 'true') return;\n      \n      // Extraer el ID del parto - intentaremos obtenerlo de un atributo data-id\n      // Si no est√° disponible, usaremos un ID generado\n      const partoId = fila.getAttribute('data-id') || `parto-${Math.floor(Math.random() * 1000000)}`;\n      \n      // Crear celda para botones\n      const tdAcciones = document.createElement('td');\n      tdAcciones.className = 'px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400';\n      \n      // Bot√≥n editar\n      const btnEditar = document.createElement('button');\n      btnEditar.className = 'bg-gray-100 text-blue-600 py-1 px-3 rounded-md mr-2 text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-blue-400 dark:hover:bg-gray-600';\n      btnEditar.title = 'Editar informaci√≥n del parto';\n      btnEditar.textContent = 'Editar';\n      btnEditar.setAttribute('data-id', partoId);\n      \n      // Bot√≥n eliminar\n      const btnEliminar = document.createElement('button');\n      btnEliminar.className = 'bg-gray-100 text-red-600 py-1 px-3 rounded-md text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-red-400 dark:hover:bg-gray-600';\n      btnEliminar.textContent = 'Eliminar';\n      btnEliminar.setAttribute('data-id', partoId);\n      btnEliminar.title = 'Eliminar parto';\n      \n      // A√±adir botones a la celda\n      tdAcciones.appendChild(btnEditar);\n      tdAcciones.appendChild(btnEliminar);\n      \n      // A√±adir celda a la fila\n      fila.appendChild(tdAcciones);\n      \n      // Evento para editar parto\n      btnEditar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        console.log('Editando parto:', partoId);\n        \n        // Usar la funci√≥n del script editar-parto-v4.js\n        if (window.editarPartoV4 && window.editarPartoV4.mostrarModal) {\n          window.editarPartoV4.mostrarModal(partoId, fila);\n        } else {\n          console.error('No se ha cargado correctamente el script de edici√≥n de partos v4');\n          mostrarNotificacion('Error al cargar el editor de partos', 'error');\n        }\n      });\n      \n      // Evento para eliminar parto\n      btnEliminar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        const rect = this.getBoundingClientRect();\n        \n        // Configurar el modal\n        document.getElementById('modal-titulo').textContent = 'Eliminar parto';\n        document.getElementById('modal-mensaje').textContent = '¬øSeguro que desea eliminar este parto? Esta acci√≥n no se puede deshacer.';\n        \n        // Mostrar el modal\n        modal.classList.remove('hidden');\n        \n        // Configurar el bot√≥n Confirmar\n        const btnConfirmar = modal.querySelector('#modal-btn-confirmar');\n        btnConfirmar.onclick = function() {\n          modal.classList.add('hidden');\n          console.log('Eliminando parto:', partoId);\n          \n          const token = localStorage.getItem('token');\n          if (!token) {\n            mostrarNotificacion('Error: No se ha encontrado el token de autenticaci√≥n', 'error');\n            return;\n          }\n          \n          // Obtener el ID del animal de la URL\n          const animalIdMatch = window.location.pathname.match(/\\/animals\\/([0-9]+)/);\n          const animalId = animalIdMatch ? animalIdMatch[1] : null;\n          \n          if (!animalId) {\n            alert('Error: No se pudo determinar el ID del animal');\n            return;\n          }\n          \n          // Vamos a intentar diferentes rutas de API en orden de prioridad\n          const apiUrls = [\n            `http://localhost:8000/api/v1/animals/${animalId}/partos/${partoId}`, // Ruta preferida con ID de animal\n            `http://localhost:8000/api/v1/partos/${partoId}` // Ruta alternativa\n          ];\n          \n          // Probar con el endpoint principal (animal_id/partos/parto_id)\n          console.log(`Intentando eliminar parto ${partoId} del animal ${animalId}`);\n          fetch(apiUrls[0], {\n            method: 'DELETE',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(function(response) {\n            if (!response.ok) {\n              // Si el primer endpoint falla, probar con el endpoint alternativo\n              console.log(`Endpoint principal fall√≥ con ${response.status}, intentando endpoint alternativo...`);\n              return fetch(apiUrls[1], {\r\n                method: 'DELETE',\r\n                headers: {\r\n                  'Authorization': `Bearer ${token}`,\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              });\r\n            }\r\n            \r\n            // Algunos endpoints no devuelven JSON v√°lido\r\n            return response.json().catch(() => ({ success: true }));\r\n          })\r\n          .then(function(responseOrData) {\r\n            // Si es una respuesta HTTP de la segunda petici√≥n\r\n            if (responseOrData instanceof Response) {\r\n              const response = responseOrData;\r\n              if (!response.ok) {\r\n                throw new Error(`Error en la API: ${response.status}`);\r\n              }\r\n              \r\n              // Algunos endpoints no devuelven JSON v√°lido\r\n              return response.json().catch(() => ({ success: true }));\r\n            }\r\n            \r\n            // Si son datos de una petici√≥n exitosa anterior\r\n            return responseOrData;\r\n          })\r\n          .then(function(data) {\r\n            console.log('Parto eliminado correctamente:', data);\r\n            \r\n            // Eliminar la fila de la tabla\r\n            if (fila) {\r\n              fila.remove();\r\n              \r\n              // Si no quedan filas, mostrar mensaje\r\n              const filas = tablaPartos.querySelectorAll('tbody tr');\r\n              if (filas.length === 0) {\r\n                const tbody = tablaPartos.querySelector('tbody');\r\n                if (tbody) {\r\n                  const tr = document.createElement('tr');\r\n                  tr.setAttribute('data-empty', 'true');\r\n                  tr.innerHTML = `\r\n                    <td colspan=\"5\" class=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\r\n                      No hay registros de partos para este animal\r\n                    </td>\r\n                  `;\r\n                  tbody.appendChild(tr);\r\n                }\r\n              }\r\n            }\r\n            \r\n            mostrarNotificacion('Parto eliminado correctamente', 'success');\r\n          })\r\n          .catch(function(error) {\r\n            console.error('Error al eliminar parto:', error);\r\n            \r\n            // Intentar mostrar un mensaje m√°s descriptivo basado en el error\r\n            let mensajeError = error.message || 'Error desconocido';\r\n            \r\n            // Si es un error espec√≠fico de API, intentar extraer m√°s informaci√≥n\r\n            if (mensajeError.includes('500')) {\r\n              mensajeError = 'Error interno del servidor. Posible problema con la base de datos.';\r\n            } else if (mensajeError.includes('404')) {\r\n              mensajeError = 'No se encontr√≥ el recurso. Es posible que el parto ya haya sido eliminado.';\r\n            } else if (mensajeError.includes('403')) {\r\n              mensajeError = 'No tiene permisos para eliminar este parto.';\r\n            } else if (mensajeError.includes('401')) {\r\n              mensajeError = 'Su sesi√≥n ha expirado. Por favor, inicie sesi√≥n nuevamente.';\r\n            }\r\n            \r\n            mostrarNotificacion(`Error al eliminar parto: ${mensajeError}`, 'error');\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\r\n</script>\r\n\r\n<!-- Script para edici√≥n de partos -->\r\n<script>\r\n  // Importar el script de edici√≥n de partos (versi√≥n 4 - usando PATCH en lugar de PUT)\r\n  const scriptPartos = document.createElement('script');\r\n  scriptPartos.src = '/scripts/editar-parto-v4.js';\r\n  scriptPartos.type = 'text/javascript';\r\n  document.head.appendChild(scriptPartos);\r\n</script>\r\n\r\n<!-- Script para cargar el historial de cambios -->\r\n<script>\r\n  // Importar el script que maneja la carga del historial de cambios\r\n  const scriptHistorial = document.createElement('script');\r\n  scriptHistorial.src = '/scripts/animal-history.js';\r\n  scriptHistorial.type = 'text/javascript';\r\n  document.head.appendChild(scriptHistorial);\r\n  \r\n  // Escribir directamente al console log para verificar que el script se ejecuta\r\n  console.log('üîç VERIFICACI√ìN: Script interno ejecut√°ndose correctamente');\r\n  \r\n  // Agregar funci√≥n para detectar cuando se hace clic en la pesta√±a de historial\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    const tabChanges = document.getElementById('tab-changes');\r\n    if (tabChanges) {\r\n      console.log('üîç Encontrada pesta√±a de historial, agregando event listener');\r\n      tabChanges.addEventListener('click', function() {\r\n        console.log('üîÑ REGISTRADO: Clic en pesta√±a de historial desde script principal');\r\n      });\r\n    } else {\r\n      console.warn('‚ö†Ô∏è No se encontr√≥ la pesta√±a de historial');\r\n    }\r\n  });\r\n</script>\r\n"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","MainLayout","$$result","$$maybeRenderHead","$$addAttribute","fecha"],"mappings":";;;;;;;;;;;AAAA,MAAA,UAAAA,WAAA,EAAA;AAAA,MAAA,IAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,IAAA;AAQA,EAAM,MAAA,EAAE,EAAG,EAAA,GAAIA,MAAM,CAAA,MAAA;AAGrB,EAAA,MAAM,aAAa,kBAAmB,EAAA;AAGtC,EAAM,MAAA,QAAA,GAAW,UAAe,KAAA,IAAA,GAAO,QAAW,GAAA,OAAA;AAClD,EAAM,MAAA,SAAA,GAAY,UAAe,KAAA,IAAA,GAAO,SAAY,GAAA,QAAA;AACpD,EAAM,MAAA,eAAA,GAAkB,UAAe,KAAA,IAAA,GAAO,eAAkB,GAAA,eAAA;AAChE,EAAM,MAAA,gBAAA,GAAmB,UAAe,KAAA,IAAA,GAAO,oBAAuB,GAAA,mBAAA;AACtE,EAAM,MAAA,OAAA,GAAU,UAAe,KAAA,IAAA,GAAO,KAAQ,GAAA,MAAA;AAC9C,EAAM,MAAA,SAAA,GAAY,UAAe,KAAA,IAAA,GAAO,MAAS,GAAA,WAAA;AAGjD,EAAA,MAAM,YAAe,GAAA;IACnB,EAAI,EAAA;MACF,KAAO,EAAA,iBAAA;MACP,YAAc,EAAA,mBAAA;MACd,SAAW,EAAA,WAAA;MACX,OAAS,EAAA,8BAAA;MACT,WAAa,EAAA,OAAA;MACb,KAAO,EAAA,YAAA;MACP,MAAQ,EAAA,QAAA;MACR,QAAU,EAAA,MAAA;MACV,IAAM,EAAA,WAAA;MACN,MAAQ,EAAA,YAAA;MACR,IAAM,EAAA,WAAA;MACN,IAAM,EAAA,QAAA;MACN,aAAe,EAAA,oBAAA;MACf,MAAQ,EAAA,MAAA;MACR,IAAM,EAAA,OAAA;MACN,MAAQ,EAAA,QAAA;MACR,UAAY,EAAA,qBAAA;MACZ,aAAe,EAAA,eAAA;MACf,cAAgB,EAAA,kBAAA;MAChB,MAAQ,EAAA,QAAA;MACR,YAAc,EAAA,gBAAA;MACd,MAAQ,EAAA,QAAA;MACR,YAAc,EAAA,aAAA;MACd,MAAQ,EAAA,OAAA;MACR,MAAQ,EAAA,OAAA;MACR,cAAgB,EAAA,0BAAA;MAChB,WAAa,EAAA,aAAA;MACb,WAAa,EAAA,uBAAA;MACb,WAAa,EAAA,yBAAA;MACb,mBAAqB,EAAA,+BAAA;MACrB,iBAAmB,EAAA,yBAAA;MACnB,iBAAmB,EAAA,qBAAA;MACnB,mBAAqB,EAAA,sBAAA;MACrB,mBAAqB,EAAA,4BAAA;MACrB,YAAc,EAAA,iBAAA;MACd,aAAe,EAAA,qBAAA;MACf,cAAgB,EAAA,yCAAA;MAChB,SAAW,EAAA,yCAAA;MACX,IAAM,EAAA,OAAA;MACN,YAAc,EAAA,WAAA;MACd,YAAc,EAAA,eAAA;MACd,eAAiB,EAAA,sBAAA;MACjB,gBAAkB,EAAA,0CAAA;MAClB,UAAY,EAAA,6CAAA;MACZ,YAAc,EAAA,OAAA;MACd,YAAc,EAAA,SAAA;MACd,aAAe,EAAA,OAAA;MACf,iBAAmB,EAAA,gBAAA;MACnB,iBAAmB,EAAA;AACrB,KAAA;IACA,EAAI,EAAA;MACF,KAAO,EAAA,gBAAA;MACP,YAAc,EAAA,mBAAA;MACd,SAAW,EAAA,WAAA;MACX,OAAS,EAAA,gCAAA;MACT,WAAa,EAAA,OAAA;MACb,KAAO,EAAA,YAAA;MACP,MAAQ,EAAA,OAAA;MACR,QAAU,EAAA,OAAA;MACV,IAAM,EAAA,MAAA;MACN,MAAQ,EAAA,aAAA;MACR,IAAM,EAAA,MAAA;MACN,IAAM,EAAA,KAAA;MACN,aAAe,EAAA,uBAAA;MACf,MAAQ,EAAA,MAAA;MACR,IAAM,EAAA,QAAA;MACN,MAAQ,EAAA,SAAA;MACR,UAAY,EAAA,mBAAA;MACZ,aAAe,EAAA,eAAA;MACf,cAAgB,EAAA,iBAAA;MAChB,MAAQ,EAAA,OAAA;MACR,YAAc,EAAA,eAAA;MACd,MAAQ,EAAA,QAAA;MACR,YAAc,EAAA,cAAA;MACd,MAAQ,EAAA,MAAA;MACR,MAAQ,EAAA,MAAA;MACR,cAAgB,EAAA,oBAAA;MAChB,WAAa,EAAA,WAAA;MACb,WAAa,EAAA,kBAAA;MACb,WAAa,EAAA,oBAAA;MACb,mBAAqB,EAAA,6BAAA;MACrB,iBAAmB,EAAA,wBAAA;MACnB,iBAAmB,EAAA,oBAAA;MACnB,mBAAqB,EAAA,qBAAA;MACrB,mBAAqB,EAAA,0BAAA;MACrB,YAAc,EAAA,gBAAA;MACd,aAAe,EAAA,oBAAA;MACf,cAAgB,EAAA,wCAAA;MAChB,SAAW,EAAA,yCAAA;MACX,IAAM,EAAA,MAAA;MACN,YAAc,EAAA,WAAA;MACd,YAAc,EAAA,cAAA;MACd,eAAiB,EAAA,qBAAA;MACjB,gBAAkB,EAAA,0CAAA;MAClB,UAAY,EAAA,gDAAA;MACZ,YAAc,EAAA,MAAA;MACd,YAAc,EAAA,QAAA;MACd,aAAe,EAAA,MAAA;MACf,iBAAmB,EAAA,gBAAA;MACnB,iBAAmB,EAAA;AACrB;AACF,GAAA;AAGA,EAAA,SAAS,EAAE,GAAK,EAAA;AACd,IAAA,OAAO,YAAa,CAAA,UAAyB,CAAI,GAAA,GAAG,CAAK,IAAA,GAAA;AAC3D;AAGA,EAAM,MAAA,KAAA,GAAQ,EAAE,OAAO,CAAA;AACvB,EAAA,MAAM,QAAW,GAAA,eAAA;AAGjB,EAAA,IAAI,MAAS,GAAA,IAAA;AACb,EAAA,IAAI,KAAQ,GAAA,IAAA;AACZ,EAAA,IAAI,OAAU,GAAA,IAAA;AAEd,EAAI,IAAA;AACF,IAAA,IAAI,CAAC,EAAM,IAAA,KAAA,CAAM,QAAS,CAAA,EAAE,CAAC,CAAG,EAAA;AAC9B,MAAM,MAAA,IAAI,MAAM,2BAAwB,CAAA;AAC1C;AAGA,IAAQ,OAAA,CAAA,GAAA,CAAI,CAAoC,iCAAA,EAAA,EAAE,CAAE,CAAA,CAAA;AACpD,IAAA,MAAA,GAAS,MAAM,aAAA,CAAc,aAAc,CAAA,QAAA,CAAS,EAAE,CAAC,CAAA;AACvD,IAAQ,OAAA,CAAA,GAAA,CAAI,mBAAmB,MAAM,CAAA;AAErC,IAAA,IAAI,CAAC,MAAQ,EAAA;AACX,MAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAClD;AAEA,IAAU,OAAA,GAAA,KAAA;AACZ,GAAA,CAAA,OAAS,CAAG,EAAA;AACV,IAAQ,OAAA,CAAA,KAAA,CAAM,qCAAqC,CAAC,CAAA;AACpD,IAAA,KAAA,GAAQ,EAAE,OAAW,IAAA,sCAAA;AACrB,IAAU,OAAA,GAAA,KAAA;AACZ;AAGA,EAAM,MAAA,aAAA,GAAgB,MAAU,IAAA,MAAA,CAAO,MAAW,KAAA,GAAA;AAIlD,EAAA,IAAI,QAAW,GAAA,8BAAA;AAEf,EAAA,IAAI,MAAQ,EAAA;AACV,IAAI,IAAA,MAAA,CAAO,WAAW,GAAK,EAAA;AACzB,MAAW,QAAA,GAAA,8BAAA;KACN,MAAA;AACL,MAAW,QAAA,GAAA,MAAA,CAAO,OAAY,KAAA,GAAA,GAAM,uBAA0B,GAAA,yBAAA;AAChE;AACF;AAGA,EAAa,MAAA,GAAS,aAAc,CAAA,aAAA,CAAc,MAAM,CAAI,GAAA;AAG5D,EAAoB,MAAS,GAAA,aAAA,CAAc,oBAAqB,CAAA,MAAA,CAAO,MAAM,CAAI,GAAA;AArLjF,EAAA,OAAAC,2BAAA,UAirBE,CAAA,CAAA,EAAA,EAAA,CAAA;;;;;;;;;;;;;AAjrBF,2GAAA,CAAA,CAAA,CAAA,CAAA,EAAAC,eAAA,CAAA,UAAA,YAAA,EAAAC,YAAA,EAAA,EAyLY,OAAO,EAAA,KAAA,EAAO,YAAU,QAAU,EAAA,aAAA,EAzL9C,UAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAC,cAAAH,cAAA,CAAA,CAAA,EAAAI,eAAA,CAAA,CAAA,CAAA;AAgMuE,8EAAA,EAAA,KAAK,CACP,sEAAA,EAAA,CAAA,CAAE,WAAW,CAAC,KAAI,EAAE,CAAA,YAAA,EAGtF,OApMH,IAAAJ,cAAA,CAAA,6QAAA,EAwMY,CAAE,CAAA,SAAS,CAAC,CAAA,kBAAA,CAGrB,GAEA,KA7MH,IAAAA,cAAA,CAAA;;2FAoN0E,CAAE,CAAA,aAAa,CAAC,CAAA,2DAAA,EAE1E,KAAK,CAAA;IAOJ,CAAE,CAAA,OAAO,CAAC,CAMxB,sCAAA,CAAA,CAAA,EAEA,UArOHA,cAAA,CAAA,EAAAC,eAAA,CAAAE,SAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAAA,SAAA,KAAAH,cAAA,CAAA,sCAAA,EAAAK,aAyOqB,MAAO,CAAA,MAAA,EAzO5B,aAAA,CAAA,CAAA,EAAAA,YAAA;AA2OW,IAAA,MAAA,CAAO,MAAU,IAAA,MAAA,CAAO,MAAO,CAAA,KAAA,IAAS,MAAO,CAAA,MAAA,CAAO,KAAM,CAAA,MAAA,GAAS,CACrE,IAAA,MAAA,CAAO,MAAU,IAAA,KAAA,CAAM,QAAQ,MAAO,CAAA,MAAM,CAAK,IAAA,MAAA,CAAO,MAAO,CAAA,MAAA,GAAS,CACxE,IAAA,MAAA,CAAO,SAAS,KAAM,CAAA,OAAA,CAAQ,MAAO,CAAA,KAAK,CAAK,IAAA,MAAA,CAAO,KAAM,CAAA,MAAA,GAAS,IAAK,MAAS,GAAA,OAAA;AA7O9F,IAAA;GAAA,CAAA,+UAAA,EAAAA,aAuPwB,QAvPxB,EAAA,KAAA,CAAA,CAyPa,6DAAA,EAAA,MAAA,CAAO,WAAW,KAzP/B,IAAAL,cAAA,CAAA;;AA6Pa,OAAA,CAAA,CAAA,8HAAA,EAKkE,MAAO,CAAA,GAAG,CAGpB,oHAAA,EAAA,CAAA,CAAE,MAAM,CAAC,CAAA,4BAAA,EACtC,MAAO,CAAA,GAAA,IAAO,CAAE,CAAA,eAAe,CAAC,CAAA,sEAAA,EAGH,EAAE,QAAQ,CAAC,CACxC,4BAAA,EAAA,MAAA,CAAO,MAAW,KAAA,GAAA,GAAM,CAAE,CAAA,MAAM,IAAI,CAAE,CAAA,QAAQ,CAAC,CAAA,sEAAA,EAGlB,EAAE,YAAY,CAAC,CAEjE,6BAAA,EAAA,MAAA,CAAO,OACL,MAAM;AACL,IAAI,IAAA;AAEF,MAAI,IAAA,OAAO,MAAO,CAAA,GAAA,KAAQ,QAAY,IAAA,IAAI,MAAO,CAAA,sCAAsC,CAAE,CAAA,IAAA,CAAK,MAAO,CAAA,GAAG,CAAG,EAAA;AAEzG,QAAA,MAAM,MAAS,GAAA,MAAA,CAAO,GAAI,CAAA,KAAA,CAAM,QAAQ,CAAA;AACxC,QAAI,IAAA,MAAA,CAAO,WAAW,CAAG,EAAA;AAEvB,UAAA,MAAMM,SAAQ,IAAI,IAAA,CAAK,SAAS,MAAO,CAAA,CAAC,CAAC,CAAG,EAAA,QAAA,CAAS,MAAO,CAAA,CAAC,CAAC,CAAE,GAAA,CAAA,EAAG,SAAS,MAAO,CAAA,CAAC,CAAC,CAAC,CAAA;AACtF,UAAA,IAAI,CAAC,KAAA,CAAMA,MAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,YAAA,OAAO,GAAG,MAAO,CAAA,CAAC,EAAE,QAAS,CAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,CAAA,CAAE,SAAS,CAAG,EAAA,GAAG,CAAC,CAAI,CAAA,EAAA,MAAA,CAAO,CAAC,CAAC,CAAA,CAAA;AACjF;AACF;AAEA,QAAA,OAAO,MAAO,CAAA,GAAA;AAChB;AAGA,MAAA,MAAM,KAAQ,GAAA,IAAI,IAAK,CAAA,MAAA,CAAO,GAAG,CAAA;AACjC,MAAA,IAAI,CAAC,KAAA,CAAM,KAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,QAAO,OAAA,KAAA,CAAM,kBAAmB,CAAA,OAAA,EAAS,EAAC,GAAA,EAAK,WAAW,KAAO,EAAA,SAAA,EAAW,IAAM,EAAA,SAAA,EAAU,CAAA;AAC9F;AAEA,MAAO,OAAA,MAAA,CAAO,OAAO,GAAG,CAAA;AAC1B,KAAA,CAAA,OAAS,CAAG,EAAA;AACV,MAAA,OAAO,EAAE,gBAAgB,CAAA;AAC3B;AACF,GAAA,GACE,GAAA,CAAA,CAAE,eAAe,CACrB,CAImD,uEAAA,EAAA,CAAA,CAAE,cAAc,CAAC,CAC9C,4BAAA,EAAA,MAAA,CAAO,UAAc,IAAA,CAAA,CAAE,eAAe,CAAC,CAGV,sEAAA,EAAA,CAAA,CAAE,QAAQ,CAAC,CACxC,4BAAA,EAAA,MAAA,CAAO,MAAU,IAAA,CAAA,CAAE,cAAc,CAAC,CAE3D,YAAA,EAAA,MAAA,CAAO,MAAW,KAAA,GAAA,IAxTjCN,cA0TuE,CAAA,0DAAA,EAAA,CAAA,CAAE,gBAAgB,CAAC,CAErE,6BAAA,EAAA,MAAA,CAAO,OAAY,KAAA,GAAA,GAAM,CAAE,CAAA,aAAa,CACxC,GAAA,MAAA,CAAO,OAAY,KAAA,GAAA,GAAM,CAAE,CAAA,aAAa,CACxC,GAAA,MAAA,CAAO,OAAY,KAAA,GAAA,GAAM,CAAE,CAAA,aAAa,CAAI,GAAA,CAAA,CAAE,eAAe,CAAC,CAGpE,YAAA,CAAA,CAAA,qEAAA,EAjUfK,YAuUqB,CAAA,CAAA,gBAAA,EAAmB,EAAE,CAAA,CAAA,EAvU1C,MAAA,CAAA,CAAA;;AAmVa,8UAAA,EAAA,CAAA,CAAE,mBAAmB,CAAC,CAExB,WAAA,EAAA,aAAA,IArVXL,0IAuVe,CAAE,CAAA,mBAAmB,CAAC,CAAA,UAAA,CAE1B,CAEE,2HAAA,EAAA,CAAA,CAAE,qBAAqB,CAAC,oQAU+C,CAAE,CAAA,qBAAqB,CAAC,CAAA,wFAAA,EAGnC,CAAE,CAAA,MAAM,CAAC,CAAA,4BAAA,EACtC,OAAO,GAAO,IAAA,CAAA,CAAE,eAAe,CAAC,CAGH,sEAAA,EAAA,CAAA,CAAE,MAAM,CAAC,+BACtC,MAAO,CAAA,GAAG,CAGmB,sEAAA,EAAA,CAAA,CAAE,eAAe,CAAC,CAC/C,4BAAA,EAAA,MAAA,CAAO,aAAa,CAAE,CAAA,eAAe,CAAC,CAAA,mGAAA,EAME,CAAE,CAAA,cAAc,CAAC,CAAA,wFAAA,EAG5B,EAAE,QAAQ,CAAC,CACxC,4BAAA,EAAA,MAAA,CAAO,MAAW,KAAA,GAAA,GAAM,CAAE,CAAA,MAAM,IAAI,CAAE,CAAA,QAAQ,CAAC,CAAA,sEAAA,EAGlB,EAAE,YAAY,CAAC,CAEjE,6BAAA,EAAA,MAAA,CAAO,OACL,MAAM;AACL,IAAI,IAAA;AAEF,MAAI,IAAA,OAAO,MAAO,CAAA,GAAA,KAAQ,QAAY,IAAA,IAAI,MAAO,CAAA,sCAAwC,CAAE,CAAA,IAAA,CAAK,MAAO,CAAA,GAAG,CAAG,EAAA;AAE3G,QAAA,MAAM,MAAS,GAAA,MAAA,CAAO,GAAI,CAAA,KAAA,CAAM,QAAQ,CAAA;AACxC,QAAI,IAAA,MAAA,CAAO,WAAW,CAAG,EAAA;AAEvB,UAAA,MAAMM,SAAQ,IAAI,IAAA,CAAK,SAAS,MAAO,CAAA,CAAC,CAAC,CAAG,EAAA,QAAA,CAAS,MAAO,CAAA,CAAC,CAAC,CAAE,GAAA,CAAA,EAAG,SAAS,MAAO,CAAA,CAAC,CAAC,CAAC,CAAA;AACtF,UAAA,IAAI,CAAC,KAAA,CAAMA,MAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,YAAA,OAAO,GAAG,MAAO,CAAA,CAAC,EAAE,QAAS,CAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,CAAA,CAAE,SAAS,CAAG,EAAA,GAAG,CAAC,CAAI,CAAA,EAAA,MAAA,CAAO,CAAC,CAAC,CAAA,CAAA;AACjF;AACF;AAEA,QAAA,OAAO,MAAO,CAAA,GAAA;AAChB;AAGA,MAAA,MAAM,KAAQ,GAAA,IAAI,IAAK,CAAA,MAAA,CAAO,GAAG,CAAA;AACjC,MAAA,IAAI,CAAC,KAAA,CAAM,KAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,QAAO,OAAA,KAAA,CAAM,kBAAmB,CAAA,OAAA,EAAS,EAAC,GAAA,EAAK,WAAW,KAAO,EAAA,SAAA,EAAW,IAAM,EAAA,SAAA,EAAU,CAAA;AAC9F;AAEA,MAAO,OAAA,MAAA,CAAO,OAAO,GAAG,CAAA;AAC1B,KAAA,CAAA,OAAS,CAAG,EAAA;AACV,MAAA,OAAO,EAAE,gBAAgB,CAAA;AAC3B;GACC,GAAA,GACD,EAAE,eAAe,CACrB,0EAImD,CAAE,CAAA,QAAQ,CAAC,CAAA,4BAAA,EACxC,MAAO,CAAA,MAAA,KAAW,OAAO,CAAE,CAAA,QAAQ,CAAI,GAAA,CAAA,CAAE,MAAM,CAAC,gKASnB,CAAE,CAAA,cAAc,CAAC,CAAA,4BAAA,EAC9C,MAAO,CAAA,UAAA,IAAc,EAAE,eAAe,CAAC,yEAGV,CAAE,CAAA,QAAQ,CAAC,CACxC,4BAAA,EAAA,MAAA,CAAO,MAAU,IAAA,CAAA,CAAE,cAAc,CAAC,iKASL,CAAE,CAAA,QAAQ,CAAC,CAAA,4BAAA,EACxC,MAAO,CAAA,IAAA,IAAQ,EAAE,eAAe,CAAC,CAGJ,sEAAA,EAAA,CAAA,CAAE,QAAQ,CAAC,+BACxC,MAAO,CAAA,IAAA,IAAQ,EAAE,eAAe,CAAC,eAE1D,MAAO,CAAA,MAAA,KAAW,GAjcrC,IAAAN,cAAA,CAAA,0DAAA,EAmc2E,CAAE,CAAA,gBAAgB,CAAC,CAErE,6BAAA,EAAA,MAAA,CAAO,OAAY,KAAA,GAAA,GAAM,CAAE,CAAA,aAAa,IACxC,MAAO,CAAA,OAAA,KAAY,GAAM,GAAA,CAAA,CAAE,aAAa,CAAA,GACxC,OAAO,OAAY,KAAA,GAAA,GAAM,EAAE,aAAa,CAAA,GAAI,EAAE,eAAe,CAAC,CAGpE,YAAA,CAAA,CAAA,qJAAA,EAMiE,CAAE,CAAA,cAAc,CAAC,CAElF,+DAAA,EAAA,MAAA,CAAO,aAld1B,GAAAA,cAAA,CAAA,gEAAA,EAmdqF,MAAO,CAAA,aAAa,SAndzGA,cAqdwE,CAAA,mDAAA,EAAA,CAAA,CAAE,iBAAiB,CAAC,CACzE,IAAA,CAAA,CAAA;;;2RAoC0D,CAAE,CAAA,eAAe,CAAC,CAAA,kDAAA,EACpC,CAAE,CAAA,gBAAgB,CAAC,CAAA,YAAA,EAEjE,aA7fb,IAAAA,cAAA,CAAA,oUAAA,EAogByB,CAAE,CAAA,MAAM,CAAC,CAAA,4MAAA,EAE+I,EAAE,cAAc,CAAC,CACjB,gKAAA,EAAA,CAAA,CAAE,QAAQ,CAAC,CAC3C,gIAAA,EAAA,CAAA,CAAE,cAAc,CAAC,CAI7I,6GAAA,EAAA,MAAA,IAAA,CAAW,MAAM;AAEhB,IAAA,IAAI,cAAc,EAAC;AAEnB,IAAI,IAAA,MAAA,CAAO,UAAU,MAAO,CAAA,MAAA,CAAO,SAAS,MAAO,CAAA,MAAA,CAAO,KAAM,CAAA,MAAA,GAAS,CAAG,EAAA;AAE1E,MAAA,WAAA,GAAc,OAAO,MAAO,CAAA,KAAA;KACnB,MAAA,IAAA,MAAA,CAAO,MAAU,IAAA,KAAA,CAAM,OAAQ,CAAA,MAAA,CAAO,MAAM,CAAK,IAAA,MAAA,CAAO,MAAO,CAAA,MAAA,GAAS,CAAG,EAAA;AAEpF,MAAA,WAAA,GAAc,MAAO,CAAA,MAAA;KACZ,MAAA,IAAA,MAAA,CAAO,KAAS,IAAA,KAAA,CAAM,OAAQ,CAAA,MAAA,CAAO,KAAK,CAAK,IAAA,MAAA,CAAO,KAAM,CAAA,MAAA,GAAS,CAAG,EAAA;AAEjF,MAAA,WAAA,GAAc,MAAO,CAAA,KAAA;AACvB;AAEA,IAAI,IAAA,WAAA,CAAY,SAAS,CAAG,EAAA;AAE1B,MAAY,WAAA,CAAA,IAAA,CAAK,CAAC,CAAA,EAAG,CAAM,KAAA;AACzB,QAAM,MAAA,MAAA,GAAS,CAAE,CAAA,IAAA,GAAO,IAAI,IAAA,CAAK,EAAE,IAAI,CAAA,mBAAQ,IAAA,IAAA,CAAK,CAAC,CAAA;AACrD,QAAM,MAAA,MAAA,GAAS,CAAE,CAAA,IAAA,GAAO,IAAI,IAAA,CAAK,EAAE,IAAI,CAAA,mBAAQ,IAAA,IAAA,CAAK,CAAC,CAAA;AACrD,QAAA,OAAO,MAAS,GAAA,MAAA;OACjB,CAAA;AAED,MAAA,OAAO,WAAY,CAAA,GAAA,CAAI,CAAC,KAAA,KAniBhDA,cAAA,CAAA,GAAA,EAAAK,YAAA,CAoiBuC,KAAM,CAAA,EAAA,EApiB7C,SAAA,CAAA,CAsiB+B,iFAAA,EAAA,KAAA,CAAM,QACJ,MAAM;AACL,QAAI,IAAA;AACF,UAAI,IAAA,OAAO,KAAM,CAAA,IAAA,KAAS,QAAU,EAAA;AAElC,YAAA,IAAI,IAAI,MAAO,CAAA,sCAAsC,EAAE,IAAK,CAAA,KAAA,CAAM,IAAI,CAAG,EAAA;AAEvE,cAAA,MAAM,MAAS,GAAA,KAAA,CAAM,IAAK,CAAA,KAAA,CAAM,QAAQ,CAAA;AACxC,cAAI,IAAA,MAAA,CAAO,WAAW,CAAG,EAAA;AAEvB,gBAAA,MAAM,QAAQ,IAAI,IAAA,CAAK,SAAS,MAAO,CAAA,CAAC,CAAC,CAAG,EAAA,QAAA,CAAS,MAAO,CAAA,CAAC,CAAC,CAAE,GAAA,CAAA,EAAG,SAAS,MAAO,CAAA,CAAC,CAAC,CAAC,CAAA;AACtF,gBAAA,IAAI,CAAC,KAAA,CAAM,KAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,kBAAA,OAAO,GAAG,MAAO,CAAA,CAAC,EAAE,QAAS,CAAA,CAAA,EAAG,GAAG,CAAC,CAAA,CAAA,EAAI,OAAO,CAAC,CAAA,CAAE,SAAS,CAAG,EAAA,GAAG,CAAC,CAAI,CAAA,EAAA,MAAA,CAAO,CAAC,CAAC,CAAA,CAAA;AACjF;AACF;AAEA,cAAA,OAAO,KAAM,CAAA,IAAA;aACR,MAAA;AAEL,cAAA,MAAM,KAAQ,GAAA,IAAI,IAAK,CAAA,KAAA,CAAM,IAAI,CAAA;AACjC,cAAA,IAAI,CAAC,KAAA,CAAM,KAAM,CAAA,OAAA,EAAS,CAAG,EAAA;AAC3B,gBAAO,OAAA,KAAA,CAAM,kBAAmB,CAAA,OAAA,EAAS,EAAC,GAAA,EAAK,WAAW,KAAO,EAAA,SAAA,EAAW,IAAM,EAAA,SAAA,EAAU,CAAA;AAC9F;AACF;AACF;AACA,UAAO,OAAA,MAAA,CAAO,MAAM,IAAI,CAAA;AAC1B,SAAA,CAAA,OAAS,CAAG,EAAA;AACV,UAAO,OAAA,kBAAA;AACT;AACF,OAAA,MACE,KACJ,CAAA,sFAAA,EAGC,MAAM,OAAY,KAAA,GAAA,GAAM,WACxB,KAAM,CAAA,OAAA,KAAY,GAAM,GAAA,SAAA,GACxB,MAAM,OAAY,KAAA,WAAA,GAAc,eAAY,eAAe,CAAA,qDAAA,EA1kB1FA,aA6kB2C,CACX,8DAAA,EAAA,KAAA,CAAM,OAAY,KAAA,IAAA,GAAO,sEACzB,2DACF,CAAA,CAAA,EAhlB9B,OAAA,CAAA,CAAA,EAAA,EAilBiC,MAAM,OAAY,KAAA,IAAA,GAAO,UAAU,SAAS,CAAA,iGAAA,EAI9C,MAAM,YAAgB,IAAA,KAAA,CAAM,iBAAiB,KAAM,CAAA,GAAA,IAAO,gBAAgB,CAGhF,YAAA,CAAA,CAAA;KACI,MAAA;AACL,MA1lBxB,OAAAL,cAAA,CAAA;;;AAimBsB;GACC,GAAC,2BAIX,CAEE,gEAAA,EAAA,CAAC,iBAxmBhBA,cAymBoB,CAAA,GAAA,EAAA,CAAA,CAAE,WAAW,CAAC,CACnB,IAAA,CAAA,CAAA;;;wOA6B8D,CAAE,CAAA,iBAAiB,CAAC,CACtC,kDAAA,EAAA,CAAA,CAAE,kBAAkB,CAAC,CAAA,8EAAA,EAG9D,CAAE,CAAA,YAAY,CAAC,CAAA;;;gSA3oBjC,CAAA,CAAA,CAAA,CAAA,CAAA,EAirBE,CAAA,CAAA;AAjrBF,CAAA,EAAA,gFAAA,MAAA,CAAA;;;;;;;;;;;;;;;;"}