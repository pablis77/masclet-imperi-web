{"version":3,"file":"new.astro.mjs","sources":["../../../../src/components/ui/Alert.astro","../../../../src/components/animals/CreateAnimalForm.astro","../../../../src/pages/animals/new.astro"],"sourcesContent":["---\n/**\n * Componente de alerta para mostrar mensajes al usuario\n */\ninterface Props {\n  type: 'success' | 'error' | 'info' | 'warning';\n  title?: string;\n  message: string;\n  dismissible?: boolean;\n  icon?: boolean;\n}\n\nconst { \n  type = 'info', \n  title, \n  message, \n  dismissible = true,\n  icon = true \n} = Astro.props;\n\n// Configurar clases y iconos según el tipo de alerta\nlet bgColor, borderColor, textColor, iconSvg;\n\nswitch (type) {\n  case 'success':\n    bgColor = 'bg-green-50 dark:bg-green-900/20';\n    borderColor = 'border-green-500 dark:border-green-700';\n    textColor = 'text-green-800 dark:text-green-300';\n    iconSvg = `<svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n    </svg>`;\n    break;\n  case 'error':\n    bgColor = 'bg-red-50 dark:bg-red-900/20';\n    borderColor = 'border-red-500 dark:border-red-700';\n    textColor = 'text-red-800 dark:text-red-300';\n    iconSvg = `<svg class=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n    </svg>`;\n    break;\n  case 'warning':\n    bgColor = 'bg-yellow-50 dark:bg-yellow-900/20';\n    borderColor = 'border-yellow-500 dark:border-yellow-700';\n    textColor = 'text-yellow-800 dark:text-yellow-300';\n    iconSvg = `<svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n    </svg>`;\n    break;\n  default: // info\n    bgColor = 'bg-blue-50 dark:bg-blue-900/20';\n    borderColor = 'border-blue-500 dark:border-blue-700';\n    textColor = 'text-blue-800 dark:text-blue-300';\n    iconSvg = `<svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n    </svg>`;\n}\n---\n\n<div class={`alert rounded-lg border ${borderColor} ${bgColor} p-4 mb-4`} role=\"alert\">\n  <div class=\"flex items-start\">\n    {icon && (\n      <div class=\"flex-shrink-0\" set:html={iconSvg} />\n    )}\n    <div class=\"ml-3 flex-grow\">\n      {title && (\n        <h3 class={`text-lg font-medium ${textColor}`}>{title}</h3>\n      )}\n      <div class={`mt-2 ${textColor} text-sm`}>\n        <p>{message}</p>\n      </div>\n    </div>\n    {dismissible && (\n      <div class=\"ml-auto pl-3\">\n        <div class=\"-mx-1.5 -my-1.5\">\n          <button \n            type=\"button\" \n            class=\"inline-flex rounded-md p-1.5 text-gray-500 hover:text-gray-600 focus:outline-none\" \n            aria-label=\"Cerrar\"\n            onclick=\"this.closest('.alert').remove()\"\n          >\n            <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    )}\n  </div>\n</div>\n","---\n/**\n * Formulario para crear un nuevo animal\n */\nimport type { Animal } from '../../types/types';\nimport Alert from '../ui/Alert.astro';\n\ninterface Props {\n  explotaciones: Array<{ id: number; explotacio: string }>;\n  error?: string | null;\n}\n\nconst { explotaciones, error = null } = Astro.props;\n---\n\n<div class=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-100 dark:border-gray-700\">\n  {error && (\n    <Alert \n      type=\"error\" \n      title=\"Error\" \n      message={error} \n      class=\"mb-4\"\n    />\n  )}\n\n  <form id=\"new-animal-form\" class=\"space-y-6\">\n    <!-- Datos básicos -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Nombre *\n        </label>\n        <input \n          type=\"text\" \n          name=\"nom\" \n          id=\"nom\"\n          required\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Nombre del animal\"\n        />\n      </div>\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Código\n        </label>\n        <input \n          type=\"text\" \n          name=\"cod\" \n          id=\"cod\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Código del animal\"\n        />\n      </div>\n    </div>\n\n    <!-- Datos de identificación -->\n    <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Género *\n        </label>\n        <select \n          name=\"genere\" \n          id=\"genere\"\n          required\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n        >\n          <option value=\"\">Seleccionar</option>\n          <option value=\"M\">Macho</option>\n          <option value=\"F\">Hembra</option>\n        </select>\n      </div>\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Fecha de Nacimiento\n        </label>\n        <input \n          type=\"date\" \n          name=\"dob\" \n          id=\"dob\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n        />\n      </div>\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Número de Serie\n        </label>\n        <input \n          type=\"text\" \n          name=\"num_serie\" \n          id=\"num_serie\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Número de serie oficial\"\n        />\n      </div>\n    </div>\n\n    <!-- Datos de explotación -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Explotación *\n        </label>\n        <input \n          type=\"text\" \n          name=\"explotacio\" \n          id=\"explotacio\"\n          required\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Nombre de la explotación\"\n          list=\"explotaciones-list\"\n        />\n        <!-- Lista desplegable para sugerencias (datalist) -->\n        <datalist id=\"explotaciones-list\">\n          {explotaciones.map(exp => (\n            <option value={exp.explotacio}>{exp.explotacio}</option>\n          ))}\n        </datalist>\n        <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">Puedes seleccionar una existente o crear una nueva</p>\n      </div>\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Origen\n        </label>\n        <input \n          type=\"text\" \n          name=\"origen\"\n          id=\"origen\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Origen o ubicación\"\n        />\n      </div>\n    </div>\n\n    <!-- Datos de parentesco -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Padre\n        </label>\n        <input \n          type=\"text\" \n          name=\"pare\" \n          id=\"pare\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Nombre del padre\"\n        />\n      </div>\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Madre\n        </label>\n        <input \n          type=\"text\" \n          name=\"mare\" \n          id=\"mare\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n          placeholder=\"Nombre de la madre\"\n        />\n      </div>\n    </div>\n\n    <!-- Estado y amamantamiento -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <div>\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Estado *\n        </label>\n        <select \n          name=\"estado\" \n          id=\"estado\"\n          required\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n        >\n          <option value=\"OK\" selected>Activo</option>\n          <option value=\"DEF\">Fallecido</option>\n        </select>\n      </div>\n      <div id=\"alletar-container\" class=\"hidden\">\n        <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n          Amamantamiento\n        </label>\n        <select \n          name=\"alletar\" \n          id=\"alletar\"\n          class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n        >\n          <option value=\"0\" selected>No amamanta</option>\n          <option value=\"1\">Un ternero</option>\n          <option value=\"2\">Dos terneros</option>\n        </select>\n      </div>\n    </div>\n\n    <!-- Observaciones -->\n    <div>\n      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n        Observaciones (máx. 2000 caracteres)\n      </label>\n      <textarea \n        name=\"observaciones\" \n        id=\"observaciones\"\n        rows=\"4\"\n        maxlength=\"2000\"\n        class=\"w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-800 dark:text-white\"\n        placeholder=\"Añade notas o información adicional sobre el animal\"\n      ></textarea>\n    </div>\n    \n    <!-- Leyenda para campos obligatorios -->\n    <div class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n      <span class=\"text-black dark:text-white font-bold\">*</span> <span class=\"font-bold\">Campos obligatorios</span>\n    </div>\n\n    <!-- Botones de acción -->\n    <div class=\"flex justify-end gap-3\">\n      <a \n        href=\"/animals\"\n        class=\"px-6 py-3 bg-gray-200 text-gray-800 hover:bg-gray-300 dark:bg-gray-700 dark:text-white dark:hover:bg-gray-600 rounded-md transition-colors\"\n      >\n        Cancelar\n      </a>\n      <button \n        type=\"submit\"\n        class=\"px-6 py-3 bg-primary text-white hover:bg-primary/80 rounded-md transition-colors\"\n      >\n        Crear Animal\n      </button>\n    </div>\n  </form>\n</div>\n\n<script>\n  import { showSuccess, showError } from '../../stores/messageStore';\n  import { cachedFetch } from '../../stores/cacheStore';\n  import animalService from '../../services/animalService';\n  \n  // Script para manejar el envío del formulario\n  document.addEventListener('DOMContentLoaded', () => {\n    const form = document.getElementById('new-animal-form');\n    const genereSelect = document.getElementById('genere');\n    const alletarContainer = document.getElementById('alletar-container');\n    \n    // Mostrar/ocultar campo de amamantamiento según el género\n    if (genereSelect && alletarContainer) {\n      genereSelect.addEventListener('change', () => {\n        if (genereSelect.value === 'F') {\n          alletarContainer.classList.remove('hidden');\n        } else {\n          alletarContainer.classList.add('hidden');\n        }\n      });\n    }\n    \n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        // Obtener el botón de submit para deshabilitarlo\n        const submitBtn = form.querySelector('button[type=\"submit\"]');\n        if (submitBtn) {\n          submitBtn.disabled = true;\n          submitBtn.innerHTML = 'Creando...';\n        }\n        \n        try {\n          // Obtener todos los campos del formulario\n          const formData = new FormData(form);\n          const animalData = {};\n          \n          // Procesar todos los campos\n          for (const [key, value] of formData.entries()) {\n            if (value !== '') {\n              // Convertir la fecha al formato esperado por el backend (DD/MM/YYYY)\n              if (key === 'dob' && value) {\n                // Convertir de YYYY-MM-DD a DD/MM/YYYY\n                const dateParts = value.split('-');\n                if (dateParts.length === 3) {\n                  animalData[key] = `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`;\n                } else {\n                  animalData[key] = value;\n                }\n              } else {\n                animalData[key] = value;\n              }\n            }\n          }\n          \n          // Validar campos requeridos\n          const requiredFields = ['nom', 'genere', 'explotacio', 'estado'];\n          for (const field of requiredFields) {\n            if (!animalData[field]) {\n              throw new Error(`El campo ${field} es obligatorio`);\n            }\n          }\n          \n          // Si es hembra, asegurar que alletar tenga un valor\n          if (animalData.genere === 'F' && !animalData.alletar) {\n            animalData.alletar = '0'; // Valor por defecto\n          }\n          \n          // Si es macho, eliminar alletar\n          if (animalData.genere === 'M' && animalData.alletar) {\n            delete animalData.alletar;\n          }\n          \n          console.log('Datos a enviar:', animalData);\n          \n          // Enviar datos al servidor\n          const token = localStorage.getItem('token');\n          if (!token) {\n            throw new Error('No hay token de autenticación. Por favor, inicie sesión nuevamente.');\n          }\n          \n          // Usar animalService para crear el animal\n          const result = await animalService.createAnimal(animalData);\n          console.log('Animal creado:', result);\n          \n          // Mostrar mensaje de éxito\n          showSuccess('Animal creado', `El animal ${animalData.nom} ha sido creado correctamente`);\n          \n          // Redireccionar a la página de detalle del animal\n          setTimeout(() => {\n            // Extraer el ID correctamente según la estructura de respuesta del backend\n            let animalId;\n            if (result && result.data && result.data.id) {\n              animalId = result.data.id;\n            } else if (result && result.id) {\n              animalId = result.id;\n            } else {\n              console.error('No se pudo obtener el ID del animal creado:', result);\n              // Redireccionar a la lista de animales en caso de error\n              window.location.href = '/animals';\n              return;\n            }\n            \n            console.log('Redirigiendo a la ficha del animal con ID:', animalId);\n            window.location.href = `/animals/${animalId}`;\n          }, 1000);\n          \n        } catch (error) {\n          console.error('Error al crear animal:', error);\n          \n          // Mostrar mensaje de error\n          showError('Error', error.message || 'Ha ocurrido un error al crear el animal');\n          \n          // Restaurar botón\n          if (submitBtn) {\n            submitBtn.disabled = false;\n            submitBtn.innerHTML = 'Crear Animal';\n          }\n        }\n      });\n    }\n  });\n</script>\n","---\n/**\n * Página para crear un nuevo animal\n */\nimport MainLayout from '../../components/layout/MainLayout.astro';\nimport CreateAnimalForm from '../../components/animals/CreateAnimalForm.astro';\nimport MessageContainer from '../../components/ui/MessageContainer.astro';\nimport Alert from '../../components/ui/Alert.astro';\nimport animalService from '../../services/animalService';\nimport { cachedFetch } from '../../stores/cacheStore';\n\n// Obtener el rol del usuario de la sesión\nconst userRole = Astro.cookies.get('userRole')?.value || 'user';\n\n// Obtener datos necesarios para el formulario\nlet explotaciones = [];\nlet error = null;\n\ntry {\n  // Obtener listado de explotaciones para el selector\n  explotaciones = await animalService.getExplotacions();\n} catch (err) {\n  console.error('Error al obtener explotaciones:', err);\n  error = 'No se pudieron cargar las explotaciones necesarias para crear un animal';\n  \n  // En caso de error, usar datos de respaldo para desarrollo\n  if (import.meta.env.DEV) {\n    explotaciones = [\n      { id: 1, explotacio: 'Explotación Norte' },\n      { id: 2, explotacio: 'Explotación Sur' }\n    ];\n    error = null; // No mostrar error en desarrollo\n  }\n}\n\n// Título de la página\nconst title = 'Registrar Nuevo Animal';\n---\n\n<MainLayout title={title} userRole={userRole} currentPath=\"/animals\">\n  <!-- Contenedor de mensajes -->\n  <MessageContainer />\n  \n  <!-- Encabezado con botón de volver -->\n  <div class=\"mb-6\">\n    <div class=\"flex items-center gap-2 mb-2\">\n      <a href=\"/animals\" class=\"text-primary hover:text-primary-dark dark:text-primary-light dark:hover:text-primary transition-colors\">\n        ← Volver al listado\n      </a>\n    </div>\n    <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">{title}</h1>\n    <p class=\"text-gray-600 dark:text-gray-300\">Completa el formulario para registrar un nuevo animal en el sistema</p>\n  </div>\n\n  <!-- Mensaje de error global -->\n  {error && (\n    <Alert \n      type=\"error\" \n      title=\"Error al cargar datos\" \n      message={error}\n    >\n      <p class=\"mt-2\">Vuelve al <a href=\"/animals\" class=\"underline\">listado de animales</a></p>\n    </Alert>\n  )}\n\n  <!-- Formulario de creación -->\n  <CreateAnimalForm \n    explotaciones={explotaciones} \n    error={error && import.meta.env.PROD ? error : null}\n  />\n</MainLayout>\n\n<script>\n  // El script se ha movido al componente CreateAnimalForm\n  import { showSuccess, showError } from '../../stores/messageStore';\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    // El script se ha movido principalmente al componente CreateAnimalForm\n    // Este código es solo para desarrollo y demostración\n    \n    // Configurar el formulario si existe\n    const form = document.getElementById('create-animal-form');\n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        try {\n          // Aquí iría la lógica real para enviar los datos al servidor\n          console.log('Enviando datos del nuevo animal...');\n          \n          // Simulamos un tiempo de procesamiento\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          \n          // Redirigir al listado con mensaje de éxito\n          window.location.href = '/animals?success=true&message=Animal+creado+correctamente';\n        } catch (error) {\n          console.error('Error al crear animal:', error);\n          alert('Error al crear el animal. Inténtalo de nuevo.');\n        }\n      });\n    }\n  });\n</script>\n"],"names":["Astro","$$render","$$maybeRenderHead","$$addAttribute","$$unescapeHTML","$$Astro","$$createAstro","$$createComponent","$$renderComponent","Alert","MainLayout","$$result","MessageContainer","CreateAnimalForm"],"mappings":"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"}