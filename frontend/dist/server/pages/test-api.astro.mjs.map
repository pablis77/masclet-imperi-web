{"version":3,"file":"test-api.astro.mjs","sources":["../../../src/pages/test-api.astro"],"sourcesContent":["---\nimport DefaultLayout from '../layouts/DefaultLayout.astro';\n\n// Configuración para el layout\nconst userRole = 'admin';\nconst title = 'Prueba de API - Masclet Imperi';\n---\n\n<DefaultLayout title={title} userRole={userRole} currentPath=\"/test-api\">\n  <main class=\"container mx-auto px-4 py-6\">\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-bold mb-2 text-gray-900 dark:text-white\">Prueba de API</h1>\n      <p class=\"text-gray-600 dark:text-gray-300 mb-4\">Esta página prueba directamente la comunicación con el backend</p>\n    </div>\n    \n    <div class=\"mb-8 bg-white dark:bg-gray-800 shadow-lg rounded-lg overflow-hidden p-4\">\n      <div class=\"mb-4\">\n        <label for=\"api-url\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">URL de la API</label>\n        <div class=\"flex gap-2\">\n          <input \n            type=\"text\" \n            id=\"api-url\" \n            class=\"flex-1 px-3 py-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-gray-800 dark:text-white\"\n            value=\"/api/v1/dashboard/stats\"\n          />\n          <button \n            id=\"test-button\"\n            class=\"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors\"\n          >\n            Probar API\n          </button>\n        </div>\n      </div>\n      \n      <div class=\"mb-4\">\n        <div class=\"flex items-center mb-2\">\n          <div class=\"w-3 h-3 rounded-full mr-2\" id=\"status-indicator\"></div>\n          <span id=\"status-text\" class=\"text-gray-700 dark:text-gray-300\">Esperando prueba...</span>\n        </div>\n      </div>\n      \n      <div class=\"mt-4 hidden\" id=\"loading-indicator\">\n        <div class=\"flex items-center justify-center p-4\">\n          <div class=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n          <span class=\"ml-2 text-gray-700 dark:text-gray-300\">Realizando petición...</span>\n        </div>\n      </div>\n      \n      <pre id=\"output-box\" class=\"bg-gray-100 dark:bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm text-gray-800 dark:text-gray-200 max-h-96\"></pre>\n      \n      <div class=\"mt-6\">\n        <h2 class=\"text-lg font-semibold mb-2 text-gray-800 dark:text-white\">Lista de endpoints disponibles</h2>\n        <ul class=\"space-y-2 text-gray-700 dark:text-gray-300 bg-gray-50 dark:bg-gray-900 p-3 rounded-lg\">\n          <li><code>/api/v1/dashboard/stats</code> - Estadísticas completas</li>\n          <li><code>/api/v1/dashboard/resumen</code> - Resumen del dashboard</li>\n          <li><code>/api/v1/dashboard/partos</code> - Estadísticas de partos</li>\n          <li><code>/api/v1/dashboard/combined</code> - Vista combinada</li>\n          <li><code>/api/v1/animals</code> - Listado de animales</li>\n          <li><code>/api/v1/animals/1</code> - Detalle del animal con ID 1</li>\n        </ul>\n      </div>\n    </div>\n  </main>\n</DefaultLayout>\n\n<script>\n  document.addEventListener('DOMContentLoaded', function() {\n    const testButton = document.getElementById('test-button');\n    const urlInput = document.getElementById('api-url');\n    const outputBox = document.getElementById('output-box');\n    const loadingIndicator = document.getElementById('loading-indicator');\n    const statusIndicator = document.getElementById('status-indicator');\n    const statusText = document.getElementById('status-text');\n    \n    // Función para formatear JSON\n    function formatJSON(obj) {\n      return JSON.stringify(obj, null, 2);\n    }\n    \n    // Función para actualizar el indicador de estado\n    function updateStatus(success, message) {\n      if (success) {\n        statusIndicator.className = 'w-3 h-3 rounded-full mr-2 bg-green-500';\n        statusText.className = 'text-green-700 dark:text-green-300';\n      } else {\n        statusIndicator.className = 'w-3 h-3 rounded-full mr-2 bg-red-500';\n        statusText.className = 'text-red-700 dark:text-red-300';\n      }\n      statusText.textContent = message;\n    }\n    \n    // Función para probar la API\n    async function testAPI() {\n      const url = urlInput.value.trim();\n      \n      // Mostrar indicador de carga\n      loadingIndicator.classList.remove('hidden');\n      outputBox.textContent = 'Esperando respuesta...';\n      \n      try {\n        console.log('Realizando petición a:', url);\n        \n        // Añadir parámetro para evitar caché\n        const timestamp = new Date().getTime();\n        const separator = url.includes('?') ? '&' : '?';\n        const urlWithCache = `${url}${separator}_cache=${timestamp}`;\n        \n        // Configurar la petición con encabezados\n        const headers = {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer token-desarrollo-12345'\n        };\n        \n        // Realizar la petición\n        const response = await fetch(urlWithCache, { \n          method: 'GET',\n          headers\n        });\n        \n        console.log('Respuesta recibida:', response);\n        \n        if (!response.ok) {\n          throw new Error(`Error HTTP: ${response.status} ${response.statusText}`);\n        }\n        \n        // Intentar parsear la respuesta como JSON\n        const data = await response.json();\n        \n        // Actualizar el estado a éxito\n        updateStatus(true, `Éxito: ${response.status} ${response.statusText}`);\n        \n        // Mostrar la respuesta\n        outputBox.textContent = formatJSON(data);\n      } catch (error) {\n        console.error('Error en la petición:', error);\n        \n        // Actualizar el estado a error\n        updateStatus(false, `Error: ${error.message}`);\n        \n        // Mostrar el error\n        outputBox.textContent = `Error al realizar la petición:\\n${error.message}`;\n      } finally {\n        // Ocultar indicador de carga\n        loadingIndicator.classList.add('hidden');\n      }\n    }\n    \n    // Añadir evento al botón\n    testButton.addEventListener('click', testAPI);\n    \n    // Permitir presionar Enter en el input\n    urlInput.addEventListener('keypress', function(e) {\n      if (e.key === 'Enter') {\n        testAPI();\n      }\n    });\n  });\n</script>\n"],"names":["$$createComponent","$$render","$$renderComponent","DefaultLayout","$$result","$$maybeRenderHead"],"mappings":";;;;;AAAA,MAAA,SAAA,GAAAA,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAIA,EAAA,MAAM,QAAW,GAAA,OAAA;AACjB,EAAA,MAAM,KAAQ,GAAA,gCAAA;AALd,EAAA,OAAAC,cAAA,CAAA,EAAAC,gBAAA,QAAA,EAAA,eAAA,EAAAC,iBAAA,EAQe,OAAA,EAAO,OAAO,UAAU,EAAA,QAAA,EAAU,eARjD,WAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAC,cAAAH,cAAA,CAAA,CAAA,EAAAI,eAAA,CAAA,CAAA,CAAA;;AAAA,s0CAAA,CAAA,EA+DE,CAAA,CAAA,CAAA,CAAA;AA/DF,CAAA,EAAA,4EAAA,MAAA,CAAA;;;;;;;;;;;;;;;;"}