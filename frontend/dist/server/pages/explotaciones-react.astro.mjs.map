{"version":3,"file":"explotaciones-react.astro.mjs","sources":["../../../src/components/explotaciones-react/ExplotacionesPage.tsx","../../../src/pages/explotaciones-react/index.astro"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Mantenemos solo la importación necesaria sin CSS adicional\nimport apiService from '../../services/apiService';\nimport { t } from '../../i18n/config';\n\n// Tipos para los datos\ninterface ExplotacionInfo {\n  explotacio: string;\n  total_animales?: number;\n  total_animales_activos?: number;\n  toros?: number;\n  toros_activos?: number;\n  vacas?: number;\n  vacas_activas?: number;\n  alletar_0?: number;\n  alletar_1?: number;\n  alletar_2?: number;\n  alletar_0_activas?: number;\n  alletar_1_activas?: number;\n  alletar_2_activas?: number;\n  partos?: number;\n  ratio?: number | string;\n  amamantando?: number;\n  noAmamantando?: number;\n  terneros?: number;\n  total?: number;\n  animales?: any[];\n}\n\ninterface Animal {\n  id: number;\n  nom: string;\n  explotacio: string;\n  genere: 'M' | 'F';\n  estado: 'OK' | 'DEF';\n  alletar?: string | number | null;\n  dob?: string;\n  [key: string]: any;\n}\n\nconst ExplotacionesPage: React.FC = () => {\n  // Estado para el idioma actual\n  const [currentLang, setCurrentLang] = useState('es');\n\n  // Efecte para obtener y manejar el idioma\n  useEffect(() => {\n    // Obtener el idioma inicial\n    const storedLang = localStorage.getItem('userLanguage') || 'es';\n    setCurrentLang(storedLang);\n\n    // Escuchar cambios de idioma\n    const handleLangChange = (e: StorageEvent) => {\n      if (e.key === 'userLanguage') {\n        setCurrentLang(e.newValue || 'es');\n      }\n    };\n\n    window.addEventListener('storage', handleLangChange);\n    return () => window.removeEventListener('storage', handleLangChange);\n  }, []);\n\n  // Estados\n  const [explotacionesData, setExplotacionesData] = useState<ExplotacionInfo[]>([]);\n  const [displayExplotaciones, setDisplayExplotaciones] = useState<ExplotacionInfo[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentExplotacion, setCurrentExplotacion] = useState<string | null>(null);\n  const [allAnimals, setAllAnimals] = useState<Animal[]>([]);\n  const [filteredAnimals, setFilteredAnimals] = useState<Animal[]>([]);\n  const [activeCategory, setActiveCategory] = useState('todos');\n  const [stats, setStats] = useState({\n    toros: 0,\n    vacas: 0,\n    terneros: 0\n  });\n  \n  // Estado para detectar si estamos en vista móvil\n  const [isMobileView, setIsMobileView] = useState(false);\n  // Estados para ordenación\n  const [sortField, setSortField] = useState<'explotacio' | 'total'>('explotacio');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  // Cargar datos iniciales\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n  \n  // Efecto para detectar el ancho de la pantalla y ordenar correctamente en móvil\n  useEffect(() => {\n    const checkScreenWidth = () => {\n      const isMobile = window.innerWidth < 640; // sm breakpoint en Tailwind es 640px\n      setIsMobileView(isMobile);\n    };\n    \n    // Ejecutar al montar el componente\n    checkScreenWidth();\n    \n    // Escuchar cambios en el tamaño de la ventana\n    window.addEventListener('resize', checkScreenWidth);\n    return () => window.removeEventListener('resize', checkScreenWidth);\n  }, []);\n  \n  // Efecto para ordenar correctamente en móvil\n  useEffect(() => {\n    // En móvil, ordenar por total de animales (mayor a menor)\n    if (isMobileView && (sortField !== 'total' || sortDirection !== 'desc')) {\n      setSortField('total');\n      setSortDirection('desc');\n    }\n  }, [isMobileView, sortField, sortDirection]);\n  \n  // Función para ordenar las explotaciones\n  const sortExplotaciones = (explotaciones: ExplotacionInfo[]) => {\n    if (!explotaciones) return [];\n    \n    // En móvil, siempre ordenar por cantidad de animales (mayor a menor)\n    if (isMobileView) {\n      return [...explotaciones].sort((a, b) => {\n        const aTotal = a.total || 0;\n        const bTotal = b.total || 0;\n        return bTotal - aTotal; // Orden descendente por total en móvil\n      });\n    }\n    \n    // En desktop, seguir el criterio de ordenación elegido\n    return [...explotaciones].sort((a, b) => {\n      if (sortField === 'explotacio') {\n        return sortDirection === 'asc' \n          ? a.explotacio.localeCompare(b.explotacio)\n          : b.explotacio.localeCompare(a.explotacio);\n      } else if (sortField === 'total') {\n        const aTotal = a.total || 0;\n        const bTotal = b.total || 0;\n        return sortDirection === 'asc' ? aTotal - bTotal : bTotal - aTotal;\n      }\n      return a.explotacio.localeCompare(b.explotacio);\n    });\n  };\n\n  // Efecto para ordenar y filtrar explotaciones cuando cambian los datos, los criterios de ordenación o la vista\n  useEffect(() => {\n    if (!explotacionesData.length) return;\n    \n    let dataToDisplay = sortExplotaciones(explotacionesData);\n    \n    // Aplicar filtro de búsqueda si existe\n    if (searchTerm.trim() !== '') {\n      dataToDisplay = dataToDisplay.filter(exp => \n        exp.explotacio.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    // Actualizar las explotaciones a mostrar\n    setDisplayExplotaciones(dataToDisplay);\n  }, [explotacionesData, searchTerm, isMobileView, sortField, sortDirection]);\n\n  // Filtrar animales por categoría cuando cambia la categoría activa o la lista de animales\n  useEffect(() => {\n    if (allAnimals.length > 0) {\n      filterAnimalsByCategory(activeCategory);\n    }\n  }, [activeCategory, allAnimals]);\n\n  // Función para cargar los datos iniciales\n  const loadInitialData = async () => {\n    try {\n      console.log('######## INICIO CARGA DE DATOS DE EXPLOTACIONES (REACT) ########');\n      console.log(`Usando API URL: ${apiService.getBaseUrl()}`);\n      \n      setLoading(true);\n      setError(null);\n      \n      // Obtener todos los animales del backend con un límite razonable\n      console.log('Realizando petición GET a animals/?page=1&limit=100');\n      const response = await apiService.get('animals/?page=1&limit=100');\n      console.log('Respuesta recibida de animals:', response);\n      \n      // Verificar la estructura de la respuesta\n      if (!response.data || !response.data.items || !Array.isArray(response.data.items)) {\n        throw new Error('Formato de respuesta incorrecto');\n      }\n      \n      const allAnimals = response.data.items;\n      console.log(`Obtenidos ${allAnimals.length} animales`);\n      \n      // Agrupar animales por explotación\n      const explotacionesMap: Record<string, ExplotacionInfo> = {};\n      \n      allAnimals.forEach((animal: Animal) => {\n        if (!animal.explotacio) return; // Ignorar animales sin explotación\n        \n        // Si la explotación no existe en el mapa, la añadimos\n        if (!explotacionesMap[animal.explotacio]) {\n          explotacionesMap[animal.explotacio] = {\n            explotacio: animal.explotacio,\n            animales: []\n          };\n        }\n        \n        // Añadir animal a la explotación\n        explotacionesMap[animal.explotacio].animales = \n          [...(explotacionesMap[animal.explotacio].animales || []), animal];\n      });\n      \n      // Calcular estadísticas para cada explotación\n      const explotacionesDataArray = Object.values(explotacionesMap).map((exp: ExplotacionInfo) => {\n        const animales = exp.animales || [];\n        \n        // Total de animales por género\n        const toros = animales.filter((a: Animal) => a.genere === 'M').length;\n        const vacas = animales.filter((a: Animal) => a.genere === 'F').length;\n        \n        // Animales activos (estado=OK)\n        const toros_activos = animales.filter((a: Animal) => a.genere === 'M' && a.estado === 'OK').length;\n        const vacas_activas = animales.filter((a: Animal) => a.genere === 'F' && a.estado === 'OK').length;\n        \n        // Contar las vacas amamantando (alletar 1 o 2)\n        const vacasAletar1 = animales.filter((a: Animal) => a.genere === 'F' && ['1', 1].includes(a.alletar as any)).length;\n        const vacasAletar2 = animales.filter((a: Animal) => a.genere === 'F' && ['2', 2].includes(a.alletar as any)).length;\n        const amamantando = vacasAletar1 + vacasAletar2;\n        \n        // Vacas que no están amamantando (alletar 0 o null)\n        const noAmamantando = animales.filter((a: Animal) => a.genere === 'F' && (['0', 0].includes(a.alletar as any) || a.alletar === null)).length;\n        \n        // Inicializar partos con 0, luego se actualizará\n        let partosAprox = 0;\n        \n        // Cálculo correcto de terneros: cada vaca con alletar=1 amamanta 1 ternero y cada vaca con alletar=2 amamanta 2 terneros\n        const terneros = vacasAletar1 + (vacasAletar2 * 2);\n        \n        // Total de animales activos\n        const total_animales_activos = toros_activos + vacas_activas + terneros;\n        \n        return {\n          explotacio: exp.explotacio,\n          total: animales.length,\n          total_animales_activos: total_animales_activos,\n          toros: toros,\n          toros_activos: toros_activos,\n          vacas: vacas,\n          vacas_activas: vacas_activas,\n          amamantando: amamantando,\n          noAmamantando: noAmamantando,\n          terneros: terneros,\n          partos: partosAprox\n        };\n      });\n      \n      // Obtener el conteo correcto de partos para cada explotación\n      const updatedExplotacionesData = await Promise.all(explotacionesDataArray.map(async (exp) => {\n        try {\n          // Obtener detalles de la explotación usando la API del dashboard\n          const dashboardEndpoint = `dashboard/explotacions/${encodeURIComponent(exp.explotacio)}`;\n          console.log(`Solicitando detalles de explotación: ${dashboardEndpoint}`);\n          const explotacionData = await apiService.get(dashboardEndpoint);\n          console.log(`Datos recibidos para explotación ${exp.explotacio}:`, explotacionData);\n          \n          // Obtener estadísticas detalladas de la explotación\n          const statsEndpoint = `dashboard/explotacions/${encodeURIComponent(exp.explotacio)}/stats`;\n          console.log(`Solicitando estadísticas: ${statsEndpoint}`);\n          const statsData = await apiService.get(statsEndpoint);\n          console.log(`Estadísticas recibidas para ${exp.explotacio}:`, statsData);\n          \n          // Inicializar objeto con datos actualizados\n          let updatedExp = {...exp};\n          \n          // Actualizar el conteo de partos con el valor correcto de la API\n          if (explotacionData && explotacionData.total_partos !== undefined) {\n            updatedExp = {\n              ...updatedExp,\n              partos: explotacionData.total_partos\n            };\n          }\n          \n          // Extraer datos detallados de estadísticas\n          const animales = statsData.animales || {};\n          const partos = statsData.partos || {};\n          \n          // Actualizar con los datos estadísticos completos\n          updatedExp = {\n            ...updatedExp,\n            toros: animales.toros || updatedExp.toros,\n            toros_activos: animales.toros_activos || updatedExp.toros_activos,\n            vacas: animales.vacas || updatedExp.vacas,\n            vacas_activas: animales.vacas_activas || updatedExp.vacas_activas,\n            total_animales_activos: updatedExp.total_animales_activos,\n            terneros: animales.terneros || updatedExp.terneros,\n            amamantando: animales.vacas_amamantando || updatedExp.amamantando,\n            noAmamantando: animales.vacas_no_amamantando || updatedExp.noAmamantando,\n            partos: partos.total || updatedExp.partos\n          };\n          \n          // Devolver la explotación con todos los datos actualizados\n          return updatedExp;\n        } catch (error: any) {\n          console.error(`Error al obtener información para ${exp.explotacio}:`, error);\n          console.error(`Error detallado: ${error.message}`);\n          if (error.response) {\n            console.error(`Status: ${error.response.status}, Data:`, error.response.data);\n          }\n          // Si hay un error, devolver los datos originales\n          return exp;\n        }\n      }));\n      \n      // Ordenar por nombre de explotación\n      updatedExplotacionesData.sort((a, b) => a.explotacio.localeCompare(b.explotacio));\n      \n      // Actualizar el estado\n      setExplotacionesData(updatedExplotacionesData);\n      setLoading(false);\n    } catch (error: any) {\n      console.error('Error al cargar datos iniciales de explotaciones:', error);\n      console.error('Detalle del error:', error.stack || 'No hay stack disponible');\n      \n      setLoading(false);\n      setError(error.message);\n    }\n  };\n\n  // Función para buscar explotaciones por término\n  const handleSearch = () => {\n    console.log(`Buscando: \"${searchTerm}\"`);\n    // Si el campo está vacío, mostrar todas\n    if (!searchTerm.trim()) {\n      return;\n    }\n    \n    // Filtrar explotaciones que contienen el término de búsqueda\n    const filteredExplotaciones = explotacionesData.filter(exp => \n      exp.explotacio.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    \n    if (filteredExplotaciones.length === 0) {\n      alert('No se encontraron explotaciones que coincidan con tu búsqueda.');\n    } else if (filteredExplotaciones.length === 1) {\n      // Si solo hay una coincidencia, mostrar directamente los detalles\n      showExplotacionDetail(filteredExplotaciones[0].explotacio);\n    } else {\n      // TODO: Actualizar la vista para mostrar solo las explotaciones filtradas\n    }\n  };\n\n  // Función para limpiar búsqueda\n  const handleClear = () => {\n    setSearchTerm('');\n    // TODO: Actualizar la vista para mostrar todas las explotaciones\n  };\n\n  // Función para mostrar detalles de una explotación\n  const showExplotacionDetail = async (explotacionCode: string) => {\n    if (!explotacionCode) return;\n    \n    setCurrentExplotacion(explotacionCode);\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Obtener datos de los animales de esta explotación\n      const endpoint = `animals/?explotacio=${encodeURIComponent(explotacionCode)}&limit=100`;\n      console.log(`Solicitando animales de explotación (con límite 100): ${endpoint}`);\n      \n      const response = await apiService.get(endpoint);\n      console.log(`Respuesta recibida para animales de ${explotacionCode}:`, response);\n      \n      // Verificar la estructura de la respuesta\n      if (!response.data || !response.data.items || !Array.isArray(response.data.items)) {\n        throw new Error('Formato de respuesta incorrecto');\n      }\n      \n      const animals = response.data.items;\n      console.log(`Encontrados ${animals.length} animales para la explotación ${explotacionCode}`);\n      \n      // Calcular estadísticas\n      const toros = animals.filter((a: Animal) => a.genere === 'M').length;\n      const vacas = animals.filter((a: Animal) => a.genere === 'F').length;\n      const newStats = {\n        toros: toros,\n        vacas: vacas,\n        terneros: 0 // TODO: Calcular terneros correctamente\n      };\n      \n      setAllAnimals(animals);\n      setFilteredAnimals(animals); // Inicialmente mostrar todos\n      setStats(newStats);\n      setActiveCategory('todos');\n      \n      // Mostrar la vista de detalles\n      const detailView = document.getElementById('explotacion-detail');\n      const cardsView = document.getElementById('explotacionCards');\n      \n      if (detailView) detailView.style.display = 'block';\n      if (cardsView) cardsView.style.display = 'none';\n      \n      // Actualizar el título\n      const titleElement = document.getElementById('explotacion-code');\n      if (titleElement) titleElement.textContent = explotacionCode;\n      \n      setLoading(false);\n    } catch (error: any) {\n      console.error('Error al cargar detalle de explotación:', error);\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n\n  // Función para volver a la vista de tarjetas\n  const handleBack = () => {\n    const detailView = document.getElementById('explotacion-detail');\n    const cardsView = document.getElementById('explotacionCards');\n    \n    if (detailView) detailView.style.display = 'none';\n    if (cardsView) cardsView.style.display = 'grid';\n    \n    setCurrentExplotacion(null);\n  };\n\n  // Función para filtrar animales por categoría\n  const filterAnimalsByCategory = (category: string) => {\n    if (!allAnimals.length) return;\n    \n    let filtered: Animal[] = [];\n    \n    switch (category) {\n      case 'todos':\n        filtered = [...allAnimals];\n        break;\n      case 'toros':\n        filtered = allAnimals.filter(animal => animal.genere === 'M');\n        break;\n      case 'vacas-amam':\n        filtered = allAnimals.filter(animal => \n          animal.genere === 'F' && ['1', 1, '2', 2].includes(animal.alletar as any)\n        );\n        break;\n      case 'vacas-no-amam':\n        filtered = allAnimals.filter(animal => \n          animal.genere === 'F' && (['0', 0].includes(animal.alletar as any) || animal.alletar === null)\n        );\n        break;\n      case 'terneros':\n        // TODO: Implementar filtro de terneros\n        filtered = [];\n        break;\n      default:\n        filtered = [...allAnimals];\n    }\n    \n    setFilteredAnimals(filtered);\n    setActiveCategory(category);\n  };\n\n  // Renderizar tabla de animales\n  const renderAnimalTable = () => {\n    // Si no hay animales\n    if (!filteredAnimals || filteredAnimals.length === 0) {\n      return (\n        <div className=\"flex justify-center items-center h-[200px]\">\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            {currentLang === 'ca' ? \"No hi ha animals per mostrar en aquesta categoria\" : \"No hay animales que mostrar en esta categoría\"}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm text-left border-collapse\">\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-300\">\n            <tr>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Codi\" : \"Código\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Nom\" : \"Nombre\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Gènere\" : \"Género\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Estat\" : \"Estado\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Data Naixement\" : \"Fecha Nacimiento\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Alletant\" : \"Amamantando\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Accions\" : \"Acciones\"}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredAnimals.map((animal) => (\n              <tr key={animal.id} className=\"border-b dark:border-gray-700\">\n                <td className=\"px-4 py-2\">{animal.cod || '-'}</td>\n                <td className=\"px-4 py-2 font-medium\">{animal.nom}</td>\n                <td className=\"px-4 py-2\">{animal.genere === 'M' ? (currentLang === 'ca' ? 'Toro' : 'Toro') : (currentLang === 'ca' ? 'Vaca' : 'Vaca')}</td>\n                <td className=\"px-4 py-2\">\n                  <span className={`px-2 py-1 rounded-full text-xs ${\n                    animal.estado === 'OK' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n                    'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n                  }`}>\n                    {animal.estado === 'OK' ? (currentLang === 'ca' ? 'Actiu' : 'Activo') : (currentLang === 'ca' ? 'Mort' : 'Fallecido')}\n                  </span>\n                </td>\n                <td className=\"px-4 py-2\">{animal.dob || (currentLang === 'ca' ? 'No disponible' : 'No disponible')}</td>\n                <td className=\"px-4 py-2\">\n                  {animal.genere === 'F' ? (\n                    animal.alletar === '1' ? (currentLang === 'ca' ? '1 vedell' : '1 ternero') : \n                    animal.alletar === '2' ? (currentLang === 'ca' ? '2 vedells' : '2 terneros') : \n                    (currentLang === 'ca' ? 'Sense alletar' : 'No amamantando')\n                  ) : 'N/A'}\n                </td>\n                <td className=\"px-4 py-2\">\n                  <div className=\"flex space-x-2\">\n                    <a \n                      href={`/animals/${animal.id}`}\n                      className=\"inline-flex items-center px-2 py-1 bg-primary text-white rounded hover:bg-primary/80\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                      {currentLang === 'ca' ? 'Veure' : 'Ver'}\n                    </a>\n                    <a \n                      href={`/animals/update/${animal.id}`}\n                      className=\"inline-flex items-center px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                      {currentLang === 'ca' ? 'Actualitzar' : 'Actualizar'}\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n  // Función para exportar a PDF con formato atractivo\n  const exportToPDF = async () => {\n    if (!filteredAnimals || !filteredAnimals.length) return;\n    \n    try {\n      // Importaciones dinámicas para evitar errores SSR\n      const jsPDFModule = await import('jspdf');\n      const jsPDF = jsPDFModule.default;\n      \n      const autoTableModule = await import('jspdf-autotable');\n      const autoTable = autoTableModule.default;\n      \n      // Crear un documento PDF nuevo\n      const doc = new jsPDF();\n    \n    // Configurar títulos y encabezados\n    const title = currentLang === 'ca' \n      ? `Llistat d'Animals - ${currentExplotacion}`\n      : `Listado de Animales - ${currentExplotacion}`;\n    \n    const columns = [\n      currentLang === 'ca' ? 'Codi' : 'Código',\n      currentLang === 'ca' ? 'Nom' : 'Nombre',\n      currentLang === 'ca' ? 'Gènere' : 'Género',\n      currentLang === 'ca' ? 'Estat' : 'Estado',\n      currentLang === 'ca' ? 'Data Naixement' : 'Fecha Nacimiento',\n      currentLang === 'ca' ? 'Alletant' : 'Amamantando',\n    ];\n    \n    // Ordenar los animales por categorías:\n    // 1. Activos primero (y dentro de activos: toros, vacas amamantando, vacas no amamantando)\n    // 2. Fallecidos al final\n    const sortedAnimals = [...filteredAnimals].sort((a, b) => {\n      // Primero por estado (activos antes que fallecidos)\n      if (a.estado !== b.estado) {\n        return a.estado === 'OK' ? -1 : 1;\n      }\n      \n      // Dentro de cada estado, ordenar por género (toros primero)\n      if (a.genere !== b.genere) {\n        return a.genere === 'M' ? -1 : 1;\n      }\n      \n      // Para las vacas (F), ordenar por amamantando\n      if (a.genere === 'F') {\n        const aAlletar = a.alletar ? Number(a.alletar) : 0;\n        const bAlletar = b.alletar ? Number(b.alletar) : 0;\n        if (aAlletar !== bAlletar) {\n          return bAlletar - aAlletar; // Las que amamantan más primero\n        }\n      }\n      \n      // Si todo lo demás es igual, ordenar por nombre\n      return a.nom.localeCompare(b.nom);\n    });\n    \n    // Preparar los datos de animales con manejo adecuado de fechas y códigos\n    const data = sortedAnimals.map(animal => {\n      // Para el código, usar preferentemente cod (campo oficial), luego id\n      let codigo = 'N/A';\n      if (animal.cod && animal.cod !== '') {\n        codigo = animal.cod;\n      } else if (animal.id) {\n        codigo = animal.id.toString();\n      }\n      \n      // Para la fecha, asegurarnos de que esté en formato español DD/MM/AAAA\n      let fechaNacimiento = 'N/A';\n      if (animal.dob) {\n        try {\n          // Intentar convertir la fecha\n          let fecha;\n          \n          // Primero ver si es un string con formato ya adecuado (DD/MM/AAAA)\n          if (typeof animal.dob === 'string' && animal.dob.match(/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/)) {\n            fechaNacimiento = animal.dob; // Ya tiene el formato correcto\n          } \n          // Si es una fecha ISO o similar, convertirla al formato español\n          else {\n            fecha = new Date(animal.dob);\n            if (!isNaN(fecha.getTime())) {\n              // Formatear manualmente al formato DD/MM/AAAA\n              const dia = fecha.getDate().toString().padStart(2, '0');\n              const mes = (fecha.getMonth() + 1).toString().padStart(2, '0');\n              const anio = fecha.getFullYear();\n              fechaNacimiento = `${dia}/${mes}/${anio}`;\n            } else {\n              // Si el formato no es reconocible, mostrarlo como está\n              fechaNacimiento = typeof animal.dob === 'string' ? animal.dob : 'N/A';\n            }\n          }\n        } catch (e) {\n          // Si hay error al convertir, mostramos el valor original\n          fechaNacimiento = typeof animal.dob === 'string' ? animal.dob : 'N/A';\n        }\n      }\n      \n      return [\n        codigo,\n        animal.nom,\n        animal.genere === 'M' \n          ? (currentLang === 'ca' ? 'Toro' : 'Toro') \n          : (currentLang === 'ca' ? 'Vaca' : 'Vaca'),\n        animal.estado === 'OK' \n          ? (currentLang === 'ca' ? 'Actiu' : 'Activo') \n          : (currentLang === 'ca' ? 'Mort' : 'Fallecido'),\n        fechaNacimiento,\n        animal.genere === 'F' \n          ? (['1', 1].includes(animal.alletar as any) \n              ? (currentLang === 'ca' ? '1 vedell' : '1 ternero')\n              : ['2', 2].includes(animal.alletar as any) \n                ? (currentLang === 'ca' ? '2 vedells' : '2 terneros')\n                : 'N/A')\n          : 'N/A'\n      ];\n    });\n    \n    // Añadir fecha en la esquina superior derecha\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    const date = new Date().toLocaleDateString(currentLang === 'ca' ? 'ca-ES' : 'es-ES');\n    doc.text(\n      currentLang === 'ca' ? `Data: ${date}` : `Fecha: ${date}`, \n      195, 15, { align: 'right' }\n    );\n    \n    // Definimos la posición inicial para el resumen (usada en todo el documento)\n    const logoY = 10; // Valor predeterminado por si falla la carga del logo\n    const logoHeight = 35; // Valor predeterminado por si falla la carga del logo\n    let resumenStartY = logoY + logoHeight + 20; // Posición inicial del resumen\n    \n    // Añadir logo oficial de Masclet Imperi\n    try {\n      // Intentamos cargar el logo oficial desde una imagen base64\n      // La ruta es relativa a la ubicación desde donde se sirve la aplicación\n      const logoUrl = '/images/logo_masclet.png';\n      \n      // Tamaño y posicionamiento del logo (centrado arriba)\n      const logoWidth = 45;\n      let logoHeight = 35;\n      const pageWidth = doc.internal.pageSize.getWidth();\n      const logoX = (pageWidth / 2) - (logoWidth / 2); // Centrado horizontalmente\n      const logoY = 10; // Margen superior\n      \n      // Añadir la imagen al PDF\n      doc.addImage(logoUrl, 'PNG', logoX, logoY, logoWidth, logoHeight);\n      \n      // Añadir el título debajo del logo (con más espacio para evitar que se tape)\n      doc.setFontSize(20);\n      doc.setTextColor(40, 40, 40);\n      doc.text(title, pageWidth / 2, logoY + logoHeight + 5, { align: 'center' });\n      \n      // Actualizamos la posición inicial del resumen con los valores reales del logo\n      resumenStartY = logoY + logoHeight + 20;\n    } catch (error) {\n      console.error('Error al cargar el logo:', error);\n      \n      // Si hay error, usamos el logo alternativo (rectángulo verde)\n      doc.setDrawColor(0);\n      doc.setFillColor(126, 211, 33); // Color verde lima corporativo\n      \n      const logoX = 30;\n      const logoY = 25;\n      const logoSize = 15;\n      \n      // Dibujamos un cuadrado redondeado como fondo del logo\n      doc.roundedRect(logoX - logoSize/2, logoY - logoSize/2, logoSize, logoSize, 2, 2, 'F');\n      \n      // Dibujamos la \"M\" de Masclet en blanco\n      doc.setDrawColor(255);\n      doc.setTextColor(255);\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'bold');\n      doc.text('M', logoX - 5, logoY + 5, { align: 'center' });\n    }\n    \n    // Añadir estadísticas resumen similar a la tarjeta de explotaciones\n    doc.setFontSize(12);\n    doc.setTextColor(40, 40, 40);\n    \n    // Calcular estadísticas detalladas para coincidan con el formato de las tarjetas\n    const totalAnimales = filteredAnimals.length;\n    const animalesActivos = filteredAnimals.filter(a => a.estado === 'OK').length;\n    const torosActivos = filteredAnimals.filter(a => a.genere === 'M' && a.estado === 'OK').length;\n    const vacasActivas = filteredAnimals.filter(a => a.genere === 'F' && a.estado === 'OK').length;\n    const terneros = filteredAnimals.filter(a => \n      a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)\n    ).reduce((total, animal) => {\n      const alletar = String(animal.alletar);\n      return total + (alletar === '1' ? 1 : alletar === '2' ? 2 : 0);\n    }, 0);\n    const amamantando = filteredAnimals.filter(a => \n      a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)\n    ).length;\n    \n    // Crear estructura de dos columnas para la primera fila (Total y Activos)\n    // Reducimos ligeramente el tamaño para que quepa mejor\n    doc.setFillColor(245, 245, 245);\n    doc.roundedRect(30, resumenStartY, 150, 13, 2, 2, 'F');\n    \n    // Títulos de las columnas\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(80, 80, 80);\n    doc.setFontSize(11); // Reducimos un poco el tamaño\n    doc.text(currentLang === 'ca' ? 'Total Animals' : 'Total Animales', 65, resumenStartY + 5, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Animals Actius' : 'Animales Activos', 145, resumenStartY + 5, { align: 'center' });\n    \n    // Valores de las columnas\n    doc.setFontSize(13); // Reducimos un poco el tamaño\n    doc.setTextColor(40, 40, 40);\n    doc.text(totalAnimales.toString(), 65, resumenStartY + 10, { align: 'center' });\n    doc.setTextColor(34, 139, 34); // Verde para animales activos\n    doc.text(animalesActivos.toString(), 145, resumenStartY + 10, { align: 'center' });\n    \n    // Segunda fila - Tres columnas (Toros, Vacas, Terneros)\n    doc.setFillColor(250, 250, 250);\n    doc.roundedRect(30, resumenStartY + 15, 150, 13, 2, 2, 'F');\n    \n    // Títulos\n    doc.setFontSize(11); // Tamaño reducido\n    doc.setTextColor(80, 80, 80);\n    doc.text(currentLang === 'ca' ? 'Toros Actius' : 'Toros Activos', 55, resumenStartY + 20, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Vaques Actives' : 'Vacas Activas', 105, resumenStartY + 20, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Vedells' : 'Terneros', 155, resumenStartY + 20, { align: 'center' });\n    \n    // Valores\n    doc.setTextColor(51, 102, 204); // Azul para toros\n    doc.text(torosActivos.toString(), 55, resumenStartY + 25, { align: 'center' });\n    doc.setTextColor(233, 30, 99); // Rosa para vacas\n    doc.text(vacasActivas.toString(), 105, resumenStartY + 25, { align: 'center' });\n    doc.setTextColor(255, 152, 0); // Naranja para terneros\n    doc.text(terneros.toString(), 155, resumenStartY + 25, { align: 'center' });\n    \n    // Tercera fila - Amamantando\n    doc.setFillColor(250, 250, 250);\n    doc.roundedRect(30, resumenStartY + 30, 70, 13, 2, 2, 'F');\n    \n    // Título y valor\n    doc.setTextColor(80, 80, 80);\n    doc.text(currentLang === 'ca' ? 'Alletant' : 'Amamantando', 45, resumenStartY + 35, { align: 'center' });\n    doc.setTextColor(3, 169, 244); // Azul para amamantando\n    doc.text(amamantando.toString(), 75, resumenStartY + 35, { align: 'center' });\n    \n    // Añadir tabla de animales usando jspdf-autotable\n    autoTable(doc, {\n      head: [columns],\n      body: data,\n      startY: resumenStartY + 50, // Ajustamos el inicio de la tabla para dejar espacio al resumen\n      theme: 'grid',\n      styles: { fontSize: 9, cellPadding: 3 },\n      headStyles: { \n        fillColor: [126, 211, 33], // Color verde lima corporativo\n        textColor: 255,\n        fontStyle: 'bold' \n      },\n      alternateRowStyles: { fillColor: [240, 240, 240] },\n      columnStyles: {\n        0: { cellWidth: 20 }, // ID\n        1: { cellWidth: 40 }, // Nombre\n        2: { cellWidth: 25 }, // Género\n        3: { cellWidth: 30 }, // Estado\n        4: { cellWidth: 35 }, // Fecha Nacimiento\n        5: { cellWidth: 40 }  // Amamantando\n      },\n      margin: { top: 70 }\n    });\n    \n    // Añadir pie de página\n    const pageCount = (doc as any).internal.getNumberOfPages();\n    for(let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(8);\n      doc.setTextColor(100, 100, 100);\n      doc.text(\n        'Masclet Imperi - ' + (currentLang === 'ca' ? 'Sistema de Gestió Ramadera' : 'Sistema de Gestión Ganadera'), \n        105, doc.internal.pageSize.height - 10, { align: 'center' }\n      );\n      doc.text(\n        currentLang === 'ca' ? `Pàgina ${i} de ${pageCount}` : `Página ${i} de ${pageCount}`, \n        195, doc.internal.pageSize.height - 10, { align: 'right' }\n      );\n    }\n    \n    // Guardar el PDF\n    const fileName = `animales_${currentExplotacion || 'todas'}_${new Date().toISOString().split('T')[0]}.pdf`;\n    doc.save(fileName);\n    } catch (error) {\n      console.error('Error al generar PDF:', error);\n      alert(currentLang === 'ca' ? 'Error en generar el PDF' : 'Error al generar el PDF');\n    }\n  };\n\n  // Renderizar el componente principal\n  return (\n    <div className=\"w-full py-6\">\n      {/* 1. Sección de búsqueda y filtros - exactamente igual al HTML existente */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4 mb-4 sm:mb-6\">\n        <div className=\"mb-3 sm:mb-4\">\n          <h2 className=\"text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-3\">\n            {currentLang === 'ca' ? 'Cerca i Filtres' : 'Búsqueda y Filtros'}\n          </h2>\n          <p className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300 mb-3 sm:mb-4\">\n            {currentLang === 'ca' \n              ? 'Utilitza els filtres per trobar explotacions específiques. Pots cercar per codi d\\'explotació.'\n              : 'Utiliza los filtros para encontrar explotaciones específicas. Puedes buscar por código de explotación.'\n            }\n          </p>\n        </div>\n        \n        {/* Buscador con botones */}\n        <div>\n          <div className=\"mb-3\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              {currentLang === 'ca' ? 'Cercar' : 'Buscar'}\n            </label>\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                id=\"search-explotacion\" \n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder={currentLang === 'ca' ? \"Cercar per codi d'explotació...\" : \"Buscar por código de explotación...\"} \n                className=\"w-full px-3 py-2 pl-9 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-700 dark:text-white\" \n              />\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <button \n              onClick={handleSearch}\n              className=\"btn btn-primary\"\n            >\n              {currentLang === 'ca' ? 'Cercar' : 'Buscar'}\n            </button>\n            <button \n              onClick={handleClear}\n              className=\"btn btn-secondary\"\n            >\n              {currentLang === 'ca' ? 'Netejar' : 'Limpiar'}\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mostrar spinner durante la carga */}\n      {loading && (\n        <div className=\"flex justify-center items-center py-10\">\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n      \n      {/* Mostrar error si ocurre */}\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md mb-4\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {/* 2. Lista de explotaciones (cards) - inicialmente visible */}\n      {!loading && !error && (\n        <>\n          {/* Vista de tarjetas de explotaciones */}\n          <div \n            id=\"explotacionCards\" \n            className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-6\"\n            style={{ display: currentExplotacion ? 'none' : 'grid' }}\n          >\n            {displayExplotaciones.map((exp) => (\n              <div \n                key={exp.explotacio} \n                className=\"explotacion-card bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden w-full border border-gray-100 mb-4\"\n                onClick={() => showExplotacionDetail(exp.explotacio)}\n              >\n                {/* Cabecera con el nombre de la explotación */}\n                <div className=\"card-header bg-primary text-white p-3\">\n                  <h3 className=\"text-lg font-bold text-center\">{exp.explotacio}</h3>\n                </div>\n                \n                {/* Cuerpo de la tarjeta */}\n                <div className=\"card-body p-4\">\n                  {/* Primera fila: Animales totales y activos */}\n                  <div className=\"grid grid-cols-2 mb-4 pb-3 border-b border-gray-100\">\n                    {/* Columna izquierda: Total Animales */}\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-bold text-gray-700 mb-2\">{currentLang === 'ca' ? \"Total Animals\" : \"Total Animales\"}</div>\n                      <div className=\"stat-value total font-bold text-2xl text-primary-dark\">\n                        {(exp.toros || 0) + (exp.vacas || 0) + (exp.terneros || 0)}\n                      </div>\n                    </div>\n                    {/* Columna derecha: Animales Activos */}\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-bold text-gray-700 mb-2\">{currentLang === 'ca' ? \"Animals Actius\" : \"Animales Activos\"}</div>\n                      <div className=\"stat-value total font-bold text-2xl text-green-600\">\n                        {/* Filtrar solo los animales con estado=OK */}\n                        {((exp.toros_activos !== undefined ? exp.toros_activos : exp.toros) || 0) + \n                         ((exp.vacas_activas !== undefined ? exp.vacas_activas : exp.vacas) || 0) + \n                         (exp.terneros || 0)}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Segunda fila: Toros, Vacas, Terneros (solo activos) */}\n                  <div className=\"animal-stats grid grid-cols-3 gap-1 text-center mb-3\">\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Toros Actius\" : \"Toros Activos\"}</div>\n                      <div className=\"stat-value toros font-bold text-primary\">\n                        {exp.toros_activos !== undefined ? exp.toros_activos : exp.toros || 0}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Vaques Actives\" : \"Vacas Activas\"}</div>\n                      <div className=\"stat-value vacas font-bold text-pink-500\">\n                        {exp.vacas_activas !== undefined ? exp.vacas_activas : exp.vacas || 0}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Vedells\" : \"Terneros\"}</div>\n                      <div className=\"stat-value terneros font-bold text-orange-500\">{exp.terneros || 0}</div>\n                    </div>\n                  </div>\n                  \n                  {/* Tercera fila: Amamantando */}\n                  <div className=\"card-footer grid grid-cols-3 gap-1 text-center pt-2 border-t border-gray-100\">\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Alletant\" : \"Amamantando\"}</div>\n                      <div className=\"font-bold text-blue-600\">{exp.amamantando || 0}</div>\n                    </div>\n                    <div className=\"col-span-2 text-center flex flex-col justify-center items-center\">\n                      <div className=\"stat-label font-medium\">&nbsp;</div>\n                      <div>\n                        <button \n                          className=\"details-link text-green-600 font-medium hover:text-green-700 transition-colors\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            showExplotacionDetail(exp.explotacio);\n                          }}\n                        >\n                          {currentLang === 'ca' ? \"Veure detalls\" : \"Ver detalles\"} &rarr;\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 3. Vista detallada de explotación - inicialmente oculta */}\n          <div \n            id=\"explotacion-detail\" \n            className=\"hidden mb-6 bg-white dark:bg-gray-800 rounded-lg shadow p-4\"\n            style={{ display: currentExplotacion ? 'block' : 'none' }}\n          >\n            <div className=\"flex items-center justify-between mb-4 text-lg font-medium\">\n              <h3 className=\"text-gray-900 dark:text-white\">\n                {currentLang === 'ca' ? \"Animals de\" : \"Animales de\"} <span id=\"explotacion-code\">{currentExplotacion}</span>\n              </h3>\n              \n              <div className=\"flex gap-2\">\n                <button \n                  id=\"export-csv\" \n                  className=\"btn btn-primary text-sm flex items-center\"\n                  onClick={exportToPDF}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  {currentLang === 'ca' ? \"Exportar PDF\" : \"Exportar PDF\"}\n                </button>\n                \n                <button \n                  id=\"back-button\" \n                  className=\"btn btn-secondary text-sm flex items-center\"\n                  onClick={handleBack}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 17l-5-5m0 0l5-5m-5 5h12\" />\n                  </svg>\n                  {currentLang === 'ca' ? \"Tornar\" : \"Volver\"}\n                </button>\n              </div>\n            </div>\n            \n            {/* Tabs para filtrar por categoría */}\n            <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center\">\n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'todos' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"todos\"\n                  onClick={() => filterAnimalsByCategory('todos')}\n                >\n                  {currentLang === 'ca' ? \"Tots els animals\" : \"Todos los animales\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.length}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'toros' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"toros\"\n                  onClick={() => filterAnimalsByCategory('toros')}\n                >\n                  {currentLang === 'ca' ? \"Toros\" : \"Toros\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{stats.toros}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'vacas-amam' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"vacas-amam\"\n                  onClick={() => filterAnimalsByCategory('vacas-amam')}\n                >\n                  {currentLang === 'ca' ? \"Vaques alletant\" : \"Vacas amamantando\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.filter(a => a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)).length}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'vacas-no-amam' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"vacas-no-amam\"\n                  onClick={() => filterAnimalsByCategory('vacas-no-amam')}\n                >\n                  {currentLang === 'ca' ? \"Vaques sense alletar\" : \"Vacas no amamantando\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.filter(a => a.genere === 'F' && (['0', 0].includes(a.alletar as any) || a.alletar === null)).length}</span>\n                </button>\n              </li>\n            </ul>\n            \n            {/* Área para la tabla de animales */}\n            <div className=\"mt-4\">\n              {renderAnimalTable()}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExplotacionesPage;\n","---\nimport MainLayout from '../../components/layout/MainLayout.astro';\nimport ExplotacionesPage from '../../components/explotaciones-react/ExplotacionesPage';\nimport '../../styles/explotaciones-card.css';\n---\n\n<MainLayout title=\"Explotaciones (React)\">\n  <ExplotacionesPage client:load />\n</MainLayout>\n\n<style is:global>\n  .btn {\n    @apply px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-150;\n  }\n  \n  .btn-primary {\n    @apply bg-primary text-white hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-primary-light;\n  }\n  \n  .btn-secondary {\n    @apply bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300;\n  }\n  \n  .spinner {\n    @apply w-8 h-8 border-4 border-gray-300 border-t-primary rounded-full animate-spin;\n  }\n</style>\n"],"names":["allAnimals","error","logoHeight","logoY","$$createComponent","$$render","$$renderComponent","MainLayout","$$result"],"mappings":"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"}