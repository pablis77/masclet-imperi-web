{"version":3,"file":"nuevo.astro.mjs","sources":["../../../../src/pages/listados/nuevo.astro"],"sourcesContent":["---\nimport MainLayout from '../../components/layout/MainLayout.astro';\nimport { getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual\nconst currentLang = getCurrentLanguage();\n\n// Traducciones\nconst translations = {\n  es: {\n    title: \"Crear Nuevo Listado\",\n    description: \"Crea un listado personalizado seleccionando los animales que deseas incluir.\",\n    name: \"Nombre del listado\",\n    namePlaceholder: \"Ej: Vacunación octubre 2025\",\n    description: \"Descripción\",\n    descriptionPlaceholder: \"Ej: Animales para vacunación del 15 de octubre\",\n    category: \"Categoría\",\n    categoryPlaceholder: \"Seleccionar categoría\",\n    categories: {\n      vaccination: \"Vacunación\",\n      treatment: \"Tratamiento\",\n      inspection: \"Inspección\",\n      other: \"Otro\"\n    },\n    animals: \"Selección de Animales\",\n    loadingAnimals: \"Cargando animales...\",\n    noAnimals: \"No hay animales disponibles.\",\n    filter: \"Filtrar animales\",\n    filterPlaceholder: \"Buscar por nombre o explotación\",\n    selectAll: \"Seleccionar todos\",\n    unselectAll: \"Deseleccionar todos\",\n    selected: \"seleccionados\",\n    save: \"Guardar Listado\",\n    cancel: \"Cancelar\",\n    saving: \"Guardando...\",\n    successTitle: \"Listado Creado\",\n    successMessage: \"El listado ha sido creado correctamente.\",\n    errorTitle: \"Error\",\n    errorMessage: \"Ha ocurrido un error al crear el listado. Por favor, inténtalo de nuevo.\",\n    returnToList: \"Volver a Listados\",\n    requiredField: \"Este campo es obligatorio\",\n    selectAnimals: \"Debes seleccionar al menos un animal\"\n  },\n  ca: {\n    title: \"Crear Nou Llistat\",\n    description: \"Crea un llistat personalitzat seleccionant els animals que vols incloure.\",\n    name: \"Nom del llistat\",\n    namePlaceholder: \"Ex: Vacunació octubre 2025\",\n    description: \"Descripció\",\n    descriptionPlaceholder: \"Ex: Animals per a vacunació del 15 d'octubre\",\n    category: \"Categoria\",\n    categoryPlaceholder: \"Seleccionar categoria\",\n    categories: {\n      vaccination: \"Vacunació\",\n      treatment: \"Tractament\",\n      inspection: \"Inspecció\",\n      other: \"Altre\"\n    },\n    animals: \"Selecció d'Animals\",\n    loadingAnimals: \"Carregant animals...\",\n    noAnimals: \"No hi ha animals disponibles.\",\n    filter: \"Filtrar animals\",\n    filterPlaceholder: \"Cercar per nom o explotació\",\n    selectAll: \"Seleccionar tots\",\n    unselectAll: \"Desseleccionar tots\",\n    selected: \"seleccionats\",\n    save: \"Guardar Llistat\",\n    cancel: \"Cancel·lar\",\n    saving: \"Guardant...\",\n    successTitle: \"Llistat Creat\",\n    successMessage: \"El llistat ha estat creat correctament.\",\n    errorTitle: \"Error\",\n    errorMessage: \"Ha ocorregut un error al crear el llistat. Si us plau, intenta-ho de nou.\",\n    returnToList: \"Tornar a Llistats\",\n    requiredField: \"Aquest camp és obligatori\",\n    selectAnimals: \"Has de seleccionar almenys un animal\"\n  }\n};\n\n// Función para obtener traducciones\nfunction t(key) {\n  const lang = currentLang;\n  return translations[lang][key] || key;\n}\n---\n\n<MainLayout title={t('title')}>\n  <div class=\"px-4 py-6 sm:px-6 lg:px-8\">\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-semibold text-gray-900 dark:text-white\">{t('title')}</h1>\n      <p class=\"mt-2 text-sm text-gray-700\">{t('description')}</p>\n    </div>\n\n    <div class=\"bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg\">\n      <div class=\"p-4\">\n        <!-- Formulario para crear listado -->\n        <form id=\"listado-form\" class=\"space-y-6\">\n          <!-- Información básica del listado -->\n          <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n            <!-- Nombre del listado -->\n            <div>\n              <label for=\"listado-name\" class=\"block text-sm font-medium text-gray-700\">\n                {t('name')} <span class=\"text-red-500\">*</span>\n              </label>\n              <div class=\"mt-1\">\n                <input\n                  type=\"text\"\n                  id=\"listado-name\"\n                  name=\"name\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm\"\n                  placeholder={t('namePlaceholder')}\n                  required\n                />\n                <p class=\"mt-1 text-sm text-red-500 hidden\" id=\"name-error\">{t('requiredField')}</p>\n              </div>\n            </div>\n\n            <!-- Categoría -->\n            <div>\n              <label for=\"listado-category\" class=\"block text-sm font-medium text-gray-700\">\n                {t('category')} <span class=\"text-red-500\">*</span>\n              </label>\n              <div class=\"mt-1\">\n                <select\n                  id=\"listado-category\"\n                  name=\"category\"\n                  class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm\"\n                  required\n                >\n                  <option value=\"\" disabled selected>{t('categoryPlaceholder')}</option>\n                  <option value=\"vacunacion\">Vacunación</option>\n                  <option value=\"tratamiento\">Tratamiento</option>\n                  <option value=\"inspeccion\">Inspección</option>\n                  <option value=\"otro\">Otro</option>\n                </select>\n                <p class=\"mt-1 text-sm text-red-500 hidden\" id=\"category-error\">{t('requiredField')}</p>\n              </div>\n            </div>\n          </div>\n\n          <!-- Descripción -->\n          <div>\n            <label for=\"listado-description\" class=\"block text-sm font-medium text-gray-700\">\n              {t('description')}\n            </label>\n            <div class=\"mt-1\">\n              <textarea\n                id=\"listado-description\"\n                name=\"description\"\n                rows=\"3\"\n                class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm\"\n                placeholder={t('descriptionPlaceholder')}\n              ></textarea>\n            </div>\n          </div>\n\n          <!-- Selección de animales -->\n          <div>\n            <h3 class=\"text-lg font-medium text-gray-900 mb-3\">{t('animals')}</h3>\n            \n            <!-- Estado de carga de animales -->\n            <div id=\"loading-animals\" class=\"py-8 flex justify-center\">\n              <div class=\"flex flex-col items-center\">\n                <div class=\"animate-spin rounded-full h-10 w-10 border-b-2 border-primary\"></div>\n                <p class=\"mt-2 text-sm text-gray-500\">{t('loadingAnimals')}</p>\n              </div>\n            </div>\n\n            <!-- Mensaje si no hay animales -->\n            <div id=\"no-animals\" class=\"py-8 text-center hidden\">\n              <p class=\"text-gray-500\">{t('noAnimals')}</p>\n            </div>\n\n            <!-- Lista de animales -->\n            <div id=\"animals-list\" class=\"hidden\">\n              <!-- Filtro y contadores -->\n              <div class=\"flex flex-col sm:flex-row justify-between mb-4 space-y-2 sm:space-y-0\">\n                <!-- Filtro -->\n                <div class=\"relative w-full sm:w-64\">\n                  <input\n                    type=\"text\"\n                    id=\"animal-filter\"\n                    class=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring-primary sm:text-sm pr-8\"\n                    placeholder={t('filterPlaceholder')}\n                  />\n                  <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                    <svg class=\"h-4 w-4 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n                    </svg>\n                  </div>\n                </div>\n\n                <!-- Contadores y botones de selección -->\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"text-sm text-gray-700\">\n                    <span id=\"selected-count\">0</span> {t('selected')}\n                  </span>\n                  <button type=\"button\" id=\"select-all\" class=\"text-sm text-primary hover:text-primary-dark\">\n                    {t('selectAll')}\n                  </button>\n                  <button type=\"button\" id=\"unselect-all\" class=\"text-sm text-primary hover:text-primary-dark ml-2\">\n                    {t('unselectAll')}\n                  </button>\n                </div>\n              </div>\n\n              <!-- Contenedor para la lista de animales -->\n              <div class=\"border border-gray-200 rounded-md overflow-hidden max-h-96 overflow-y-auto\">\n                <div id=\"animals-container\" class=\"divide-y divide-gray-200\">\n                  <!-- Los animales se cargarán aquí dinámicamente -->\n                </div>\n              </div>\n              \n              <p class=\"mt-1 text-sm text-red-500 hidden\" id=\"animals-error\">{t('selectAnimals')}</p>\n            </div>\n          </div>\n\n          <!-- Mensajes de error y éxito -->\n          <div id=\"success-message\" class=\"hidden rounded-md bg-green-50 p-4\">\n            <div class=\"flex\">\n              <div class=\"flex-shrink-0\">\n                <svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                </svg>\n              </div>\n              <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-green-800\">{t('successTitle')}</h3>\n                <div class=\"mt-2 text-sm text-green-700\">\n                  <p>{t('successMessage')}</p>\n                </div>\n                <div class=\"mt-4\">\n                  <div class=\"-mx-2 -my-1.5 flex\">\n                    <a\n                      href=\"/listados\"\n                      class=\"rounded-md bg-green-50 px-2 py-1.5 text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-green-600 focus:ring-offset-2 focus:ring-offset-green-50\"\n                    >\n                      {t('returnToList')}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div id=\"error-message\" class=\"hidden rounded-md bg-red-50 p-4\">\n            <div class=\"flex\">\n              <div class=\"flex-shrink-0\">\n                <svg class=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                </svg>\n              </div>\n              <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-red-800\">{t('errorTitle')}</h3>\n                <div class=\"mt-2 text-sm text-red-700\">\n                  <p>{t('errorMessage')}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Botones de acción -->\n          <div class=\"flex justify-end space-x-3\">\n            <a\n              href=\"/listados\"\n              class=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              {t('cancel')}\n            </a>\n            <button\n              type=\"submit\"\n              id=\"save-button\"\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              {t('save')}\n            </button>\n            <button\n              type=\"button\"\n              id=\"saving-button\"\n              class=\"hidden inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary\"\n              disabled\n            >\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              {t('saving')}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</MainLayout>\n\n<script>\n  // Importar el servicio específico para listados (usando nuestro servicio seguro)\n  import * as listadosService from '../../services/listados-service';\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    // Referencias a elementos del DOM\n    const form = document.getElementById('listado-form');\n    const nameInput = document.getElementById('listado-name');\n    const categorySelect = document.getElementById('listado-category');\n    const descriptionTextarea = document.getElementById('listado-description');\n    const loadingAnimals = document.getElementById('loading-animals');\n    const noAnimals = document.getElementById('no-animals');\n    const animalsList = document.getElementById('animals-list');\n    const animalsContainer = document.getElementById('animals-container');\n    const animalFilter = document.getElementById('animal-filter');\n    const selectedCount = document.getElementById('selected-count');\n    const selectAllBtn = document.getElementById('select-all');\n    const unselectAllBtn = document.getElementById('unselect-all');\n    const saveButton = document.getElementById('save-button');\n    const savingButton = document.getElementById('saving-button');\n    const successMessage = document.getElementById('success-message');\n    const errorMessage = document.getElementById('error-message');\n    const nameError = document.getElementById('name-error');\n    const categoryError = document.getElementById('category-error');\n    const animalsError = document.getElementById('animals-error');\n    \n    // Variable para almacenar los animales\n    let animals = [];\n    \n    // Función para actualizar el contador de seleccionados\n    const updateSelectedCount = () => {\n      const checkboxes = document.querySelectorAll('.animal-checkbox:checked');\n      selectedCount.textContent = checkboxes.length;\n    };\n    \n    // Función para filtrar animales\n    const filterAnimals = () => {\n      const query = animalFilter.value.toLowerCase();\n      const animalItems = document.querySelectorAll('.animal-item');\n      \n      animalItems.forEach(item => {\n        const animalName = item.dataset.name.toLowerCase();\n        const animalExplotacion = item.dataset.explotacion.toLowerCase();\n        \n        if (animalName.includes(query) || animalExplotacion.includes(query)) {\n          item.classList.remove('hidden');\n        } else {\n          item.classList.add('hidden');\n        }\n      });\n    };\n    \n    // Cargar los animales\n    try {\n      // Mostrar estados iniciales\n      loadingAnimals.classList.remove('hidden');\n      noAnimals.classList.add('hidden');\n      animalsList.classList.add('hidden');\n\n      // Obtener animales del servicio\n      animals = await listadosService.getAnimals();\n      \n      if (animals.length === 0) {\n        loadingAnimals.classList.add('hidden');\n        noAnimals.classList.remove('hidden');\n      } else {\n        loadingAnimals.classList.add('hidden');\n        animalsList.classList.remove('hidden');\n        \n        // Crear elementos para cada animal\n        animals.forEach(animal => {\n          const item = document.createElement('div');\n          item.className = 'animal-item flex items-center px-4 py-2 hover:bg-gray-50';\n          item.dataset.name = animal.nom || '';\n          item.dataset.explotacion = animal.explotacio || '';\n          \n          // Solo mostrar animales activos (estado = OK)\n          if (animal.estado === 'OK') {\n            item.innerHTML = `\n              <input \n                type=\"checkbox\" \n                id=\"animal-${animal.id}\" \n                name=\"animals\" \n                value=\"${animal.id}\" \n                class=\"animal-checkbox h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary\"\n              >\n              <label for=\"animal-${animal.id}\" class=\"ml-3 flex-1 cursor-pointer\">\n                <div class=\"font-medium text-gray-800\">${animal.nom || ''}</div>\n                <div class=\"text-sm text-gray-500\">\n                  ${animal.explotacio || ''} · \n                  ${animal.genere === 'M' ? 'Toro' : 'Vaca'}\n                  ${animal.genere === 'F' && animal.alletar ? ` · Alletar: ${animal.alletar}` : ''}\n                </div>\n              </label>\n            `;\n            \n            animalsContainer.appendChild(item);\n            \n            // Agregar evento al checkbox\n            const checkbox = item.querySelector('.animal-checkbox');\n            checkbox.addEventListener('change', updateSelectedCount);\n          }\n        });\n        \n        // Inicializar contador\n        updateSelectedCount();\n      }\n    } catch (error) {\n      console.error('Error al cargar animales:', error);\n      loadingAnimals.classList.add('hidden');\n      noAnimals.classList.remove('hidden');\n      noAnimals.querySelector('p').textContent = 'Error al cargar los animales. Por favor, recarga la página.';\n    }\n    \n    // Eventos para filtrado\n    animalFilter.addEventListener('input', filterAnimals);\n    \n    // Eventos para seleccionar/deseleccionar todos\n    selectAllBtn.addEventListener('click', () => {\n      const checkboxes = document.querySelectorAll('.animal-checkbox:not(:checked)');\n      checkboxes.forEach(checkbox => {\n        if (!checkbox.closest('.animal-item').classList.contains('hidden')) {\n          checkbox.checked = true;\n        }\n      });\n      updateSelectedCount();\n    });\n    \n    unselectAllBtn.addEventListener('click', () => {\n      const checkboxes = document.querySelectorAll('.animal-checkbox:checked');\n      checkboxes.forEach(checkbox => checkbox.checked = false);\n      updateSelectedCount();\n    });\n    \n    // Evento para enviar el formulario\n    form.addEventListener('submit', async (e) => {\n      e.preventDefault();\n      \n      // Limpiar mensajes de error previos\n      nameError.classList.add('hidden');\n      categoryError.classList.add('hidden');\n      animalsError.classList.add('hidden');\n      \n      // Validar campos obligatorios\n      let isValid = true;\n      \n      if (!nameInput.value.trim()) {\n        nameError.classList.remove('hidden');\n        isValid = false;\n      }\n      \n      if (!categorySelect.value) {\n        categoryError.classList.remove('hidden');\n        isValid = false;\n      }\n      \n      const selectedAnimals = Array.from(document.querySelectorAll('.animal-checkbox:checked')).map(\n        checkbox => parseInt(checkbox.value)\n      );\n      \n      if (selectedAnimals.length === 0) {\n        animalsError.classList.remove('hidden');\n        isValid = false;\n      }\n      \n      if (!isValid) return;\n      \n      // Mostrar estado de guardado\n      saveButton.classList.add('hidden');\n      savingButton.classList.remove('hidden');\n      successMessage.classList.add('hidden');\n      errorMessage.classList.add('hidden');\n      \n      try {\n        // Crear objeto con los datos del formulario\n        const formData = {\n          name: nameInput.value.trim(),\n          category: categorySelect.value,\n          description: descriptionTextarea.value.trim(),\n          animals: selectedAnimals\n        };\n        \n        // Enviar datos al servidor\n        const nuevoListado = await listadosService.createListado(formData);\n        \n        // Mostrar mensaje de éxito\n        successMessage.classList.remove('hidden');\n        \n        // Ocultar formulario\n        form.querySelectorAll('input, select, textarea, button').forEach(el => {\n          if (el.type !== 'submit') {\n            el.disabled = true;\n          }\n        });\n        \n        // Scroll al mensaje de éxito\n        successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        \n        // Redirigir a la página principal de listados después de 1.5 segundos\n        setTimeout(() => {\n          window.location.href = '/listados';\n        }, 1500);\n      } catch (error) {\n        console.error('Error al crear listado:', error);\n        // Mostrar mensaje de error\n        errorMessage.classList.remove('hidden');\n        // Restaurar el botón de guardar\n        saveButton.classList.remove('hidden');\n        savingButton.classList.add('hidden');\n        // Hacer scroll al mensaje de error\n        errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    });\n  });\n</script>\n"],"names":["$$createComponent","$$render","$$renderComponent","MainLayout","$$result","$$maybeRenderHead","$$addAttribute"],"mappings":"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"}