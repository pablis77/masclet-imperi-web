{"version":3,"file":"_id_.astro.mjs","sources":["../../../../../src/pages/listados/editar/[id].astro"],"sourcesContent":["---\nimport MainLayout from '../../../components/layout/MainLayout.astro';\nimport { getCurrentLanguage, t } from '../../../i18n/config';\n\n// Obtener el idioma actual\nconst currentLang = getCurrentLanguage();\n\n// Obtener el ID del listado de los parámetros de la URL\nconst { id } = Astro.params;\n\n// Actualizar la URL actual para el sistema de navegación\nAstro.props.currentPath = `/listados/edit/[id]`;\n\n// Traducciones simples sin objetos anidados\nconst titulo = currentLang === 'es' ? \"Editar Listado\" : \"Editar Llistat\";\nconst descripcion = currentLang === 'es' ? \"Modifica los detalles del listado y los animales incluidos.\" : \"Modifica els detalls del llistat i els animals inclosos.\";\nconst nombreLabel = currentLang === 'es' ? \"Nombre del listado\" : \"Nom del llistat\";\nconst nombrePlaceholder = currentLang === 'es' ? \"Ej: Vacunación octubre 2025\" : \"Ex: Vacunació octubre 2025\";\nconst descripcionLabel = currentLang === 'es' ? \"Descripción\" : \"Descripció\";\nconst descripcionPlaceholder = currentLang === 'es' ? \"Ej: Animales para vacunación del 15 de octubre\" : \"Ex: Animals per a vacunació del 15 d'octubre\";\nconst categoriaLabel = currentLang === 'es' ? \"Categoría\" : \"Categoria\";\nconst categoriaPlaceholder = currentLang === 'es' ? \"Seleccionar categoría\" : \"Seleccionar categoria\";\nconst categoriaVacunacion = currentLang === 'es' ? \"Vacunación\" : \"Vacunació\";\nconst categoriaTratamiento = currentLang === 'es' ? \"Tratamiento\" : \"Tractament\";\nconst categoriaTransporte = currentLang === 'es' ? \"Transporte\" : \"Transport\";\nconst categoriaVenta = currentLang === 'es' ? \"Venta\" : \"Venda\";\nconst categoriaOtro = currentLang === 'es' ? \"Otro\" : \"Altre\";\nconst animalesLabel = currentLang === 'es' ? \"Selección de Animales\" : \"Selecció d'Animals\";\nconst buscarAnimales = currentLang === 'es' ? \"Buscar animales...\" : \"Cercar animals...\";\nconst noAnimales = currentLang === 'es' ? \"No hay animales disponibles.\" : \"No hi ha animals disponibles.\";\nconst seleccionados = currentLang === 'es' ? \"Seleccionados:\" : \"Seleccionats:\";\nconst seleccionarTodos = currentLang === 'es' ? \"Seleccionar todos\" : \"Seleccionar tots\";\nconst deseleccionarTodos = currentLang === 'es' ? \"Deseleccionar todos\" : \"Deseleccionar tots\";\nconst guardar = currentLang === 'es' ? \"Guardar Cambios\" : \"Guardar Canvis\";\nconst guardando = currentLang === 'es' ? \"Guardando...\" : \"Guardant...\";\nconst cancelar = currentLang === 'es' ? \"Cancelar\" : \"Cancel·lar\";\nconst exito = currentLang === 'es' ? \"Listado Actualizado\" : \"Llistat Actualitzat\";\nconst mensajeExito = currentLang === 'es' ? \"El listado ha sido actualizado correctamente.\" : \"El llistat ha estat actualitzat correctament.\";\nconst error = currentLang === 'es' ? \"Error al actualizar el listado.\" : \"Error al actualitzar el llistat.\";\nconst requerido = currentLang === 'es' ? \"Este campo es obligatorio.\" : \"Aquest camp és obligatori.\";\nconst volver = currentLang === 'es' ? \"Volver a Listados\" : \"Tornar a Llistats\";\nconst cargando = currentLang === 'es' ? \"Cargando datos del listado...\" : \"Carregant dades del llistat...\";\n\n---\n\n<MainLayout title={titulo}>\n  <div class=\"px-4 py-6 sm:px-6 lg:px-8\">\n    <div class=\"mb-6\">\n      <h1 class=\"text-2xl font-semibold text-gray-900 dark:text-white\">{titulo}</h1>\n      <p class=\"mt-2 text-sm text-gray-700\">{descripcion}</p>\n    </div>\n\n    <div class=\"bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg\">\n      <div class=\"p-4\">\n        <!-- Mensaje de carga inicial -->\n        <div id=\"loading-message\" class=\"py-8 flex justify-center\">\n          <div class=\"flex flex-col items-center\">\n            <div class=\"animate-spin rounded-full h-10 w-10 border-b-2 border-primary\"></div>\n            <p class=\"mt-2 text-sm text-gray-500\">{cargando}</p>\n          </div>\n        </div>\n\n        <!-- Formulario para editar listado (inicialmente oculto) -->\n        <form id=\"listado-form\" class=\"space-y-6 hidden\">\n          <!-- Información básica del listado -->\n          <div class=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n            <!-- Nombre del listado -->\n            <div>\n              <label for=\"listado-name\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                {nombreLabel} <span class=\"text-red-500\">*</span>\n              </label>\n              <div class=\"mt-1\">\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"listado-name\"\n                  class=\"shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  placeholder={nombrePlaceholder}\n                  required\n                />\n              </div>\n              <p id=\"name-error\" class=\"mt-1 text-sm text-red-600 hidden\">{requerido}</p>\n            </div>\n            \n            <!-- Categoría -->\n            <div>\n              <label for=\"listado-category\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                {categoriaLabel}\n              </label>\n              <div class=\"mt-1\">\n                <select\n                  id=\"listado-category\"\n                  name=\"category\"\n                  class=\"shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                >\n                  <option value=\"\">{categoriaPlaceholder}</option>\n                  <option value=\"vaccination\">{categoriaVacunacion}</option>\n                  <option value=\"treatment\">{categoriaTratamiento}</option>\n                  <option value=\"transport\">{categoriaTransporte}</option>\n                  <option value=\"sale\">{categoriaVenta}</option>\n                  <option value=\"other\">{categoriaOtro}</option>\n                </select>\n              </div>\n              <p id=\"category-error\" class=\"mt-1 text-sm text-red-600 hidden\">{requerido}</p>\n            </div>\n          </div>\n          \n          <!-- Descripción -->\n          <div>\n            <label for=\"listado-description\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n              {descripcionLabel}\n            </label>\n            <div class=\"mt-1\">\n              <textarea\n                id=\"listado-description\"\n                name=\"description\"\n                rows=\"3\"\n                class=\"shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                placeholder={descripcionPlaceholder}\n              ></textarea>\n            </div>\n          </div>\n          \n          <!-- Selección de animales -->\n          <div>\n            <h3 class=\"text-lg font-medium text-gray-900 mb-3\">{animalesLabel}</h3>\n            \n            <!-- Estado de carga de animales -->\n            <div id=\"loading-animals\" class=\"py-8 flex justify-center\">\n              <div class=\"flex flex-col items-center\">\n                <div class=\"animate-spin rounded-full h-10 w-10 border-b-2 border-primary\"></div>\n                <p class=\"mt-2 text-sm text-gray-500\">{cargando}</p>\n              </div>\n            </div>\n            \n            <!-- Mensaje si no hay animales -->\n            <div id=\"no-animals\" class=\"py-8 text-center hidden\">\n              <p class=\"text-gray-500\">{noAnimales}</p>\n            </div>\n            \n            <!-- Contenedor de animales -->\n            <div id=\"animals-container\" class=\"hidden\">\n              <!-- Barra de búsqueda y filtros -->\n              <div class=\"mb-4 flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n                <div class=\"w-full sm:w-64 mb-3 sm:mb-0\">\n                  <input\n                    type=\"text\"\n                    id=\"animal-filter\"\n                    placeholder={buscarAnimales}\n                    class=\"shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white\"\n                  />\n                </div>\n                \n                <div class=\"flex items-center space-x-4\">\n                  <button\n                    type=\"button\"\n                    id=\"select-all\"\n                    class=\"inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-600\"\n                  >\n                    {seleccionarTodos}\n                  </button>\n                  <button\n                    type=\"button\"\n                    id=\"unselect-all\"\n                    class=\"inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-600\"\n                  >\n                    {deseleccionarTodos}\n                  </button>\n                  <span class=\"text-sm text-gray-500\">\n                    {seleccionados} <span id=\"selected-count\">0</span>\n                  </span>\n                </div>\n              </div>\n              \n              <!-- Lista de animales -->\n              <div id=\"animals-list\" class=\"border border-gray-200 rounded-md dark:border-gray-700 max-h-96 overflow-y-auto\">\n                <!-- Los animales se cargarán con JavaScript -->\n              </div>\n              \n              <p id=\"animals-error\" class=\"mt-1 text-sm text-red-600 hidden\">Selecciona al menos un animal.</p>\n            </div>\n          </div>\n          \n          <!-- Mensaje de éxito -->\n          <div id=\"success-message\" class=\"rounded-md bg-green-50 p-4 hidden\">\n            <div class=\"flex\">\n              <div class=\"flex-shrink-0\">\n                <svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                </svg>\n              </div>\n              <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-green-800\">{exito}</h3>\n                <div class=\"mt-2 text-sm text-green-700\">\n                  <p>{mensajeExito}</p>\n                </div>\n                <div class=\"mt-4\">\n                  <div class=\"-mx-2 -my-1.5 flex\">\n                    <a href=\"/listados\" class=\"px-2 py-1.5 rounded-md text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\">\n                      {volver}\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Mensaje de error -->\n          <div id=\"error-message\" class=\"rounded-md bg-red-50 p-4 hidden\">\n            <div class=\"flex\">\n              <div class=\"flex-shrink-0\">\n                <svg class=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                </svg>\n              </div>\n              <div class=\"ml-3\">\n                <h3 class=\"text-sm font-medium text-red-800\">{error}</h3>\n                <div class=\"mt-2 text-sm text-red-700\" id=\"error-details\">\n                  <!-- Detalles del error se mostrarán aquí -->\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Botones de acción -->\n          <div class=\"flex justify-end space-x-3\">\n            <a href=\"/listados\" class=\"inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n              {cancelar}\n            </a>\n            <button\n              type=\"submit\"\n              id=\"save-button\"\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              {guardar}\n            </button>\n            <button\n              type=\"button\"\n              id=\"saving-button\"\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hidden\"\n              disabled\n            >\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              {guardando}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</MainLayout>\n\n<script>\n  // Importar el servicio específico para listados y sistema de traducciones\n  import * as listadosService from '../../../services/listados-service';\n  import { getCurrentLanguage, t } from '../../../i18n/config';\n  \n  // Forzar el idioma catalán en toda la página\n  function forceLanguage() {\n    try {\n      // Forzar catalán en localStorage\n      localStorage.setItem('userLanguage', 'ca');\n      console.log('Listado Edit: Forzando idioma catalán en toda la página');\n    } catch (error) {\n      console.error('Error al forzar idioma:', error);\n    }\n  }\n  \n  // Traducción directa para asegurar que todo esté en catalán\n  function translateAllStaticTexts() {\n    try {\n      console.log('Aplicando traducción directa a todos los textos estáticos en la página de edición');\n      \n      // Diccionario de traducciones específicas para elementos de la página de edición\n      const traducciones = {\n        // Botones principales\n        'Guardar Cambios': 'Guardar Canvis',\n        'Cancelar': 'Cancel·lar',\n        'Deseleccionar todos': 'Deseleccionar tots',\n        'Seleccionar todos': 'Seleccionar tots',\n        \n        // Formulario\n        'Nombre del listado': 'Nom del llistat',\n        'Categoría': 'Categoria',\n        'Descripción': 'Descripció',\n        \n        // Opciones de categoría\n        'Seleccionar categoría': 'Seleccionar categoria',\n        'Vacunación': 'Vacunació',\n        'Tratamiento': 'Tractament',\n        'Transporte': 'Transport',\n        'Venta': 'Venda',\n        'Otro': 'Altre',\n        \n        // Selección de animales\n        'Selección de Animales': 'Selecció d\\'Animals',\n        'Buscar animales...': 'Cercar animals...',\n        'Seleccionados:': 'Seleccionats:',\n        'No hay animales disponibles': 'No hi ha animals disponibles',\n        \n        // Validación y mensajes\n        'Este campo es obligatorio': 'Aquest camp és obligatori',\n        'Guardando...': 'Guardant...',\n        'Listado Actualizado': 'Llistat Actualitzat',\n        'El listado ha sido actualizado correctamente': 'El llistat ha estat actualitzat correctament',\n        'Error al actualizar el listado': 'Error al actualitzar el llistat',\n        'Por favor, intenta nuevamente': 'Si us plau, torna-ho a intentar',\n        'Cargando datos del listado...': 'Carregant dades del llistat...'\n      };\n      \n      // Traducción de atributos específicos\n      const atributosParaTraducir = [\n        {selector: '#animal-filter', atributo: 'placeholder', es: 'Buscar animales...', ca: 'Cercar animals...'},\n        {selector: '#listado-name', atributo: 'placeholder', es: 'Ej: Vacunación octubre 2025', ca: 'Ex: Vacunació octubre 2025'},\n        {selector: '#listado-description', atributo: 'placeholder', es: 'Ej: Animales para vacunación del 15 de octubre', ca: 'Ex: Animals per a vacunació del 15 d\\'octubre'}\n      ];\n      \n      // Traducir atributos\n      atributosParaTraducir.forEach(item => {\n        const element = document.querySelector(item.selector);\n        if (element && element.getAttribute(item.atributo) === item.es) {\n          element.setAttribute(item.atributo, item.ca);\n          console.log(`Traducido atributo ${item.atributo} de '${item.es}' a '${item.ca}'`);\n        }\n      });\n      \n      // Función para traducir todo el contenido de texto del documento\n      function translateTextNodes(node) {\n        if (node.nodeType === 3) { // Nodo de texto\n          let content = node.nodeValue.trim();\n          if (content) {\n            // Buscar en el diccionario de traducciones\n            for (const [es, ca] of Object.entries(traducciones)) {\n              if (content.includes(es)) {\n                node.nodeValue = node.nodeValue.replace(es, ca);\n                console.log(`Traducido: '${es}' -> '${ca}'`);\n              }\n            }\n          }\n        } else {\n          // Recorrer hijos recursivamente\n          for (let i = 0; i < node.childNodes.length; i++) {\n            translateTextNodes(node.childNodes[i]);\n          }\n        }\n      }\n      \n      // Iniciar la traducción desde el cuerpo del documento\n      translateTextNodes(document.body);\n      \n      // También traducir título de la página\n      document.title = document.title.replace('Editar Listado', 'Editar Llistat');\n      \n      console.log('Traducción directa completada');\n    } catch (error) {\n      console.error('Error en traducción directa:', error);\n    }\n  }\n\n  // Función para actualizar todas las traducciones en la página\n  function updateAllTranslations() {\n    try {\n      // Forzar catalán siempre\n      forceLanguage();\n      const currentLang = 'ca'; // Forzar catalán directamente\n      console.log('Listado Edit: Actualizando traducciones al idioma:', currentLang);\n      \n      // Traducir el título de la página\n      const pageTitle = document.getElementById('page-title');\n      if (pageTitle) {\n        pageTitle.textContent = currentLang === 'ca' ? \"Editar Llistat\" : \"Editar Listado\";\n      }\n      \n      // Diccionario de traducciones\n      const traducciones = {\n        ca: {\n          titulo: \"Editar Llistat\",\n          descripcion: \"Modifica els detalls del llistat i els animals inclosos.\",\n          nombreLabel: \"Nom del llistat\",\n          nombrePlaceholder: \"Ex: Vacunació octubre 2025\",\n          descripcionLabel: \"Descripció\",\n          descripcionPlaceholder: \"Ex: Animals per a vacunació del 15 d'octubre\",\n          categoriaLabel: \"Categoria\",\n          categoriaPlaceholder: \"Seleccionar categoria\",\n          categoriaVacunacion: \"Vacunació\",\n          categoriaTratamiento: \"Tractament\",\n          categoriaTransporte: \"Transport\",\n          categoriaVenta: \"Venda\",\n          categoriaOtro: \"Altre\",\n          animalesLabel: \"Selecció d'Animals\",\n          buscarAnimales: \"Cercar animals...\",\n          noAnimales: \"No hi ha animals disponibles.\",\n          seleccionados: \"Seleccionats:\",\n          seleccionarTodos: \"Seleccionar tots\",\n          deseleccionarTodos: \"Deseleccionar tots\",\n          guardar: \"Guardar Canvis\",\n          guardando: \"Guardant...\",\n          cancelar: \"Cancel·lar\",\n          exito: \"Llistat Actualitzat\",\n          mensajeExito: \"El llistat ha estat actualitzat correctament.\",\n          error: \"Error al actualitzar el llistat.\",\n          requerido: \"Aquest camp és obligatori.\",\n          volver: \"Tornar a Llistats\",\n          cargando: \"Carregant dades del llistat...\"\n        },\n        es: {\n          titulo: \"Editar Listado\",\n          descripcion: \"Modifica los detalles del listado y los animales incluidos.\",\n          nombreLabel: \"Nombre del listado\",\n          nombrePlaceholder: \"Ej: Vacunación octubre 2025\",\n          descripcionLabel: \"Descripción\",\n          descripcionPlaceholder: \"Ej: Animales para vacunación del 15 de octubre\",\n          categoriaLabel: \"Categoría\",\n          categoriaPlaceholder: \"Seleccionar categoría\",\n          categoriaVacunacion: \"Vacunación\",\n          categoriaTratamiento: \"Tratamiento\",\n          categoriaTransporte: \"Transporte\",\n          categoriaVenta: \"Venta\",\n          categoriaOtro: \"Otro\",\n          animalesLabel: \"Selección de Animales\",\n          buscarAnimales: \"Buscar animales...\",\n          noAnimales: \"No hay animales disponibles.\",\n          seleccionados: \"Seleccionados:\",\n          seleccionarTodos: \"Seleccionar todos\",\n          deseleccionarTodos: \"Deseleccionar todos\",\n          guardar: \"Guardar Cambios\",\n          guardando: \"Guardando...\",\n          cancelar: \"Cancelar\",\n          exito: \"Listado Actualizado\",\n          mensajeExito: \"El listado ha sido actualizado correctamente.\",\n          error: \"Error al actualizar el listado.\",\n          requerido: \"Este campo es obligatorio.\",\n          volver: \"Volver a Listados\",\n          cargando: \"Cargando datos del listado...\"\n        }\n      };\n      \n      // Asignar traducciones basadas en selectores\n      const elementosTraducibles = [\n        { selector: 'h1', key: 'titulo' },\n        { selector: 'h1 + p', key: 'descripcion' },\n        { selector: 'label[for=\"nombre\"]', key: 'nombreLabel' },\n        { selector: 'input#nombre', key: 'nombrePlaceholder', attr: 'placeholder' },\n        { selector: 'label[for=\"descripcion\"]', key: 'descripcionLabel' },\n        { selector: 'textarea#descripcion', key: 'descripcionPlaceholder', attr: 'placeholder' },\n        { selector: 'label[for=\"categoria\"]', key: 'categoriaLabel' },\n        { selector: 'select#categoria option[value=\"\"]', key: 'categoriaPlaceholder' },\n        { selector: 'select#categoria option[value=\"vacunacion\"]', key: 'categoriaVacunacion' },\n        { selector: 'select#categoria option[value=\"tratamiento\"]', key: 'categoriaTratamiento' },\n        { selector: 'select#categoria option[value=\"transporte\"]', key: 'categoriaTransporte' },\n        { selector: 'select#categoria option[value=\"venta\"]', key: 'categoriaVenta' },\n        { selector: 'select#categoria option[value=\"otro\"]', key: 'categoriaOtro' },\n        { selector: 'h3', key: 'animalesLabel' },\n        { selector: 'input#search-animals', key: 'buscarAnimales', attr: 'placeholder' },\n        { selector: '#no-animals', key: 'noAnimales' },\n        { selector: '#selected-count', key: 'seleccionados', prefix: true },\n        { selector: '#select-all', key: 'seleccionarTodos' },\n        { selector: '#deselect-all', key: 'deseleccionarTodos' },\n        { selector: 'button[type=\"submit\"] span', key: 'guardar' },\n        { selector: '#cancel-btn', key: 'cancelar' },\n        { selector: '#success-message .font-medium', key: 'exito' },\n        { selector: '#success-message p', key: 'mensajeExito' },\n        { selector: '#error-message p', key: 'error' },\n        { selector: '.validation-error', key: 'requerido' },\n        { selector: '#back-btn', key: 'volver' },\n        { selector: '#loading-message p', key: 'cargando' }\n      ];\n      \n      const dict = currentLang === 'ca' ? traducciones.ca : traducciones.es;\n      \n      elementosTraducibles.forEach(elem => {\n        const elements = document.querySelectorAll(elem.selector);\n        elements.forEach(el => {\n          if (elem.attr) {\n            el.setAttribute(elem.attr, dict[elem.key]);\n          } else if (elem.prefix) {\n            // Para elementos que necesitan un prefijo (como \"Seleccionados: 5\")\n            const numero = el.textContent.replace(/[^0-9]/g, '');\n            el.textContent = dict[elem.key] + ' ' + numero;\n          } else {\n            el.textContent = dict[elem.key];\n          }\n        });\n      });\n      \n      console.log('Traducciones actualizadas correctamente');\n    } catch (error) {\n      console.error('Error al actualizar traducciones:', error);\n    }\n  }\n\n  // Ejecutar traducción inicial y escuchar cambios de idioma\n  document.addEventListener('DOMContentLoaded', () => {\n    // Forzar catalán\n    forceLanguage();\n    \n    // Traducción inicial\n    updateAllTranslations();\n    \n    // Traducción directa (más agresiva)\n    setTimeout(() => {\n      translateAllStaticTexts();\n    }, 500); // Dar tiempo a que se cargue el contenido dinámico\n    \n    // Volver a aplicar la traducción cuando el DOM cambie\n    setTimeout(() => {\n      translateAllStaticTexts();\n    }, 1000);\n    \n    // También traducir cuando el usuario interactúe con la página\n    document.body.addEventListener('click', () => {\n      setTimeout(translateAllStaticTexts, 100);\n    });\n    \n    // Detectar cambios de idioma (escuchar cambios en localStorage)\n    window.addEventListener('storage', function(e) {\n      if (e.key === 'userLanguage') {\n        updateAllTranslations();\n        setTimeout(translateAllStaticTexts, 200);\n      }\n    });\n  });\n  \n  document.addEventListener('DOMContentLoaded', async () => {\n    // Obtener el ID del listado de la URL\n    const urlParts = window.location.pathname.split('/');\n    const listadoId = urlParts[urlParts.length - 1];\n    \n    // Referencias a elementos del DOM\n    const form = document.getElementById('listado-form');\n    const nameInput = document.getElementById('listado-name');\n    const categorySelect = document.getElementById('listado-category');\n    const descriptionTextarea = document.getElementById('listado-description');\n    const loadingMessage = document.getElementById('loading-message');\n    const loadingAnimals = document.getElementById('loading-animals');\n    const noAnimals = document.getElementById('no-animals');\n    const animalsList = document.getElementById('animals-list');\n    const animalsContainer = document.getElementById('animals-container');\n    const animalFilter = document.getElementById('animal-filter');\n    const selectedCount = document.getElementById('selected-count');\n    const selectAllBtn = document.getElementById('select-all');\n    const unselectAllBtn = document.getElementById('unselect-all');\n    const saveButton = document.getElementById('save-button');\n    const savingButton = document.getElementById('saving-button');\n    const successMessage = document.getElementById('success-message');\n    const errorMessage = document.getElementById('error-message');\n    const nameError = document.getElementById('name-error');\n    const categoryError = document.getElementById('category-error');\n    const animalsError = document.getElementById('animals-error');\n    \n    // Variable para almacenar los animales y el listado actual\n    let animals = [];\n    let currentListado = null;\n    let selectedAnimals = [];\n    \n    // Función para actualizar el contador de seleccionados\n    const updateSelectedCount = () => {\n      const checkboxes = document.querySelectorAll('.animal-checkbox:checked');\n      selectedCount.textContent = checkboxes.length;\n      \n      // Actualizar la lista de IDs seleccionados\n      selectedAnimals = Array.from(checkboxes).map(checkbox => parseInt(checkbox.value));\n    };\n    \n    // Función para filtrar animales\n    const filterAnimals = () => {\n      const filterText = animalFilter.value.toLowerCase();\n      const items = document.querySelectorAll('.animal-item');\n      \n      items.forEach(item => {\n        const name = item.dataset.name?.toLowerCase() || '';\n        const explotacion = item.dataset.explotacion?.toLowerCase() || '';\n        \n        if (name.includes(filterText) || explotacion.includes(filterText)) {\n          item.classList.remove('hidden');\n        } else {\n          item.classList.add('hidden');\n        }\n      });\n    };\n    \n    // Cargar los datos del listado\n    try {\n      // Obtener el listado\n      currentListado = await listadosService.getListado(listadoId);\n      \n      if (currentListado) {\n        // Rellenar el formulario con los datos del listado\n        if (nameInput) nameInput.value = currentListado.nombre || '';\n        if (categorySelect) categorySelect.value = currentListado.categoria || '';\n        if (descriptionTextarea) descriptionTextarea.value = currentListado.descripcion || '';\n        \n        // Guardar los IDs de animales seleccionados\n        selectedAnimals = currentListado.animales?.map(animal => animal.id) || [];\n        \n        // Cargar los animales disponibles\n        await loadAnimals();\n        \n        // Mostrar el formulario y ocultar el mensaje de carga\n        if (loadingMessage) loadingMessage.classList.add('hidden');\n        if (form) form.classList.remove('hidden');\n      } else {\n        throw new Error('No se pudo cargar el listado');\n      }\n    } catch (error) {\n      console.error('Error al cargar el listado:', error);\n      if (loadingMessage) {\n        loadingMessage.innerHTML = '<p class=\"text-red-500\">Error al cargar el listado. Por favor, intenta nuevamente.</p>';\n      }\n    }\n    \n    // Función para cargar los animales\n    async function loadAnimals() {\n      if (!animalsContainer || !loadingAnimals || !noAnimals || !animalsList) return;\n      \n      try {\n        // Mostrar estado de carga\n        loadingAnimals.classList.remove('hidden');\n        noAnimals.classList.add('hidden');\n        animalsList.classList.add('hidden');\n\n        // Obtener animales del servicio\n        animals = await listadosService.getAnimals();\n        \n        if (animals.length === 0) {\n          loadingAnimals.classList.add('hidden');\n          noAnimals.classList.remove('hidden');\n        } else {\n          loadingAnimals.classList.add('hidden');\n          animalsList.classList.remove('hidden');\n          animalsContainer.classList.remove('hidden');\n          \n          // Crear elementos para cada animal\n          animals.forEach(animal => {\n            const item = document.createElement('div');\n            item.className = 'animal-item flex items-center px-4 py-2 hover:bg-gray-50';\n            item.dataset.name = animal.nom || '';\n            item.dataset.explotacion = animal.explotacio || '';\n            \n            // Solo mostrar animales activos (estado = OK)\n            if (animal.estado === 'OK') {\n              // Verificar si el animal está en el listado actual\n              const isSelected = selectedAnimals.includes(animal.id);\n              \n              item.innerHTML = `\n                <input \n                  type=\"checkbox\" \n                  id=\"animal-${animal.id}\" \n                  name=\"animals\" \n                  value=\"${animal.id}\" \n                  class=\"animal-checkbox h-4 w-4 text-primary border-gray-300 rounded focus:ring-primary\"\n                  ${isSelected ? 'checked' : ''}\n                >\n                <label for=\"animal-${animal.id}\" class=\"ml-3 flex-1 cursor-pointer\">\n                  <div class=\"font-medium text-gray-800\">${animal.nom || ''}</div>\n                  <div class=\"text-sm text-gray-500\">\n                    ${animal.explotacio || ''} · \n                    ${animal.genere === 'M' ? 'Toro' : 'Vaca'}\n                    ${animal.genere === 'F' && animal.alletar ? ` · Alletar: ${animal.alletar}` : ''}\n                  </div>\n                </label>\n              `;\n              \n              animalsList.appendChild(item);\n              \n              // Agregar evento al checkbox\n              const checkbox = item.querySelector('.animal-checkbox');\n              checkbox.addEventListener('change', updateSelectedCount);\n            }\n          });\n          \n          // Inicializar contador\n          updateSelectedCount();\n        }\n      } catch (error) {\n        console.error('Error al cargar animales:', error);\n        loadingAnimals.classList.add('hidden');\n        noAnimals.classList.remove('hidden');\n        noAnimals.innerHTML = '<p class=\"text-red-500\">Error al cargar los animales. Por favor, intenta nuevamente.</p>';\n      }\n    }\n    \n    // Eventos para los botones de selección\n    if (selectAllBtn) {\n      selectAllBtn.addEventListener('click', () => {\n        const checkboxes = document.querySelectorAll('.animal-checkbox:not(:checked)');\n        checkboxes.forEach(checkbox => {\n          if (!checkbox.closest('.animal-item').classList.contains('hidden')) {\n            checkbox.checked = true;\n          }\n        });\n        updateSelectedCount();\n      });\n    }\n    \n    if (unselectAllBtn) {\n      unselectAllBtn.addEventListener('click', () => {\n        const checkboxes = document.querySelectorAll('.animal-checkbox:checked');\n        checkboxes.forEach(checkbox => {\n          checkbox.checked = false;\n        });\n        updateSelectedCount();\n      });\n    }\n    \n    // Evento para el filtro de animales\n    if (animalFilter) {\n      animalFilter.addEventListener('input', filterAnimals);\n    }\n    \n    // Evento para el formulario\n    if (form) {\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n        \n        // Validar el formulario\n        let isValid = true;\n        \n        // Validar nombre (obligatorio)\n        if (!nameInput.value.trim()) {\n          nameError.classList.remove('hidden');\n          isValid = false;\n        } else {\n          nameError.classList.add('hidden');\n        }\n        \n        // Validar que haya al menos un animal seleccionado\n        if (selectedAnimals.length === 0) {\n          animalsError.classList.remove('hidden');\n          isValid = false;\n        } else {\n          animalsError.classList.add('hidden');\n        }\n        \n        if (!isValid) return;\n        \n        // Mostrar estado de guardado\n        saveButton.classList.add('hidden');\n        savingButton.classList.remove('hidden');\n        successMessage.classList.add('hidden');\n        errorMessage.classList.add('hidden');\n        \n        try {\n          // Crear objeto con los datos del formulario\n          const formData = {\n            id: parseInt(listadoId),\n            nombre: nameInput.value.trim(),\n            categoria: categorySelect.value,\n            descripcion: descriptionTextarea.value.trim(),\n            animales: selectedAnimals\n          };\n          \n          // Enviar datos al servidor\n          const updatedListado = await listadosService.updateListado(listadoId, formData);\n          \n          // Mostrar mensaje de éxito\n          successMessage.classList.remove('hidden');\n          \n          // Ocultar formulario\n          form.querySelectorAll('input, select, textarea, button').forEach(el => {\n            if (el.type !== 'submit') {\n              el.disabled = true;\n            }\n          });\n          \n          // Scroll al mensaje de éxito\n          successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          \n          // Redirigir a la página principal de listados después de 1.5 segundos\n          setTimeout(() => {\n            window.location.href = '/listados';\n          }, 1500);\n        } catch (error) {\n          console.error('Error al actualizar listado:', error);\n          errorMessage.classList.remove('hidden');\n          saveButton.classList.remove('hidden');\n          savingButton.classList.add('hidden');\n          // Hacer scroll al mensaje de error\n          errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n      });\n    }\n  });\n</script>\n"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","MainLayout","$$result","$$maybeRenderHead","$$addAttribute"],"mappings":"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"}