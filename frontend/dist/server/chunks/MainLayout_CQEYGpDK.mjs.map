{"version":3,"file":"MainLayout_CQEYGpDK.mjs","sources":["../../../src/components/layout/MainLayout.astro"],"sourcesContent":["---\n// Importar componentes de layout\nimport Navbar from './Navbar.astro';\nimport Sidebar from './Sidebar.astro';\nimport Footer from './Footer.astro';\n\n// No importamos el componente aquí, lo haremos en el script client:load\n\n// Props que pueden ser pasados al componente\ninterface Props {\n  title?: string;\n  userRole?: string;\n}\n\n// Valores por defecto\nconst { \n  title = \"Masclet Imperi\",\n  userRole = \"administrador\"\n} = Astro.props;\n\n// Obtener la ruta actual\nconst currentPath = Astro.url.pathname;\n\n// Determinar si se debe mostrar el sidebar (siempre true para desktop, controlado por JS para móvil)\nconst showSidebar = true;\n---\n\n<!DOCTYPE html>\n<html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"icon\" type=\"image/svg+xml\" href=\"/favicon.svg\" />\n    <script is:inline src=\"/scripts/bloquear-eliminar-parto.js\"></script>\n    <script is:inline src=\"/scripts/bloquear-editar-parto.js\"></script>\n    <script is:inline src=\"/scripts/bloquear-actualizar-animal.js\"></script>\n    <script is:inline src=\"/scripts/bloquear-acciones-listados.js\"></script>\n    <meta name=\"generator\" content={Astro.generator} />\n    <title>{title}</title>\n  </head>\n  <body class=\"bg-gray-50 dark:bg-gray-900 text-gray-800 dark:text-gray-200 min-h-screen\">\n    <div class=\"flex min-h-screen\">\n      <!-- Sidebar (siempre presente en el DOM, pero puede estar oculto en móvil) -->\n      <div id=\"sidebar-container\" class=\"md:block hidden\">\n        <Sidebar userRole={userRole} currentPath={currentPath} />\n      </div>\n      \n      <!-- Overlay para cerrar el sidebar en móvil -->\n      <div id=\"sidebar-overlay\" class=\"fixed inset-0 bg-black bg-opacity-50 z-30 hidden md:hidden\"></div>\n      \n      <!-- Contenido principal -->\n      <div class=\"flex-1 flex flex-col min-h-screen md:ml-64\"> <!-- Añadido margen izquierdo igual al ancho del sidebar -->\n        <!-- Navbar -->\n        <Navbar userRole={userRole} currentPath={currentPath} title={title} />\n        \n        <!-- Botón para abrir el sidebar en móvil -->\n        <button id=\"open-sidebar\" class=\"fixed bottom-4 left-4 md:hidden bg-primary text-white p-3 rounded-full shadow-lg z-20\">\n          <span class=\"text-xl\">☰</span>\n        </button>\n        \n        <!-- Contenido de la página -->\n        <main style=\"width: 100%; padding: 0; margin: 0;\">\n          <slot />\n        </main>\n        \n        <!-- Footer -->\n        <Footer />\n      </div>\n    </div>\n    \n    <!-- Cargar el script de permisos y asegurar su ejecución inmediata -->\n    <script src=\"/scripts/permissions-ui.js\" is:inline></script>\n    <script is:inline>\n      // Ejecutar la configuración de permisos cuando el DOM esté cargado\n      document.addEventListener('DOMContentLoaded', function() {\n        console.log('DOM cargado completamente - Ejecutando setupPermissionsUI');\n        if (typeof setupPermissionsUI === 'function') {\n          setupPermissionsUI();\n        } else {\n          console.error('La función setupPermissionsUI no está disponible');\n        }\n      });\n      \n      // Intentar ejecutar también cuando la ventana esté cargada\n      window.addEventListener('load', function() {\n        console.log('Ventana cargada completamente - Ejecutando setupPermissionsUI');\n        if (typeof setupPermissionsUI === 'function') {\n          setupPermissionsUI();\n        }\n      });\n    </script>\n    \n    <script>\n      // Script para manejar el sidebar en móvil\n      document.addEventListener('DOMContentLoaded', () => {\n        const sidebarContainer = document.getElementById('sidebar-container');\n        const sidebarOverlay = document.getElementById('sidebar-overlay');\n        const openSidebarButton = document.getElementById('open-sidebar');\n        \n        // Función para abrir el sidebar\n        const openSidebar = () => {\n          if (sidebarContainer && sidebarOverlay) {\n            sidebarContainer.classList.remove('hidden');\n            sidebarOverlay.classList.remove('hidden');\n            document.body.classList.add('overflow-hidden');\n          }\n        };\n        \n        // Función para cerrar el sidebar\n        const closeSidebar = () => {\n          if (sidebarContainer && sidebarOverlay && window.innerWidth < 768) {\n            sidebarContainer.classList.add('hidden');\n            sidebarOverlay.classList.add('hidden');\n            document.body.classList.remove('overflow-hidden');\n          }\n        };\n        \n        // Evento para abrir el sidebar\n        if (openSidebarButton) {\n          openSidebarButton.addEventListener('click', openSidebar);\n        }\n        \n        // Evento para cerrar el sidebar al hacer clic en el overlay\n        if (sidebarOverlay) {\n          sidebarOverlay.addEventListener('click', closeSidebar);\n        }\n        \n        // Escuchar el evento personalizado para cerrar el sidebar\n        document.addEventListener('close-sidebar', closeSidebar);\n        \n        // Ajustar visibilidad del sidebar en cambios de tamaño de ventana\n        window.addEventListener('resize', () => {\n          if (window.innerWidth >= 768) {\n            if (sidebarContainer) {\n              sidebarContainer.classList.remove('hidden');\n            }\n            if (sidebarOverlay) {\n              sidebarOverlay.classList.add('hidden');\n            }\n          } else {\n            if (sidebarContainer && !sidebarOverlay?.classList.contains('hidden')) {\n              // Mantener abierto si el overlay está visible (sidebar abierto en móvil)\n            } else {\n              if (sidebarContainer) {\n                sidebarContainer.classList.add('hidden');\n              }\n            }\n          }\n        });\n      });\n    </script>\n    \n    <!-- Script para inicializar las notificaciones -->\n    <script>\n      // Cargar e inicializar el sistema de notificaciones\n      import('../notifications/NotificationsMenu.js')\n        .then(module => {\n          const initializeNotifications = module.default;\n          document.addEventListener('DOMContentLoaded', () => {\n            console.log('Inicializando sistema de notificaciones...');\n            initializeNotifications();\n          });\n        })\n        .catch(error => {\n          console.error('Error al cargar el sistema de notificaciones:', error);\n        });\n    </script>\n  </body>\n</html>\n\n<style is:global>\n  /* Estilos globales */\n  :root {\n    --color-primary: #2c3e50;\n    --color-primary-dark: #1a252f;\n    --color-primary-light: #34495e;\n    --color-secondary: #e67e22;\n    --color-secondary-dark: #d35400;\n    --color-secondary-light: #f39c12;\n  }\n  \n  /* Estilos para tema claro */\n  :root {\n    --text-color: #333;\n    --bg-color: #f8f9fa;\n    --card-bg: #ffffff;\n  }\n  \n  /* Estilos para tema oscuro */\n  .dark {\n    --text-color: #e2e8f0;\n    --bg-color: #1a202c;\n    --card-bg: #2d3748;\n  }\n  \n  /* Estilos para tarjetas */\n  .card {\n    @apply bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden;\n  }\n  \n  /* Estilos para botones primarios */\n  .btn-primary {\n    @apply bg-primary hover:bg-primary-dark text-white font-bold py-2 px-4 rounded transition-colors duration-200;\n  }\n  \n  /* Estilos para botones secundarios */\n  .btn-secondary {\n    @apply bg-secondary hover:bg-secondary-dark text-white font-bold py-2 px-4 rounded transition-colors duration-200;\n  }\n  \n  /* Estilos para botones outline */\n  .btn-outline {\n    @apply border border-primary hover:bg-primary hover:text-white font-bold py-2 px-4 rounded transition-colors duration-200;\n  }\n  \n  /* Estilos para inputs */\n  .input {\n    @apply border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md py-2 px-4 text-gray-700 dark:text-gray-200 leading-tight focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent;\n  }\n  \n  /* Estilos para etiquetas */\n  .label {\n    @apply block text-gray-700 dark:text-gray-300 text-sm font-bold mb-2;\n  }\n  \n  /* Utilidades adicionales */\n  .text-primary-custom {\n    color: #88c425;\n  }\n  \n  .text-secondary-custom {\n    color: #262626;\n  }\n  \n  .bg-primary-custom {\n    background-color: #88c425;\n  }\n  \n  .bg-secondary-custom {\n    background-color: #262626;\n  }\n</style>\n"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$addAttribute","$$renderHead","$$renderComponent","Sidebar","Navbar","$$renderSlot","Footer"],"mappings":";;;;;;;;;AAAA,MAAA,UAAAA,WAAA,EAAA;AAAA,MAAA,YAAA,GAAAC,eAAA,CAAA,CAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,YAAA;AAeA,EAAM,MAAA;IACJ,KAAQ,GAAA,gBAAA;IACR,QAAW,GAAA;AACb,GAAA,GAAIA,MAAM,CAAA,KAAA;AAGV,EAAM,MAAA,WAAA,GAAcA,OAAM,GAAI,CAAA,QAAA;AArB9B,EAAA,OAAAC,2BAAA,UAAA,CAAA,CAAA,ybAAA,EAAA,UAAA,EAsCiB,YAtCjB,2QA4CS,EAAA,wUAAA,EASA,sTASE,2BAIF,EAAA,CAAA;;;;;;;;;;;;;;;;;;AAlET,qFAAA,CAAA,CAAA,CAAA,CAAA,EAAAC,YAAA,CAqCoCF,OAAM,SArC1C,EAAA,SAAA,GAsCY,KAtCZ,EAAAG,UAAA,CAAA,CAAA,EAAAC,eAAA,CAAA,UAAA,SAAA,EAAAC,SAAA,EAAA,EA4CiB,UAAU,EAAA,QAAA,EAAU,eAAa,WAAA,EAAzC,GA5CTD,eAAA,CAAA,QAAA,EAAA,UAAAE,QAAA,EAAA,EAqDgB,YAAU,QAAU,EAAA,aAAA,EAAa,aAAa,OAAO,EAAA,KAAA,EAA5D,CArDT,EAAAC,UAAA,CAAA,UAAA,OAAA,CAAA,SAAA,CA8DW,CA9DX,EAAAH,eAAA,CAAA,UAAA,QAAA,EAAAI,QAAA,EAAA,EAkES,CAAA,CAAA;AAlET,CAAA,EAAA,0FAAA,MAAA;;;;"}