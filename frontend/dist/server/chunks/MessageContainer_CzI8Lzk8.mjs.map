{"version":3,"file":"MessageContainer_CzI8Lzk8.mjs","sources":["../../../src/components/ui/MessageContainer.astro"],"sourcesContent":["---\n/**\n * Contenedor para mostrar mensajes y notificaciones de la aplicación\n */\n---\n\n<div id=\"message-container\" class=\"fixed top-4 right-4 z-50 space-y-4 max-w-md\"></div>\n\n<script>\n  import { messagesStore, removeMessage } from '../../stores/messageStore';\n  \n  // Función para crear un elemento de mensaje\n  function createMessageElement(message) {\n    // Configurar clases y iconos según el tipo de alerta\n    let bgColor, borderColor, textColor, iconSvg;\n    \n    switch (message.type) {\n      case 'success':\n        bgColor = 'bg-green-50 dark:bg-green-900/20';\n        borderColor = 'border-green-500 dark:border-green-700';\n        textColor = 'text-green-800 dark:text-green-300';\n        iconSvg = `<svg class=\"h-5 w-5 text-green-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>`;\n        break;\n      case 'error':\n        bgColor = 'bg-red-50 dark:bg-red-900/20';\n        borderColor = 'border-red-500 dark:border-red-700';\n        textColor = 'text-red-800 dark:text-red-300';\n        iconSvg = `<svg class=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n        </svg>`;\n        break;\n      case 'warning':\n        bgColor = 'bg-yellow-50 dark:bg-yellow-900/20';\n        borderColor = 'border-yellow-500 dark:border-yellow-700';\n        textColor = 'text-yellow-800 dark:text-yellow-300';\n        iconSvg = `<svg class=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>`;\n        break;\n      default: // info\n        bgColor = 'bg-blue-50 dark:bg-blue-900/20';\n        borderColor = 'border-blue-500 dark:border-blue-700';\n        textColor = 'text-blue-800 dark:text-blue-300';\n        iconSvg = `<svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>`;\n    }\n    \n    // Crear elemento de mensaje\n    const messageElement = document.createElement('div');\n    messageElement.id = `message-${message.id}`;\n    messageElement.className = `message-alert rounded-lg border ${borderColor} ${bgColor} p-4 shadow-lg transform transition-all duration-300 ease-in-out opacity-0 translate-x-4`;\n    messageElement.setAttribute('role', 'alert');\n    \n    // Contenido del mensaje\n    messageElement.innerHTML = `\n      <div class=\"flex items-start\">\n        <div class=\"flex-shrink-0\">\n          ${iconSvg}\n        </div>\n        <div class=\"ml-3 flex-grow\">\n          ${message.title ? `<h3 class=\"text-sm font-medium ${textColor}\">${message.title}</h3>` : ''}\n          <div class=\"mt-1 text-sm ${textColor}\">\n            <p>${message.content}</p>\n          </div>\n        </div>\n        ${message.dismissible ? `\n          <div class=\"ml-auto pl-3\">\n            <div class=\"-mx-1.5 -my-1.5\">\n              <button \n                type=\"button\" \n                class=\"inline-flex rounded-md p-1.5 text-gray-500 hover:text-gray-600 focus:outline-none\" \n                aria-label=\"Cerrar\"\n                onclick=\"document.dispatchEvent(new CustomEvent('dismiss-message', { detail: { id: '${message.id}' } }))\"\n              >\n                <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ` : ''}\n      </div>\n    `;\n    \n    return messageElement;\n  }\n  \n  // Función para mostrar un mensaje con animación\n  function showMessage(message) {\n    const container = document.getElementById('message-container');\n    if (!container) return;\n    \n    const messageElement = createMessageElement(message);\n    container.appendChild(messageElement);\n    \n    // Aplicar animación de entrada\n    setTimeout(() => {\n      messageElement.classList.remove('opacity-0', 'translate-x-4');\n      messageElement.classList.add('opacity-100', 'translate-x-0');\n    }, 10);\n    \n    return messageElement;\n  }\n  \n  // Función para ocultar un mensaje con animación\n  function hideMessage(id) {\n    const messageElement = document.getElementById(`message-${id}`);\n    if (!messageElement) return;\n    \n    // Aplicar animación de salida\n    messageElement.classList.add('opacity-0', 'translate-x-4');\n    \n    // Eliminar elemento después de la animación\n    setTimeout(() => {\n      messageElement.remove();\n    }, 300);\n  }\n  \n  // Inicializar el contenedor de mensajes\n  document.addEventListener('DOMContentLoaded', () => {\n    // Manejar evento para descartar mensajes\n    document.addEventListener('dismiss-message', (event) => {\n      const { id } = event.detail;\n      removeMessage(id);\n    });\n    \n    // Suscribirse a cambios en el store de mensajes\n    messagesStore.subscribe((messages) => {\n      const container = document.getElementById('message-container');\n      if (!container) return;\n      \n      // Obtener IDs de mensajes actuales en el DOM\n      const currentMessageIds = Array.from(container.children).map(\n        el => el.id.replace('message-', '')\n      );\n      \n      // Mostrar nuevos mensajes\n      messages.forEach(message => {\n        if (!currentMessageIds.includes(message.id)) {\n          showMessage(message);\n        }\n      });\n      \n      // Ocultar mensajes eliminados\n      currentMessageIds.forEach(id => {\n        if (!messages.some(message => message.id === id)) {\n          hideMessage(id);\n        }\n      });\n    });\n  });\n</script>\n"],"names":["$$render","$$maybeRenderHead"],"mappings":";;;;;AAAA,EAAA,OAAAA,cAAA,CAAA,EAAAC,eAAA,CAAA,CAAA,CAAA,uFAAA,CAAA;AAAA,CAAA,EAAA,4FAAA,MAAA;;;;"}