{"version":3,"file":"Footer_CbdEWwuE.mjs","sources":["../../../src/i18n/config.ts","../../../src/components/LanguageSwitcher.astro","../../../src/components/layout/Navbar.astro","../../../src/services/authService.js","../../../src/components/layout/Sidebar.astro","../../../src/components/layout/Footer.astro"],"sourcesContent":["// Configuración básica para multilenguaje\nexport const defaultLang = 'es';\nexport const supportedLanguages = ['es', 'ca'];\n\n// Definición de tipos para evitar errores\ntype TranslationDict = Record<string, Record<string, any>>;\n\n// Importar directamente las traducciones desde los archivos JSON\nimport * as esTranslations from './locales/es.json';\nimport * as caTranslations from './locales/ca.json';\n\n// Usar las traducciones importadas\nconst es: TranslationDict = esTranslations as unknown as TranslationDict;\nconst ca: TranslationDict = caTranslations as unknown as TranslationDict;\n\n// Asegurar que las traducciones se han cargado correctamente\nconsole.log('[i18n] Traducciones cargadas:', \n  'ES:', Object.keys(es).length, 'secciones', \n  'CA:', Object.keys(ca).length, 'secciones');\n\n// Función mejorada para las traducciones que soporta múltiples niveles de anidación\nexport function t(key: string, lang = defaultLang): string {\n  try {\n    const parts = key.split('.');\n    if (parts.length < 2) return key;\n    \n    const dict = lang === 'ca' ? ca : es;\n    \n    // Manejar múltiples niveles de anidación\n    let current: any = dict;\n    \n    // Navegar por la estructura anidada\n    for (const part of parts) {\n      if (current && current[part]) {\n        current = current[part];\n      } else {\n        // Si no encuentra alguna parte de la ruta, devuelve la clave original\n        console.warn(`Traducción no encontrada para la clave: ${key} (parte: ${part})`);\n        return key;\n      }\n    }\n    \n    // Si llegamos aquí, current debería contener el valor final\n    if (typeof current === 'string') {\n      return current;\n    }\n    \n    console.warn(`Valor no válido para la clave: ${key}`);\n    return key;\n  } catch (e) {\n    console.error(`Error en traducción para la clave: ${key}`, e);\n    return key;\n  }\n}\n\n// Función para cambiar el idioma\nexport function setLanguage(lang: string): string {\n  if (supportedLanguages.includes(lang)) {\n    if (typeof localStorage !== 'undefined') {\n      localStorage.setItem('userLanguage', lang);\n    }\n    return lang;\n  }\n  return defaultLang;\n}\n\n// Función mejorada para obtener el idioma actual\nexport function getCurrentLanguage(): string {\n  // En entorno de navegador\n  if (typeof window !== 'undefined' && typeof localStorage !== 'undefined') {\n    // 1. Primero comprobar parámetro URL (para debugging y forzar idioma)\n    try {\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlLang = urlParams.get('lang');\n      \n      if (urlLang && supportedLanguages.includes(urlLang)) {\n        console.log('[i18n] Usando idioma desde URL:', urlLang);\n        // Guardar en localStorage para mantener coherencia\n        localStorage.setItem('userLanguage', urlLang);\n        return urlLang;\n      }\n    } catch (e) {\n      console.error('[i18n] Error al leer parámetros URL:', e);\n    }\n    \n    // 2. Comprobar localStorage\n    const savedLang = localStorage.getItem('userLanguage');\n    if (savedLang && supportedLanguages.includes(savedLang)) {\n      console.log('[i18n] Usando idioma desde localStorage:', savedLang);\n      return savedLang;\n    }\n    \n    // 3. Comprobar preferencia del navegador\n    try {\n      const browserLang = navigator.language.split('-')[0];\n      if (supportedLanguages.includes(browserLang)) {\n        console.log('[i18n] Usando idioma del navegador:', browserLang);\n        localStorage.setItem('userLanguage', browserLang);\n        return browserLang;\n      }\n    } catch (e) {\n      console.error('[i18n] Error al detectar idioma del navegador:', e);\n    }\n  }\n  \n  // Si no se puede determinar o en SSR, usar idioma por defecto\n  console.log('[i18n] Usando idioma por defecto:', defaultLang);\n  return defaultLang;\n}\n","---\n// Importamos las funciones de idioma que creamos\nimport { getCurrentLanguage, setLanguage, supportedLanguages } from '../i18n/config';\n---\n\n<div class=\"language-switcher\">\n  <select\n    id=\"language-selector\"\n    class=\"bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 text-gray-800 dark:text-white rounded py-1 px-2 text-sm\"\n  >\n    <option value=\"es\" selected={getCurrentLanguage() === 'es'}>Español</option>\n    <option value=\"ca\" selected={getCurrentLanguage() === 'ca'}>Català</option>\n  </select>\n  <div id=\"current-lang-indicator\" class=\"hidden text-xs mt-1 text-white p-1 rounded bg-green-600\">\n    Idioma: {getCurrentLanguage()}\n  </div>\n</div>\n\n<script>\n  // Importar las utilidades de acceso seguro al DOM\n  import { safeGetElement, onDOMReady } from '../utils/dom-safe-access';\n\n  // Script mejorado para manejar el cambio de idioma usando acceso seguro al DOM\n  onDOMReady(() => {\n    // Usar acceso seguro al DOM\n    const selector = safeGetElement('#language-selector');\n    const indicator = safeGetElement('#current-lang-indicator');\n    \n    if (selector) {\n      // Establecer el valor inicial desde localStorage\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      selector.value = currentLang;\n      \n      console.log('[LanguageSwitcher] Idioma detectado:', currentLang);\n      \n      // Mostrar el indicador en modo desarrollo\n      if (indicator) {\n        indicator.textContent = `Idioma actual: ${currentLang}`;\n        // Descomentar para debugging\n        // indicator.classList.remove('hidden');\n      }\n      \n      // Añadir un parámetro URL para forzar el idioma (para debugging)\n      const url = new URL(window.location.href);\n      url.searchParams.set('lang', currentLang);\n      \n      // Escuchar cambios en el selector\n      selector.addEventListener('change', () => {\n        const newLang = selector.value;\n        console.log('[LanguageSwitcher] Cambiando idioma a:', newLang);\n        \n        // Guardar en localStorage\n        localStorage.setItem('userLanguage', newLang);\n        \n        // Indicar que estamos cambiando de idioma para que otras partes de la aplicación lo detecten\n        localStorage.setItem('languageChanging', 'true');\n        \n        // Añadir parámetros a la URL para forzar la recarga completa\n        const redirectUrl = new URL(window.location.href);\n        redirectUrl.searchParams.set('lang', newLang);\n        redirectUrl.searchParams.set('t', Date.now()); // Añadir timestamp para evitar caché\n        \n        // Recargar para aplicar el nuevo idioma\n        console.log('[LanguageSwitcher] Forzando recarga completa con idioma:', newLang);\n        window.location.href = redirectUrl.toString();\n      });\n      \n      // Verificar si hay un parámetro de idioma en la URL\n      const urlParams = new URLSearchParams(window.location.search);\n      const urlLang = urlParams.get('lang');\n      \n      if (urlLang && urlLang !== currentLang && (urlLang === 'es' || urlLang === 'ca')) {\n        console.log('[LanguageSwitcher] Detectado idioma en URL:', urlLang);\n        localStorage.setItem('userLanguage', urlLang);\n        \n        // Recargar sin el parámetro lang para no entrar en bucle\n        const cleanUrl = new URL(window.location.href);\n        cleanUrl.searchParams.delete('lang');\n        window.location.href = cleanUrl.toString();\n      }\n    } else {\n      // Mensaje informativo en lugar de error (podría ser normal que no esté en todas las páginas)\n      console.info('[LanguageSwitcher] Selector de idioma no disponible en esta página');\n    }\n  });\n</script>\n\n<style>\n  .language-switcher {\n    display: inline-block;\n    margin-left: 1rem;\n  }\n</style>\n","---\n// Importar función de traducción\nimport { t } from '../../i18n/config';\n\n// Props que pueden ser pasados al componente\ninterface Props {\n  userRole?: string;\n  currentPath?: string;\n  title?: string;\n}\n\n// Valores por defecto\nconst { \n  userRole = \"administrador\",\n  currentPath = \"/\",\n  title = \"Masclet Imperi\"\n} = Astro.props;\n\n// Importar componentes\nimport { LogoutButton } from '../auth/LogoutButton';\nimport LanguageSwitcher from '../LanguageSwitcher.astro';\nimport { getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual en el servidor para la renderización inicial\nconst serverLang = getCurrentLanguage();\n\n// Traducciones integradas ampliadas\nconst translations = {\n  es: {\n    dashboard: \"Dashboard Masclet Imperi\",\n    animals: \"Animales\",\n    exploitations: \"Explotaciones\",\n    users: \"Usuarios\",\n    imports: \"Importación\",\n    backup: \"Copias de seguridad\",\n    navigation: \"NAVEGACIÓN\",\n    admin: \"ADMINISTRACIÓN\",\n    management_system: \"Sistema de Gestión Ganadera\",\n    profile: \"Perfil\",\n    logout: \"Cerrar sesión\",\n    listings: \"Listados Personalizados\",\n    listings_detail: \"Detalles del Listado\",\n    listings_edit: \"Editar Listado\",\n    listings_new: \"Nuevo Listado\"\n  },\n  ca: {\n    dashboard: \"Tauler de control Masclet Imperi\",\n    animals: \"Animals\",\n    exploitations: \"Explotacions\",\n    users: \"Usuaris\",\n    imports: \"Importació\",\n    backup: \"Còpies de seguretat\",\n    navigation: \"NAVEGACIÓ\",\n    admin: \"ADMINISTRACIÓ\",\n    management_system: \"Sistema de Gestió Ramadera\",\n    profile: \"Perfil\",\n    logout: \"Tancar sessió\",\n    listings: \"Llistats Personalitzats\",\n    listings_detail: \"Detalls del Llistat\",\n    listings_edit: \"Editar Llistat\",\n    listings_new: \"Nou Llistat\"\n  }\n};\n\n// Menú de navegación según rol\nconst menuItems = [\n  { name: \"Dashboard\", url: \"/\", icon: \"📊\", roles: [\"administrador\", \"gerente\", \"editor\", \"usuario\"] },\n  { name: \"Explotaciones\", url: \"/explotaciones-react\", icon: \"🏡\", roles: [\"administrador\", \"gerente\", \"editor\", \"usuario\"] },\n  { name: \"Animales\", url: \"/animals\", icon: \"🐄\", roles: [\"administrador\", \"gerente\", \"editor\", \"usuario\"] },\n  { name: \"Usuarios\", url: \"/users\", icon: \"👥\", roles: [\"administrador\", \"gerente\"] },\n  { name: \"Importación\", url: \"/imports\", icon: \"📥\", roles: [\"administrador\"] },\n  { name: \"Backup\", url: \"/backup\", icon: \"💾\", roles: [\"administrador\"] },\n];\n\n// Mostrar todos los elementos del menú independientemente del rol para el administrador\nconst filteredMenu = menuItems; \n\n// Función para determinar si un elemento está activo\nconst isActive = (itemUrl: string) => {\n  if (itemUrl === '/' && currentPath === '/') return true;\n  if (itemUrl !== '/' && currentPath.startsWith(itemUrl)) return true;\n  return false;\n};\n---\n\n<header class=\"bg-primary text-white shadow-md relative z-30\">\n  <div class=\"container mx-auto px-3 py-3 flex justify-between items-center\">\n    <!-- Título de la página actual -->\n    <div class=\"font-bold text-xl\" id=\"page-title\" data-current-path={currentPath}>\n      {(() => {\n        if (currentPath === '/animals/[id]') {\n          return t('animal_file');\n        } else if (currentPath === '/' || currentPath === '/dashboard') {\n          return serverLang === 'ca' ? translations.ca.dashboard : translations.es.dashboard;\n        } else if (currentPath === '/listados') {\n          return serverLang === 'ca' ? translations.ca.listings : translations.es.listings;\n        } else if (currentPath === '/listados/[id]') {\n          return serverLang === 'ca' ? translations.ca.listings_detail : translations.es.listings_detail;\n        } else if (currentPath === '/listados/edit/[id]') {\n          return serverLang === 'ca' ? translations.ca.listings_edit : translations.es.listings_edit;\n        } else if (currentPath === '/listados/new') {\n          return serverLang === 'ca' ? translations.ca.listings_new : translations.es.listings_new;\n        } else {\n          return title || 'Masclet Imperi';\n        }\n      })()}\n    </div>\n\n    <!-- Menú de navegación (visible solo en escritorio) -->\n    <nav class=\"hidden md:flex space-x-2 lg:space-x-4\">\n      {filteredMenu.map(item => (\n        <a \n          href={item.url} \n          class:list={[\n            \"flex items-center transition-colors duration-150 px-2 py-2 rounded-md text-sm font-medium\",\n            {\n              \"bg-primary-dark text-white\": isActive(item.url),\n              \"hover:bg-primary/20\": !isActive(item.url)\n            }\n          ]}\n        >\n          <span class=\"text-xl mr-1\">{item.icon}</span>\n          {item.name}\n        </a>\n      ))}\n    </nav>\n\n    <!-- Controles de la derecha -->\n    <div class=\"flex items-center\">\n      <!-- Botón de menú móvil -->\n      <button id=\"mobile-menu-button\" class=\"text-white text-2xl p-2 mr-2 md:hidden\">\n        ☰\n      </button>\n      \n      <!-- Controles siempre visibles (incluso en móvil) -->\n      <div class=\"flex items-center space-x-2 sm:space-x-4\">\n        <!-- Selector de idiomas -->\n        <LanguageSwitcher />\n        \n        <!-- Toggle de tema - Visible en todos los tamaños -->\n        <button id=\"theme-toggle\" class=\"text-white hover:text-gray-200 transition-colors p-2 rounded-full hover:bg-primary/20\">\n          <span id=\"theme-toggle-light-icon\" class=\"hidden\">🌞</span>\n          <span id=\"theme-toggle-dark-icon\">🌙</span>\n        </button>\n        \n        <!-- Notificaciones - Visible en todos los tamaños -->\n        <button id=\"notifications-button\" class=\"relative text-white hover:text-gray-200 transition-colors p-2 rounded-full hover:bg-primary/20\" title={t('notification.system_alerts')}>\n          <span class=\"text-xl\">🔔</span>\n          <span class=\"absolute top-0 right-0 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center hidden\">0</span>\n        </button>\n        \n        <!-- Menú de notificaciones (oculto por defecto) -->\n        <div id=\"notifications-menu\" class=\"absolute right-24 mt-12 w-80 bg-white dark:bg-gray-800 rounded-md shadow-lg overflow-hidden z-50 hidden\">\n          <div class=\"p-3 border-b border-gray-100 dark:border-gray-700 flex justify-between items-center\">\n            <span class=\"font-bold text-gray-800 dark:text-white\">{t('notification.system_alerts')}</span>\n            <button id=\"mark-all-read\" class=\"text-xs text-primary dark:text-primary-light hover:underline\">\n              {t('notification.mark_all_read')}\n            </button>\n          </div>\n          <div class=\"max-h-80 overflow-y-auto\">\n            <!-- Las notificaciones se cargarán dinámicamente desde el backend -->\n          </div>\n          <div class=\"p-2 border-t border-gray-100 dark:border-gray-700 text-center\">\n            <a href=\"/notifications\" class=\"text-sm text-primary dark:text-primary-light hover:underline\">\n              {t('notification.view_all')}\n            </a>\n          </div>\n        </div>\n        \n        <!-- Indicador de rol - Visible en tablets y escritorio -->\n        <span class=\"hidden sm:inline-block text-sm capitalize bg-primary-dark/30 px-3 py-1 rounded-full\" id=\"user-role-display\">\n          {userRole}\n        </span>\n        \n        <!-- Script para actualizar el rol desde localStorage (Versión optimizada) -->\n        <script>\n          // Variable para evitar mensajes de log repetitivos\n          let lastRoleLoggedTime = 0;\n          let lastRoleValue = '';\n          \n          // Función para actualizar el rol del usuario en la barra de navegación\n          function actualizarRolUsuario(forzarLimpieza = false, logLevel = 'silent') {\n            const rolSpan = document.getElementById('user-role-display');\n            if (!rolSpan) {\n              return;\n            }\n            \n            // Obtener token JWT actual\n            const token = localStorage.getItem('token');\n            \n            // Si se solicita limpieza forzada o no hay token, mostrar placeholder\n            if (forzarLimpieza || !token) {\n              rolSpan.textContent = '---';\n              return;\n            }\n            \n            // Evitar procesar múltiples veces si el rol no ha cambiado\n            if (rolSpan.textContent && rolSpan.dataset.processed === 'true') {\n              // Solo ejecutar verificaciones ocasionales después de la carga inicial\n              return;\n            }\n            \n            // Intentar decodificar el token JWT para obtener información real y actualizada\n            try {\n              // Función para decodificar JWT sin librerías externas\n              function parseJwt(token) {\n                const base64Url = token.split('.')[1];\n                const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n                const jsonPayload = decodeURIComponent(\n                  atob(base64).split('').map(c => {\n                    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n                  }).join('')\n                );\n                return JSON.parse(jsonPayload);\n              }\n              \n              // Obtener datos reales del token\n              const decoded = parseJwt(token);\n              const tokenUsername = decoded.sub || '';\n              const tokenRole = decoded.role || '';\n              \n              // Reducir logs (solo si ha cambiado o es un log forzado)\n              if (logLevel === 'verbose' || (lastRoleValue !== tokenRole && Date.now() - lastRoleLoggedTime > 5000)) {\n                lastRoleLoggedTime = Date.now();\n                lastRoleValue = tokenRole;\n              }\n              \n              // Prioridad 1: Usar siempre los datos del token JWT (fuente única de verdad)\n              if (tokenRole) {\n                rolSpan.textContent = tokenRole;\n                localStorage.setItem('userRole', tokenRole);\n                localStorage.setItem('username', tokenUsername);\n                rolSpan.dataset.processed = 'true';\n                return;\n              }\n            } catch (e) {\n              // Error silencioso para evitar spam en consola\n            }\n            \n            // Si fallamos al decodificar, intentar con localStorage como fallback\n            const username = localStorage.getItem('username');\n            const storedRole = localStorage.getItem('userRole');\n            const storedUser = localStorage.getItem('user');\n            \n            // Verificar si es Ramon\n            const isRamon = username === 'Ramon' || storedRole === 'Ramon';\n            if (isRamon) {\n              rolSpan.textContent = 'Ramon';\n              localStorage.setItem('userRole', 'Ramon');\n              rolSpan.dataset.processed = 'true';\n              return;\n            }\n            \n            // Último recurso: extraer de user almacenado\n            if (storedRole) {\n              rolSpan.textContent = storedRole;\n              rolSpan.dataset.processed = 'true';\n            } else if (storedUser) {\n              try {\n                const userData = JSON.parse(storedUser);\n                rolSpan.textContent = userData.role || 'usuario';\n                rolSpan.dataset.processed = 'true';\n              } catch (e) {\n                rolSpan.textContent = 'usuario';\n              }\n            } else {\n              rolSpan.textContent = 'usuario';\n            }\n          }\n          \n          // Al cargar la página - una sola vez es suficiente\n          document.addEventListener('DOMContentLoaded', () => {\n            actualizarRolUsuario(false, 'verbose');\n          });\n          \n          // Verificar cambios en localStorage\n          window.addEventListener('storage', (event) => {\n            if (event.key === 'token' || event.key === 'user' || event.key === 'userRole' || event.key === 'username') {\n              actualizarRolUsuario(false, 'verbose');\n            }\n          });\n          \n          // IMPORTANTE: Detectar si estamos en la página justo después del login\n          const isFromLogin = document.referrer.includes('/login');\n          if (isFromLogin) {\n            // Solo actualizar una vez si venimos del login\n            actualizarRolUsuario(false, 'verbose');\n            // Y una actualización adicional por seguridad tras un breve retraso\n            setTimeout(() => actualizarRolUsuario(false, 'verbose'), 500);\n          }\n          \n          // Actualizar una única vez al hacer clic\n          let clickTimer;\n          document.addEventListener('click', () => {\n            clearTimeout(clickTimer);\n            clickTimer = setTimeout(() => actualizarRolUsuario(), 100);\n          });\n        </script>\n        \n        <!-- Perfil de usuario - Visible en todos los tamaños -->\n        <div class=\"relative group\">\n          <button id=\"profile-button\" class=\"flex items-center space-x-2 text-white hover:text-gray-200 transition-colors p-2 rounded-full hover:bg-primary/20\">\n            <div class=\"w-8 h-8 bg-gray-200 rounded-full overflow-hidden flex items-center justify-center text-primary\">\n              <span>A</span>\n            </div>\n          </button>\n          \n          <!-- Menú desplegable de perfil (escritorio) -->\n          <div id=\"profile-dropdown\" class=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-md shadow-lg overflow-hidden z-50 hidden md:block opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300\">\n            <div class=\"py-2\">\n              <a href=\"/profile\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                Mi Perfil\n              </a>\n              <a href=\"/settings\" class=\"block px-4 py-2 text-sm text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                Configuración\n              </a>\n              <div class=\"border-t border-gray-100 dark:border-gray-700 my-1\"></div>\n              <a href=\"/logout\" class=\"block px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\">\n                Cerrar Sesión\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n\n<!-- Menú móvil (oculto por defecto) -->\n<div id=\"mobile-menu\" class=\"fixed inset-0 bg-black bg-opacity-50 z-40 hidden\">\n  <div class=\"bg-white dark:bg-gray-800 w-3/4 max-w-xs h-full overflow-y-auto shadow-xl transform transition-transform duration-300 translate-x-0\">\n    <!-- Cabecera del menú móvil -->\n    <div class=\"p-4 border-b border-gray-100 dark:border-gray-700 flex justify-between items-center\">\n      <span class=\"font-bold text-lg text-gray-800 dark:text-white\">Menú</span>\n      <button id=\"close-mobile-menu\" class=\"text-gray-500 hover:text-gray-700 dark:text-gray-300 dark:hover:text-white\">\n        ✕\n      </button>\n    </div>\n    \n    <!-- Información de usuario en móvil -->\n    <div class=\"p-4 border-b border-gray-100 dark:border-gray-700\">\n      <div class=\"flex items-center space-x-3\">\n        <div class=\"w-10 h-10 bg-gray-200 rounded-full overflow-hidden flex items-center justify-center text-primary text-lg\">\n          <span>A</span>\n        </div>\n        <div>\n          <p class=\"font-medium text-gray-800 dark:text-white\">Admin Usuario</p>\n          <p class=\"text-sm text-gray-500 dark:text-gray-400 capitalize\">{userRole}</p>\n        </div>\n      </div>\n      <div class=\"mt-3 flex space-x-2\">\n        <a href=\"/profile\" class=\"flex-1 text-center text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600\">\n          Mi Perfil\n        </a>\n        <a href=\"/settings\" class=\"flex-1 text-center text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-2 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600\">\n          Configuración\n        </a>\n      </div>\n    </div>\n    \n    <!-- Navegación en móvil -->\n    <nav class=\"p-4\">\n      {filteredMenu.map(item => (\n        <a \n          href={item.url} \n          class:list={[\n            \"flex items-center py-3 px-4 text-gray-700 dark:text-gray-200 rounded-md mb-1\",\n            {\n              \"bg-primary/10 text-primary dark:bg-primary-dark/20 dark:text-primary-light\": isActive(item.url),\n              \"hover:bg-gray-100 dark:hover:bg-gray-700\": !isActive(item.url)\n            }\n          ]}\n        >\n          <span class=\"text-xl mr-3\">{item.icon}</span>\n          {item.name}\n        </a>\n      ))}\n    </nav>\n    \n    <!-- Opciones adicionales en móvil -->\n    <div class=\"p-4 border-t border-gray-100 dark:border-gray-700\">\n      <!-- Selector de idioma en móvil -->\n      <div class=\"flex justify-between items-center mb-4\">\n        <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Idioma</span>\n        <select\n          id=\"mobile-language-selector\"\n          class=\"bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 text-gray-800 dark:text-white rounded py-1 px-2 text-sm\"\n        >\n          <option value=\"es\">Español</option>\n          <option value=\"ca\">Català</option>\n        </select>\n      </div>\n      \n      <!-- Modo oscuro -->\n      <div class=\"flex justify-between items-center mb-4\">\n        <span class=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Modo oscuro</span>\n        <button id=\"mobile-theme-toggle\" class=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\">\n          <span id=\"mobile-theme-toggle-light-icon\" class=\"hidden\">🌞</span>\n          <span id=\"mobile-theme-toggle-dark-icon\">🌙</span>\n        </button>\n      </div>\n      <a href=\"/logout\" class=\"block w-full text-center py-2 px-4 bg-red-100 dark:bg-red-900/20 text-red-600 dark:text-red-400 rounded-md hover:bg-red-200 dark:hover:bg-red-800/30 text-sm\">\n        Cerrar Sesión\n      </a>\n    </div>\n  </div>\n</div>\n\n<script>\n  // Script para manejar el menú móvil y las traducciones\n  document.addEventListener('DOMContentLoaded', () => {\n    // Traducciones para el cliente (igual que en el servidor)\n    const translations = {\n      es: {\n        dashboard: \"Dashboard\",\n        animals: \"Animales\",\n        exploitations: \"Explotaciones\",\n        users: \"Usuarios\",\n        imports: \"Importación\",\n        backup: \"Copias de seguridad\",\n        navigation: \"NAVEGACIÓN\",\n        admin: \"ADMINISTRACIÓN\",\n        management_system: \"Sistema de Gestión Ganadera\",\n        profile: \"Perfil\",\n        logout: \"Cerrar sesión\",\n        animal_file: \"Ficha de Animal\"\n      },\n      ca: {\n        dashboard: \"Tauler de control\",\n        animals: \"Animals\",\n        exploitations: \"Explotacions\",\n        users: \"Usuaris\",\n        imports: \"Importació\",\n        backup: \"Còpies de seguretat\",\n        navigation: \"NAVEGACIÓ\",\n        admin: \"ADMINISTRACIÓ\",\n        management_system: \"Sistema de Gestió Ramadera\",\n        profile: \"Perfil\",\n        logout: \"Tancar sessió\",\n        animal_file: \"Fitxa d'Animal\"\n      }\n    };\n\n    // Función para obtener traducciones\n    function t(key, lang) {\n      return translations[lang]?.[key] || key;\n    }\n\n    // Función para traducir la navegación\n    function translateNavigation() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      \n      // Traducir título de la página en el Navbar\n      const navbarTitle = document.getElementById('page-title');\n      \n      // Traducir títulos según la página actual\n      if (navbarTitle) {\n        // Para página de detalle de animal\n        if (window.location.pathname.includes('/animals/')) {\n          navbarTitle.textContent = t('animal_file', currentLang);\n        } \n        // Para página de dashboard\n        else if (window.location.pathname === '/' || window.location.pathname === '/dashboard') {\n          navbarTitle.textContent = currentLang === 'ca' ? \n            \"Tauler de control Masclet Imperi\" : \n            \"Dashboard Masclet Imperi\";\n        }\n        // Para página de explotaciones\n        else if (window.location.pathname.includes('/explotaciones')) {\n          navbarTitle.textContent = currentLang === 'ca' ? \n            \"Explotacions\" : \n            \"Explotaciones\";\n        }\n        // Para página de importación\n        else if (window.location.pathname.includes('/imports')) {\n          navbarTitle.textContent = currentLang === 'ca' ? \n            \"Importació de Dades\" : \n            \"Importación de Datos\";\n        }\n        // Para página de backup\n        else if (window.location.pathname.includes('/backup')) {\n          navbarTitle.textContent = currentLang === 'ca' ? \n            \"Còpies de seguretat del Sistema\" : \n            \"Backup del Sistema\";\n        }\n      }\n      \n      // Verificar si hay elementos ocultos y restaurarlos\n      document.querySelectorAll('nav a').forEach(link => {\n        // Eliminar cualquier estilo de display:none que pueda haberse aplicado\n        if (link.style.display === 'none') {\n          link.style.display = '';\n        }\n        \n        // Eliminar el atributo data-roles si existe\n        if (link.hasAttribute('data-roles')) {\n          link.removeAttribute('data-roles');\n        }\n        \n        const text = link.textContent.trim();\n        // Extraer el emoji si existe\n        const emoji = text.match(/^([\\u{1F300}-\\u{1F5FF}\\u{1F900}-\\u{1F9FF}\\u{1F600}-\\u{1F64F}\\u{1F680}-\\u{1F6FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}\\u{1F1E6}-\\u{1F1FF}\\u{1F191}-\\u{1F251}\\u{1F004}\\u{1F0CF}\\u{1F170}-\\u{1F171}\\u{1F17E}-\\u{1F17F}\\u{1F18E}\\u{3030}\\u{2B50}\\u{2B55}\\u{2934}-\\u{2935}\\u{2B05}-\\u{2B07}\\u{2B1B}-\\u{2B1C}\\u{3297}\\u{3299}\\u{303D}\\u{00A9}\\u{00AE}\\u{2122}\\u{23F3}\\u{24C2}\\u{23E9}-\\u{23EF}\\u{25B6}\\u{23F8}-\\u{23FA}]+)/u);\n        const emojiPrefix = emoji ? emoji[0] + ' ' : '';\n        \n        // Mapear los nombres del menú a claves de traducción\n        let translationKey = '';\n        if (text.includes('Dashboard')) translationKey = 'dashboard';\n        else if (text.includes('Animales')) translationKey = 'animals';\n        else if (text.includes('Explotaciones')) translationKey = 'exploitations';\n        else if (text.includes('Usuarios')) translationKey = 'users';\n        else if (text.includes('Importación')) translationKey = 'imports';\n        else if (text.includes('Backup')) translationKey = 'backup';\n        \n        if (translationKey) {\n          link.innerHTML = emojiPrefix + t(translationKey, currentLang);\n        }\n      });\n      \n      // Traducir el título de la página en la barra superior\n      const pageTitle = document.querySelector('.font-bold.text-xl');\n      if (pageTitle && pageTitle.textContent.includes('Gestión de Animales')) {\n        pageTitle.textContent = currentLang === 'ca' ? 'Gestió d\\'Animals' : 'Gestión de Animales';\n      }\n    }\n    \n    // Ejecutar traducción inicial\n    translateNavigation();\n    \n    // Retraducir cuando cambie el idioma\n    window.addEventListener('storage', function(e) {\n      if (e.key === 'userLanguage') {\n        translateNavigation();\n      }\n    });\n    \n    // Elementos de UI del menú móvil\n    const mobileMenuButton = document.getElementById('mobile-menu-button');\n    const closeMobileMenuButton = document.getElementById('close-mobile-menu');\n    const mobileMenu = document.getElementById('mobile-menu');\n    const profileButton = document.getElementById('profile-button');\n    const notificationsButton = document.getElementById('notifications-button');\n    \n    // Referencias a los selectores de idioma\n    const languageSelector = document.getElementById('language-selector');\n    const mobileLanguageSelector = document.getElementById('mobile-language-selector');\n    const notificationsMenu = document.getElementById('notifications-menu');\n    \n    // Función para abrir el menú móvil\n    const openMobileMenu = () => {\n      if (mobileMenu) {\n        mobileMenu.classList.remove('hidden');\n        document.body.classList.add('overflow-hidden');\n      }\n    };\n    \n    // Función para cerrar el menú móvil\n    const closeMobileMenu = () => {\n      if (mobileMenu) {\n        mobileMenu.classList.add('hidden');\n        document.body.classList.remove('overflow-hidden');\n      }\n    };\n    \n    // Evento para abrir el menú móvil\n    if (mobileMenuButton) {\n      mobileMenuButton.addEventListener('click', openMobileMenu);\n    }\n    \n    // Evento para cerrar el menú móvil\n    if (closeMobileMenuButton) {\n      closeMobileMenuButton.addEventListener('click', closeMobileMenu);\n    }\n    \n    // Cerrar menú móvil al hacer clic fuera\n    if (mobileMenu) {\n      mobileMenu.addEventListener('click', (e) => {\n        if (e.target === mobileMenu) {\n          closeMobileMenu();\n        }\n      });\n    }\n    \n    // Manejar notificaciones\n    if (notificationsButton && notificationsMenu) {\n      notificationsButton.addEventListener('click', (e) => {\n        e.stopPropagation();\n        notificationsMenu.classList.toggle('hidden');\n      });\n      \n      // Cerrar menú de notificaciones al hacer clic fuera\n      document.addEventListener('click', (e) => {\n        if (!notificationsButton.contains(e.target) && !notificationsMenu.contains(e.target)) {\n          notificationsMenu.classList.add('hidden');\n        }\n      });\n    }\n    \n    // Toggle de tema\n    const handleThemeToggle = () => {\n      const isDark = document.documentElement.classList.contains('dark');\n      const lightIcon = document.getElementById('theme-toggle-light-icon');\n      const darkIcon = document.getElementById('theme-toggle-dark-icon');\n      const mobileLightIcon = document.getElementById('mobile-theme-toggle-light-icon');\n      const mobileDarkIcon = document.getElementById('mobile-theme-toggle-dark-icon');\n      \n      if (isDark) {\n        document.documentElement.classList.remove('dark');\n        localStorage.setItem('theme', 'light');\n        if (lightIcon) lightIcon.classList.remove('hidden');\n        if (darkIcon) darkIcon.classList.add('hidden');\n        if (mobileLightIcon) mobileLightIcon.classList.remove('hidden');\n        if (mobileDarkIcon) mobileDarkIcon.classList.add('hidden');\n      } else {\n        document.documentElement.classList.add('dark');\n        localStorage.setItem('theme', 'dark');\n        if (lightIcon) lightIcon.classList.add('hidden');\n        if (darkIcon) darkIcon.classList.remove('hidden');\n        if (mobileLightIcon) mobileLightIcon.classList.add('hidden');\n        if (mobileDarkIcon) mobileDarkIcon.classList.remove('hidden');\n      }\n    };\n    \n    // Aplicar tema guardado\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const isDark = savedTheme === 'dark' || (!savedTheme && prefersDark);\n    \n    if (isDark) {\n      document.documentElement.classList.add('dark');\n      const lightIcon = document.getElementById('theme-toggle-light-icon');\n      const darkIcon = document.getElementById('theme-toggle-dark-icon');\n      const mobileLightIcon = document.getElementById('mobile-theme-toggle-light-icon');\n      const mobileDarkIcon = document.getElementById('mobile-theme-toggle-dark-icon');\n      \n      if (lightIcon) lightIcon.classList.add('hidden');\n      if (darkIcon) darkIcon.classList.remove('hidden');\n      if (mobileLightIcon) mobileLightIcon.classList.add('hidden');\n      if (mobileDarkIcon) mobileDarkIcon.classList.remove('hidden');\n    } else {\n      document.documentElement.classList.remove('dark');\n      const lightIcon = document.getElementById('theme-toggle-light-icon');\n      const darkIcon = document.getElementById('theme-toggle-dark-icon');\n      const mobileLightIcon = document.getElementById('mobile-theme-toggle-light-icon');\n      const mobileDarkIcon = document.getElementById('mobile-theme-toggle-dark-icon');\n      \n      if (lightIcon) lightIcon.classList.remove('hidden');\n      if (darkIcon) darkIcon.classList.add('hidden');\n      if (mobileLightIcon) mobileLightIcon.classList.remove('hidden');\n      if (mobileDarkIcon) mobileDarkIcon.classList.add('hidden');\n    }\n    \n    // Eventos de toggle de tema\n    const themeToggle = document.getElementById('theme-toggle');\n    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');\n    \n    if (themeToggle) {\n      themeToggle.addEventListener('click', handleThemeToggle);\n    }\n    \n    if (mobileThemeToggle) {\n      mobileThemeToggle.addEventListener('click', handleThemeToggle);\n    }\n    \n    // Configurar selectores de idioma\n    function setupLanguageSelectors() {\n      // Obtener el idioma guardado en localStorage\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      \n      // Configurar selector de escritorio\n      if (languageSelector) {\n        languageSelector.value = currentLang;\n        \n        languageSelector.addEventListener('change', () => {\n          const newLang = languageSelector.value;\n          localStorage.setItem('userLanguage', newLang);\n          window.location.reload();\n        });\n      }\n      \n      // Configurar selector móvil\n      if (mobileLanguageSelector) {\n        mobileLanguageSelector.value = currentLang;\n        \n        mobileLanguageSelector.addEventListener('change', () => {\n          const newLang = mobileLanguageSelector.value;\n          localStorage.setItem('userLanguage', newLang);\n          window.location.reload();\n        });\n      }\n    }\n    \n    // Iniciar configuración de idioma\n    setupLanguageSelectors();\n  });\n</script>","/**\n * Servicio de autenticación simplificado para Masclet Imperi\n */\n\n// URL base para endpoints de autenticación (ajustar según API real)\nconst AUTH_URL = '/api/auth';\n\n// Rol por defecto para desarrollo\nconst DEFAULT_ROLE = 'admin';\n\n// Comprobar si estamos en el navegador\nconst isBrowser = typeof window !== 'undefined';\n\n/**\n * Servicio de autenticación\n */\nconst authService = {\n  /**\n   * Comprobar si el usuario está autenticado\n   * @returns {boolean} Estado de autenticación\n   */\n  isAuthenticated() {\n    return !!this.getToken();\n  },\n\n  /**\n   * Obtener token de autenticación\n   * @returns {string|null} Token JWT o null si no está autenticado\n   */\n  getToken() {\n    // Solo acceder a localStorage en el navegador\n    if (isBrowser) {\n      try {\n        return localStorage.getItem('token');\n      } catch (e) {\n        console.warn('Error accediendo a localStorage:', e);\n      }\n    }\n    // Valor predeterminado para desarrollo, tanto en servidor como en cliente\n    return 'token-desarrollo-12345';\n  },\n\n  /**\n   * Iniciar sesión\n   * @param {Object} credentials Credenciales del usuario\n   * @returns {Promise<Object>} Datos del usuario autenticado\n   */\n  async login(credentials) {\n    // Simulación de login para desarrollo\n    if (credentials.username === 'admin' && credentials.password === 'admin123') {\n      const user = {\n        id: 1,\n        username: 'admin',\n        role: 'administrador',\n        fullName: 'Administrador'\n      };\n      const token = 'token-simulado-admin-12345';\n      \n      this.saveToken(token);\n      this.saveUser(user);\n      \n      return { user, token };\n    }\n    \n    // En producción, usar llamada real a la API\n    // const response = await fetch(`${AUTH_URL}/login`, {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(credentials)\n    // });\n    // const data = await response.json();\n    // \n    // if (!response.ok) {\n    //   throw new Error(data.detail || 'Error de autenticación');\n    // }\n    // \n    // this.saveToken(data.token);\n    // this.saveUser(data.user);\n    // \n    // return data;\n    \n    throw new Error('Credenciales inválidas');\n  },\n  \n  /**\n   * Cerrar sesión\n   */\n  logout() {\n    this.removeToken();\n    this.removeUser();\n  },\n  \n  /**\n   * Registrar un nuevo usuario\n   * @param {Object} userData Datos del nuevo usuario\n   * @returns {Promise<Object>} Datos del usuario creado\n   */\n  async register(userData) {\n    // En producción, usar llamada real a la API\n    // const response = await fetch(`${AUTH_URL}/register`, {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(userData)\n    // });\n    // return await response.json();\n    \n    // Simulación para desarrollo\n    return {\n      id: Date.now(),\n      ...userData,\n      created_at: new Date().toISOString()\n    };\n  },\n  \n  /**\n   * Actualizar datos de un usuario\n   * @param {number} userId ID del usuario\n   * @param {Object} userData Nuevos datos\n   * @returns {Promise<Object>} Datos actualizados\n   */\n  async updateUser(userId, userData) {\n    // En producción, usar llamada real a la API\n    // const response = await fetch(`${AUTH_URL}/users/${userId}`, {\n    //   method: 'PUT',\n    //   headers: { \n    //     'Content-Type': 'application/json',\n    //     ...this.getAuthHeaders()\n    //   },\n    //   body: JSON.stringify(userData)\n    // });\n    // return await response.json();\n    \n    // Simulación para desarrollo\n    return {\n      id: userId,\n      ...userData,\n      updated_at: new Date().toISOString()\n    };\n  },\n  \n  /**\n   * Obtener usuario almacenado en localStorage\n   * @returns {Object|null} Datos del usuario o null\n   */\n  getStoredUser() {\n    if (isBrowser) {\n      try {\n        const userStr = localStorage.getItem('user');\n        return userStr ? JSON.parse(userStr) : null;\n      } catch (e) {\n        console.warn('Error obteniendo usuario de localStorage:', e);\n        return null;\n      }\n    }\n    return null;\n  },\n  \n  /**\n   * Guardar datos de usuario en localStorage\n   * @param {Object} user Datos del usuario\n   */\n  saveUser(user) {\n    if (isBrowser && user) {\n      try {\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('userRole', user.role || 'usuario');\n      } catch (e) {\n        console.warn('Error guardando usuario en localStorage:', e);\n      }\n    }\n  },\n  \n  /**\n   * Eliminar datos de usuario de localStorage\n   */\n  removeUser() {\n    if (isBrowser) {\n      try {\n        localStorage.removeItem('user');\n        localStorage.removeItem('userRole');\n      } catch (e) {\n        console.warn('Error eliminando usuario de localStorage:', e);\n      }\n    }\n  },\n  \n  /**\n   * Obtener usuario actual (desde localStorage o API)\n   * @returns {Promise<Object|null>} Datos del usuario o null\n   */\n  async getCurrentUser() {\n    const storedUser = this.getStoredUser();\n    if (storedUser) {\n      return storedUser;\n    }\n    \n    // En una aplicación real, verificaríamos con la API\n    // if (this.isAuthenticated()) {\n    //   try {\n    //     const response = await fetch(`${AUTH_URL}/me`, {\n    //       headers: this.getAuthHeaders()\n    //     });\n    //     if (response.ok) {\n    //       const userData = await response.json();\n    //       this.saveUser(userData);\n    //       return userData;\n    //     }\n    //   } catch (e) {\n    //     console.error('Error obteniendo usuario actual:', e);\n    //   }\n    // }\n    \n    return null;\n  },\n\n  /**\n   * Guardar token en localStorage\n   * @param {string} token Token JWT\n   */\n  saveToken(token) {\n    // Solo acceder a localStorage en el navegador\n    if (isBrowser) {\n      try {\n        localStorage.setItem('token', token);\n      } catch (e) {\n        console.warn('Error guardando token:', e);\n      }\n    }\n  },\n\n  /**\n   * Eliminar token (cerrar sesión)\n   */\n  removeToken() {\n    // Solo acceder a localStorage en el navegador\n    if (isBrowser) {\n      try {\n        localStorage.removeItem('token');\n      } catch (e) {\n        console.warn('Error eliminando de localStorage:', e);\n      }\n    }\n  },\n\n  /**\n   * Verificar y restaurar sesión cuando sea necesario\n   * @returns {Promise<boolean>} Estado de autenticación\n   */\n  async ensureAuthenticated() {\n    // En desarrollo, simular siempre autenticación exitosa\n    if (!this.getToken()) {\n      this.saveToken('token-desarrollo-12345');\n      console.info('Token de desarrollo generado automáticamente');\n    }\n    return true;\n  },\n\n  /**\n   * Obtener encabezados de autenticación para peticiones API\n   * @returns {Object} Headers con token de autenticación\n   */\n  getAuthHeaders() {\n    const token = this.getToken() || 'token-desarrollo-12345';\n    return { 'Authorization': `Bearer ${token}` };\n  },\n  \n  /**\n   * Obtener el rol del usuario actual\n   * @returns {string} Rol del usuario (admin, user, etc.)\n   */\n  getCurrentUserRole() {\n    // Solo acceder a localStorage en el navegador\n    if (isBrowser) {\n      try {\n        // En un entorno real, esto podría decodificar el JWT para obtener el rol\n        // o hacer una solicitud al servidor para obtener el perfil del usuario\n        return localStorage.getItem('userRole') || DEFAULT_ROLE;\n      } catch (e) {\n        console.warn('Error al obtener rol de usuario:', e);\n      }\n    }\n    // Siempre devolver un valor por defecto para el servidor\n    return DEFAULT_ROLE;\n  }\n};\n\n// Auto-generar token para desarrollo si se usa directamente\nif (isBrowser) {\n  setTimeout(() => {\n    try {\n      if (!localStorage.getItem('token')) {\n        localStorage.setItem('token', 'token-desarrollo-12345');\n        console.info('Token de desarrollo generado automáticamente');\n      }\n      \n      if (!localStorage.getItem('userRole')) {\n        localStorage.setItem('userRole', DEFAULT_ROLE);\n        console.info('Rol de usuario por defecto establecido:', DEFAULT_ROLE);\n      }\n    } catch (e) {\n      console.warn('Error inicializando valores por defecto:', e);\n    }\n  }, 100);\n}\n\n// Exportar funciones individuales para compatibilidad con imports existentes\nexport const isAuthenticated = () => authService.isAuthenticated();\nexport const login = async (credentials) => authService.login(credentials);\nexport const logout = () => authService.logout();\nexport const register = async (userData) => authService.register(userData);\nexport const updateUser = async (userId, userData) => authService.updateUser(userId, userData);\nexport const getStoredUser = () => authService.getStoredUser();\nexport const getCurrentUser = () => authService.getCurrentUser();\nexport const getUserRole = () => authService.getCurrentUserRole();\nexport const getRedirectPathForUser = (user) => {\n  const role = user?.role || 'usuario';\n  return role === 'administrador' ? '/dashboard' : '/';\n};\n\n// Exportar el objeto completo para usos avanzados\nexport default authService;\n","---\n// Props que pueden ser pasados al componente\ninterface Props {\n  userRole?: string;\n  currentPath?: string;\n}\n\n// Valores por defecto\nconst { \n  userRole = \"administrador\",\n  currentPath = \"/\"\n} = Astro.props;\n\n// Importar config de idioma\nimport { getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual en el servidor para la renderización inicial\nconst serverLang = getCurrentLanguage();\n\n// Traducciones para títulos de secciones\nconst sectionTitles = {\n  es: {\n    navigation: \"NAVEGACIÓN\",\n    admin: \"ADMINISTRACIÓN\"\n  },\n  ca: {\n    navigation: \"NAVEGACIÓ\",\n    admin: \"ADMINISTRACIÓ\"\n  }\n};\n\n// Traducciones para items del menú\nconst menuTranslations = {\n  es: {\n    dashboard: \"Dashboard\",\n    animals: \"Animales\",\n    listings: \"Listados\",\n    exploitations: \"Explotaciones\",\n    users: \"Usuarios\",\n    imports: \"Importación\",\n    backup: \"Copias de seguridad\",\n    management_system: \"Sistema de Gestión Ganadera\"\n  },\n  ca: {\n    dashboard: \"Tauler de control\",\n    animals: \"Animals\",\n    listings: \"Llistats\",\n    exploitations: \"Explotacions\",\n    users: \"Usuaris\",\n    imports: \"Importació\",\n    backup: \"Còpies de seguretat\",\n    management_system: \"Sistema de Gestió Ramadera\"\n  }\n};\n\n// Función para obtener traducción\nfunction t(key: string, section = 'menu'): string {\n  if (section === 'section') {\n    return sectionTitles[serverLang as 'es' | 'ca']?.[key] || key;\n  }\n  return menuTranslations[serverLang as 'es' | 'ca']?.[key] || key;\n}\n\n// Definir las secciones del menú según roles\nconst menuSections = [\n  {\n    title: t(\"navigation\", 'section'),\n    key: \"navigation\",\n    items: [\n      { name: t(\"dashboard\"), key: \"dashboard\", url: \"/\", icon: \"📊\", roles: [\"administrador\", \"Ramon\", \"editor\", \"usuario\"] },\n      { name: t(\"exploitations\"), key: \"exploitations\", url: \"/explotaciones-react\", icon: \"🏡\", roles: [\"administrador\", \"Ramon\", \"editor\", \"usuario\"] },\n      { name: t(\"animals\"), key: \"animals\", url: \"/animals\", icon: \"🐄\", roles: [\"administrador\", \"Ramon\", \"editor\", \"usuario\"] },\n      { name: t(\"listings\"), key: \"listings\", url: \"/listados\", icon: \"📋\", roles: [\"administrador\", \"Ramon\", \"editor\", \"usuario\"] },\n    ]\n  },\n  {\n    title: t(\"admin\", 'section'),\n    key: \"admin\",\n    items: [\n      { name: t(\"imports\"), key: \"imports\", url: \"/imports\", icon: \"📥\", roles: [\"administrador\"] },\n      { name: t(\"users\"), key: \"users\", url: \"/users\", icon: \"👥\", roles: [\"administrador\", \"Ramon\"] },\n      { name: t(\"backup\"), key: \"backup\", url: \"/backup\", icon: \"💾\", roles: [\"administrador\"] },\n    ]\n  }\n];\n\n// Importar getUserRole directamente del servicio de autenticación\nimport { getUserRole } from '../../services/authService';\n\n// Obtener el rol del usuario actual desde el servicio de autenticación\nlet currentUserRole = 'usuario';\n\n// Verificar si estamos en un entorno de navegador (client-side)\nif (typeof window !== 'undefined') {\n  // Ejecutar esto solo en el cliente para evitar problemas de hidratación\n  document.addEventListener('DOMContentLoaded', () => {\n    currentUserRole = getUserRole();\n    console.log('Rol actual:', currentUserRole);\n  });\n}\n\n// Filtrar las secciones según el rol del usuario\n// Por ahora mostramos todos los elementos para evitar problemas de hidratación\n// El filtrado real ocurrirá en el cliente via JavaScript\nconst filteredSections = menuSections;\n\n// Función para determinar si un elemento está activo\nconst isActive = (itemUrl: string) => {\n  if (itemUrl === '/' && currentPath === '/') return true;\n  if (itemUrl !== '/' && currentPath.startsWith(itemUrl)) return true;\n  return false;\n};\n---\n\n<aside class=\"masclet-sidebar w-64 bg-white dark:bg-gray-800 min-h-screen shadow-md border-r border-gray-100 dark:border-gray-800 z-40 fixed top-0 left-0 h-screen overflow-y-auto\">\n  <!-- Cabecera del sidebar con logo -->\n  <div class=\"py-4 px-0 border-b border-gray-100 dark:border-gray-700 flex items-center justify-center\" style=\"min-height: 150px;\">\n    <div class=\"w-full h-full flex items-center justify-center\">\n      <img src=\"/images/logo_masclet.png\" alt=\"Masclet Imperi Logo\" class=\"max-w-full max-h-full\" style=\"object-fit: contain;\">\n    </div>\n  </div>\n\n  <!-- Botón para cerrar el sidebar en móvil -->\n  <button id=\"close-sidebar\" class=\"md:hidden absolute top-4 right-4 text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200\">\n    <span class=\"text-2xl\">✕</span>\n  </button>\n\n  <!-- Título del sistema -->\n  <div class=\"px-6 pt-4 pb-2 text-center\">\n    <p class=\"font-bold text-sm text-gray-700 dark:text-gray-300 uppercase tracking-wider\">\n      {serverLang === 'ca' ? menuTranslations.ca.management_system : menuTranslations.es.management_system}\n    </p>\n  </div>\n  \n  <!-- Navegación -->\n  <nav class=\"py-2 overflow-y-auto max-h-[calc(100vh-240px)]\">\n    {filteredSections.map((section) => (\n      <div class=\"mb-6\">\n        {section.key === \"navigation\" ? (\n          <h3 class=\"px-6 mb-2 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\" data-section-key=\"navigation\" id=\"nav-title\">\n            NAVEGACIÓN\n          </h3>\n        ) : (\n          <h3 class=\"px-6 mb-2 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\" data-section-key={section.key}>\n            {section.title}\n          </h3>\n        )}\n        <div class=\"space-y-1\">\n          {section.items.map((item) => (\n            <a \n              href={item.url} \n              class:list={[\n                \"flex items-center px-6 py-3 text-sm font-medium transition-colors duration-150\",\n                {\n                  \"text-primary-dark bg-primary/10 dark:text-primary-light dark:bg-primary-dark/20 border-r-4 border-primary dark:border-primary-light\": isActive(item.url),\n                  \"text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\": !isActive(item.url)\n                }\n              ]}\n            >\n              <span class=\"text-xl mr-3\" style=\"width: 2rem; display: inline-block; text-align: center;\">{item.icon}</span>\n              <span data-i18n-key={`menu.${item.key}`}>{item.name}</span>\n            </a>\n          ))}\n        </div>\n      </div>\n    ))}\n  </nav>\n\n  <!-- Eliminado banner de versión -->\n\n  <!-- Script para actualizar las traducciones del menú cuando se cambia el idioma -->\n  <script>\n    // Función para actualizar las traducciones del menú lateral\n    function updateSidebarTranslations() {\n      try {\n        // Cargar el sistema de traducciones\n        import('../../i18n/config.js').then(({ getCurrentLanguage, t }) => {\n          const clientLang = getCurrentLanguage();\n          console.log('Sidebar: Actualizando traducciones al idioma:', clientLang);\n          \n          // Actualizar todos los elementos con atributo data-i18n-key\n          document.querySelectorAll('[data-i18n-key]').forEach(el => {\n            const key = el.getAttribute('data-i18n-key');\n            if (key && key.startsWith('menu.')) {\n              const translation = t(key, clientLang);\n              if (translation !== key) {\n                el.textContent = translation;\n              }\n            }\n          });\n        });\n      } catch (error) {\n        console.error('Error al actualizar traducciones del menú:', error);\n      }\n    }\n\n    // Ejecutar al cargar la página\n    document.addEventListener('DOMContentLoaded', updateSidebarTranslations);\n    \n    // Detectar cambios de idioma (escuchar cambios en localStorage)\n    window.addEventListener('storage', function(e) {\n      if (e.key === 'userLanguage') {\n        updateSidebarTranslations();\n      }\n    });\n    \n    // También actualizar cuando cambia la URL (por si incluye parámetro lang)\n    window.addEventListener('popstate', updateSidebarTranslations);\n  </script>\n</aside>\n\n<script>\n  // Script para manejar el cierre del sidebar en móvil y traducir elementos\n  document.addEventListener('DOMContentLoaded', () => {\n    // El sistema de permisos original estaba ocultando todos los elementos\n    // Desactivamos temporalmente el filtrado para solucionar el problema\n    \n    // NOTA: Vamos a simplificar el enfoque para permitir a todos los usuarios ver todas las opciones\n    // En el futuro, implementaremos un sistema más robusto con roles desde el backend\n    \n    /*\n    // CÓDIGO COMENTADO - Sistema de filtrado que estaba causando problemas\n    const userRole = localStorage.getItem('userRole') || 'usuario';\n    console.log('Rol detectado para filtrado:', userRole);\n    \n    // Añadir atributo data-roles a cada elemento del menú\n    const menuLinks = document.querySelectorAll('nav a');\n    menuLinks.forEach(link => {\n      const href = link.getAttribute('href');\n      // Asignar roles permitidos según la URL\n      if (href === '/' || href.includes('/animals') || href.includes('/explotaciones') || href.includes('/listados')) {\n        // Páginas accesibles para todos los roles\n        link.setAttribute('data-roles', 'administrador,gerente,editor,usuario');\n      } else if (href.includes('/users')) {\n        // Usuarios: solo admin y gerente (Ramon)\n        link.setAttribute('data-roles', 'administrador,gerente');\n      } else {\n        // El resto de páginas administrativas: solo admin\n        link.setAttribute('data-roles', 'administrador');\n      }\n    });\n    */\n    \n    // Traducciones del menú para cliente - sin incluir títulos de secciones\n    const translations = {\n      es: {\n        // Menú principal\n        dashboard: \"Dashboard\",\n        animals: \"Animales\",\n        listings: \"Listados\",\n        exploitations: \"Explotaciones\",\n        // Menú administrativo\n        users: \"Usuarios\",\n        imports: \"Importación\",\n        backup: \"Copias de seguridad\",\n        // Títulos\n        management_system: \"Sistema de Gestión\",\n        // Roles\n        administrador: \"Administrador\",\n        gerente: \"Ramon\",\n        editor: \"Editor\",\n        usuario: \"Usuario\"\n      },\n      ca: {\n        // Menú principal\n        dashboard: \"Tauler de control\",\n        animals: \"Animals\",\n        listings: \"Llistats\",\n        exploitations: \"Explotacions\",\n        // Menú administrativo\n        users: \"Usuaris\",\n        imports: \"Importació\",\n        backup: \"Còpies de seguretat\",\n        // Títulos\n        management_system: \"Sistema de Gestió\",\n        // Roles\n        administrador: \"Administrador\",\n        gerente: \"Ramon\",\n        editor: \"Editor\",\n        usuario: \"Usuari\"\n      }\n    };\n\n    // Función para traducir\n    function t(key, lang) {\n      return translations[lang]?.[key] || key;\n    }\n\n    // Función para traducir la barra lateral\n    function translateSidebar() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n\n      // Forzar directamente el título de navegación por ID\n      const navTitle = document.getElementById('nav-title');\n      if (navTitle) {\n        navTitle.textContent = \"NAVEGACIÓN\";\n      }\n      \n      // Forzar los títulos de secciones por atributo data\n      document.querySelectorAll('h3[data-section-key=\"navigation\"]').forEach(header => {\n        header.textContent = \"NAVEGACIÓN\";\n      });\n      \n      document.querySelectorAll('h3[data-section-key=\"admin\"]').forEach(header => {\n        header.textContent = \"ADMINISTRACIÓN\";\n      });\n\n      // Traducir los elementos del menú lateral\n      document.querySelectorAll('nav a').forEach(link => {\n        const text = link.textContent.trim();\n        // Extraer el emoji si existe\n        const emoji = text.match(/^([\\u{1F300}-\\u{1F5FF}\\u{1F900}-\\u{1F9FF}\\u{1F600}-\\u{1F64F}\\u{1F680}-\\u{1F6FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}\\u{1F1E6}-\\u{1F1FF}\\u{1F191}-\\u{1F251}\\u{1F004}\\u{1F0CF}\\u{1F170}-\\u{1F171}\\u{1F17E}-\\u{1F17F}\\u{1F18E}\\u{3030}\\u{2B50}\\u{2B55}\\u{2934}-\\u{2935}\\u{2B05}-\\u{2B07}\\u{2B1B}-\\u{2B1C}\\u{3297}\\u{3299}\\u{303D}\\u{00A9}\\u{00AE}\\u{2122}\\u{23F3}\\u{24C2}\\u{23E9}-\\u{23EF}\\u{25B6}\\u{23F8}-\\u{23FA}]+)/u);\n        const emojiPrefix = emoji ? emoji[0] + ' ' : '';\n\n        // Mapear los nombres del menú a claves de traducción\n        let translationKey = '';\n        if (text.includes('Dashboard')) translationKey = 'dashboard';\n        else if (text.includes('Animales')) translationKey = 'animals';\n        else if (text.includes('Explotaciones')) translationKey = 'exploitations';\n        else if (text.includes('Usuarios')) translationKey = 'users';\n        else if (text.includes('Importación')) translationKey = 'imports';\n        else if (text.includes('Backup') || text.includes('Copias')) translationKey = 'backup';\n\n        if (translationKey) {\n          link.innerHTML = `${emojiPrefix} ${t(translationKey, currentLang)}`;\n        }\n      });\n\n      // Traducir el texto del sistema de gestión\n      const systemText = document.querySelector('p.text-sm.text-gray-500.dark\\\\:text-gray-300.text-center');\n      if (systemText) {\n        systemText.textContent = t('management_system', currentLang);\n      }\n    }\n\n    // Ejecutar traducción inicial\n    translateSidebar();\n    \n    // Forzar el título de navegación cada segundo para evitar que algo lo cambie\n    setInterval(() => {\n      document.querySelectorAll('h3[data-section-key=\"navigation\"]').forEach(header => {\n        if (header.textContent !== \"NAVEGACIÓN\") {\n          console.log('Corrigiendo título de navegación');\n          header.textContent = \"NAVEGACIÓN\";\n        }\n      });\n    }, 1000);\n\n    // Retraducir cuando cambie el idioma\n    window.addEventListener('storage', function(e) {\n      if (e.key === 'userLanguage') {\n        translateSidebar();\n      }\n    });\n\n    // Función para cerrar sidebar en móvil\n    const closeSidebarButton = document.getElementById('close-sidebar');\n    \n    if (closeSidebarButton) {\n      closeSidebarButton.addEventListener('click', () => {\n        // Disparar un evento personalizado para cerrar el sidebar\n        document.dispatchEvent(new CustomEvent('close-sidebar'));\n      });\n    }\n  });\n</script>\n\n<style>\n  /* Estilos específicos del sidebar */\n  .masclet-sidebar {\n    transition: transform 0.3s ease-in-out;\n  }\n  \n  @media (max-width: 768px) {\n    .masclet-sidebar {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 80%; /* Reducir ancho en móvil para mejor usabilidad */\n      max-width: 280px;\n    }\n  }\n</style>","---\n// Props que pueden ser pasados al componente\ninterface Props {\n  showVersion?: boolean;\n  version?: string;\n}\n\n// Valores por defecto\nconst { \n  showVersion = true,\n  version = \"1.0.0\"\n} = Astro.props;\n\n// Importar config de idioma\nimport { getCurrentLanguage } from '../../i18n/config';\n\n// Obtener el idioma actual en el servidor para la renderización inicial\nconst serverLang = getCurrentLanguage();\n\n// Traducciones para el footer\nconst translations = {\n  es: {\n    rights_reserved: \"Todos los derechos reservados\",\n    version: \"Versión\",\n    about: \"Acerca de\",\n    help: \"Ayuda\",\n    privacy: \"Privacidad\",\n    terms: \"Términos\"\n  },\n  ca: {\n    rights_reserved: \"Tots els drets reservats\",\n    version: \"Versió\",\n    about: \"Sobre nosaltres\",\n    help: \"Ajuda\",\n    privacy: \"Privacitat\",\n    terms: \"Termes\"\n  }\n};\n\n// Función para obtener traducción\nfunction t(key: string): string {\n  return translations[serverLang as 'es' | 'ca']?.[key] || key;\n}\n\n// Obtener el año actual\nconst currentYear = new Date().getFullYear();\n---\n\n<footer class=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 relative z-30\">\n  <div class=\"container mx-auto px-4 py-4 md:py-5\">\n    <div class=\"flex flex-col md:flex-row justify-between items-center\">\n      <!-- Logo y copyright -->\n      <div class=\"flex items-center mb-4 md:mb-0\">\n        <img src=\"/images/logo_masclet.png\" alt=\"Masclet Imperi\" class=\"h-8 w-auto mr-3\">\n        <div>\n          <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n            &copy; {currentYear} Masclet Imperi - {t('rights_reserved')}\n          </p>\n          {showVersion && (\n            <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n              {t('version')} {version}\n            </p>\n          )}\n        </div>\n      </div>\n      \n      <!-- Enlaces útiles -->\n      <div class=\"flex flex-wrap justify-center gap-x-6 gap-y-2 mb-4 md:mb-0\">\n        <a href=\"/about\" class=\"text-sm text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light transition-colors\">\n          {t('about')}\n        </a>\n        <a href=\"/help\" class=\"text-sm text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light transition-colors\">\n          {t('help')}\n        </a>\n        <a href=\"/privacy\" class=\"text-sm text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light transition-colors\">\n          {t('privacy')}\n        </a>\n        <a href=\"/terms\" class=\"text-sm text-gray-600 dark:text-gray-300 hover:text-primary dark:hover:text-primary-light transition-colors\">\n          {t('terms')}\n        </a>\n      </div>\n      \n      <!-- Botones de accesibilidad -->\n      <div class=\"flex items-center space-x-3\">\n        <!-- Toggle de alto contraste -->\n        <button id=\"footer-contrast-toggle\" class=\"p-2 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\">\n          <span class=\"text-sm\">👁️</span>\n        </button>\n        \n        <!-- Botón de accesibilidad -->\n        <button id=\"accessibility-toggle\" class=\"p-2 rounded-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\">\n          <span class=\"text-sm\">♿</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</footer>\n\n<script>\n  // Traducciones para el cliente\n  const translations = {\n    es: {\n      rights_reserved: \"Todos los derechos reservados\",\n      version: \"Versión\",\n      about: \"Acerca de\",\n      help: \"Ayuda\",\n      privacy: \"Privacidad\",\n      terms: \"Términos\"\n    },\n    ca: {\n      rights_reserved: \"Tots els drets reservats\",\n      version: \"Versió\",\n      about: \"Sobre nosaltres\",\n      help: \"Ajuda\",\n      privacy: \"Privacitat\",\n      terms: \"Termes\"\n    }\n  };\n\n  // Función para obtener traducción\n  function t(key, lang) {\n    return translations[lang]?.[key] || key;\n  }\n\n  // Función para traducir el footer\n  function translateFooter() {\n    const currentLang = localStorage.getItem('userLanguage') || 'es';\n    \n    // Traducir los derechos reservados\n    const rightsText = document.querySelector('.text-sm.text-gray-600.dark\\\\:text-gray-300');\n    if (rightsText) {\n      const yearText = rightsText.textContent.split('-')[0].trim();\n      rightsText.textContent = `${yearText} - ${t('rights_reserved', currentLang)}`;\n    }\n    \n    // Traducir la versión\n    const versionText = document.querySelector('.text-xs.text-gray-500');\n    if (versionText) {\n      const versionNumber = versionText.textContent.split(' ').pop();\n      versionText.textContent = `${t('version', currentLang)} ${versionNumber}`;\n    }\n    \n    // Traducir los enlaces\n    const links = document.querySelectorAll('.flex.flex-wrap.justify-center a');\n    links.forEach(link => {\n      const href = link.getAttribute('href');\n      if (href === '/about') {\n        link.textContent = t('about', currentLang);\n      } else if (href === '/help') {\n        link.textContent = t('help', currentLang);\n      } else if (href === '/privacy') {\n        link.textContent = t('privacy', currentLang);\n      } else if (href === '/terms') {\n        link.textContent = t('terms', currentLang);\n      }\n    });\n  }\n  \n  // Ejecutar traducción inicial\n  document.addEventListener('DOMContentLoaded', () => {\n    translateFooter();\n  });\n  \n  // Retraducir cuando cambie el idioma\n  window.addEventListener('storage', function(e) {\n    if (e.key === 'userLanguage') {\n      translateFooter();\n    }\n  });\n\n  // Setup del botón de contraste en el footer\n  const footerContrastToggle = document.getElementById('footer-contrast-toggle');\n  \n  if (footerContrastToggle) {\n    footerContrastToggle.addEventListener('click', () => {\n      document.documentElement.classList.toggle('high-contrast-mode');\n      \n      // Guardar preferencia\n      const isHighContrast = document.documentElement.classList.contains('high-contrast-mode');\n      localStorage.setItem('highContrast', isHighContrast ? 'true' : 'false');\n    });\n  }\n  \n  // Aplicar contraste guardado\n  if (localStorage.getItem('highContrast') === 'true') {\n    document.documentElement.classList.add('high-contrast-mode');\n  }\n  \n  // Setup del botón de accesibilidad\n  const accessibilityToggle = document.getElementById('accessibility-toggle');\n  \n  if (accessibilityToggle) {\n    accessibilityToggle.addEventListener('click', () => {\n      document.documentElement.classList.toggle('accessibility-mode');\n      \n      // Guardar preferencia\n      const isAccessibilityMode = document.documentElement.classList.contains('accessibility-mode');\n      localStorage.setItem('accessibilityMode', isAccessibilityMode ? 'true' : 'false');\n    });\n  }\n  \n  // Aplicar modo de accesibilidad guardado\n  if (localStorage.getItem('accessibilityMode') === 'true') {\n    document.documentElement.classList.add('accessibility-mode');\n  }\n</script>\n\n<style>\n  /* Estilos para el modo de alto contraste */\n  :global(.high-contrast-mode) {\n    --contrast-bg: black;\n    --contrast-text: white;\n    --contrast-border: yellow;\n    --contrast-focus: yellow;\n  }\n  \n  :global(.high-contrast-mode) body {\n    background-color: var(--contrast-bg);\n    color: var(--contrast-text);\n  }\n  \n  :global(.high-contrast-mode) a,\n  :global(.high-contrast-mode) button {\n    color: var(--contrast-text);\n    border-color: var(--contrast-border);\n  }\n  \n  :global(.high-contrast-mode) a:focus,\n  :global(.high-contrast-mode) button:focus {\n    outline: 2px solid var(--contrast-focus);\n  }\n  \n  /* Estilos para el modo de accesibilidad */\n  :global(.accessibility-mode) {\n    font-size: 1.2em;\n    line-height: 1.5;\n  }\n  \n  :global(.accessibility-mode) button,\n  :global(.accessibility-mode) a {\n    padding: 0.5em !important;\n  }\n</style>"],"names":["$$createComponent","$$render","$$maybeRenderHead","$$addAttribute","$$Astro","$$createAstro","Astro","$$renderComponent","LanguageSwitcher"],"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"}