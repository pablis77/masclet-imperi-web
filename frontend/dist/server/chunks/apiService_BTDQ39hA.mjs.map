{"version":3,"file":"apiService_BTDQ39hA.mjs","sources":["../../../src/services/apiService.ts"],"sourcesContent":["/**\n * Servicio API centralizado para Masclet Imperi\n * ==========================================\n * \n * Esta versi√≥n ha sido actualizada para usar la configuraci√≥n centralizada\n * de API a trav√©s del adaptador apiConfigAdapter.ts\n */\n\nimport axios from 'axios';\nimport { \n  API_BASE_URL,\n  API_TIMEOUT,\n  API_DEFAULT_HEADERS,\n  environment,\n  isProduction,\n  isLocal,\n  TOKEN_NAME\n} from './apiConfigAdapter';\n\n// Variables para mantener compatibilidad con c√≥digo existente\nlet ENVIRONMENT: string = environment;\nlet USE_MOCK_DATA: boolean = false;\n\n// Imprimir informaci√≥n de diagn√≥stico\nconsole.log(`[ApiService] Entorno: ${ENVIRONMENT}`);\nconsole.log(`[ApiService] API configurada para conectarse a: ${API_BASE_URL}`);\n\nif (isProduction) {\n  console.log('[ApiService] Ejecutando en modo PRODUCCI√ìN');\n} else {\n  // Modo local (incluye localhost, 127.0.0.1, redes internas, etc.)\n  console.log('[ApiService] Ejecutando en modo LOCAL');\n}\n\n// Credenciales fijas para desarrollo: admin/admin123\n// Estas son las credenciales indicadas en los requisitos\n\n// Mantener una copia local de la URL base para posibles modificaciones\nlet apiBaseUrl = API_BASE_URL;\n\n// Crear instancia de axios con configuraci√≥n base centralizada\nconst api = axios.create({\n  baseURL: apiBaseUrl,\n  timeout: API_TIMEOUT,\n  headers: API_DEFAULT_HEADERS\n});\n\n// GESTI√ìN UNIVERSAL DE PETICIONES API\napi.interceptors.request.use(\n  (config) => {\n    const endpoint = config.url || '';\n    \n    // Debug para todas las peticiones\n    // console.log(`[API] Procesando solicitud: ${endpoint}`);\n    \n    // Evitar duplicaci√≥n de prefijos /api/v1\n    const finalUrl = `${config.baseURL || ''}${config.url || ''}`;\n    if (finalUrl.includes('/api/v1/api/v1/')) {\n      console.log(`[API] Corrigiendo URL duplicada: ${finalUrl}`);\n      const fixedUrl = finalUrl.replace('/api/v1/api/v1/', '/api/v1/');\n      const baseUrlPart = config.baseURL || '';\n      config.url = fixedUrl.replace(baseUrlPart, '');\n      console.log(`[API] URL corregida: ${baseUrlPart}${config.url}`);\n    }\n    \n    // Asegurar encabezados AUTH\n    if (typeof localStorage !== 'undefined' && localStorage.getItem(TOKEN_NAME)) {\n      config.headers.Authorization = `Bearer ${localStorage.getItem(TOKEN_NAME)}`;\n    }\n    \n    // NO activamos withCredentials en ning√∫n entorno para evitar problemas CORS\n    // Las cookies no son necesarias para nuestro esquema de autenticaci√≥n JWT\n    config.withCredentials = false;\n    \n    // Si estamos en producci√≥n, configuraci√≥n adicional\n    if (isProduction) {\n      // En producci√≥n, asegurar que todas las peticiones son seguras\n      if (config.url && config.url.startsWith('http:')) {\n        config.url = config.url.replace('http:', 'https:');\n      }\n      \n      // Asegurar que baseURL es HTTPS en producci√≥n\n      if (config.baseURL && config.baseURL.startsWith('http:')) {\n        config.baseURL = config.baseURL.replace('http:', 'https:');\n      }\n      \n      console.log(`[PROD] URL final: ${config.baseURL}${config.url}`);\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para a√±adir credenciales a todas las peticiones\napi.interceptors.request.use(\n  (config) => {\n    // Intentar usar el token JWT del localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      try {\n        const token = localStorage.getItem(TOKEN_NAME);\n        if (token) {\n          config.headers['Authorization'] = `Bearer ${token}`;\n          console.log('Usando token JWT para autenticaci√≥n');\n        } else {\n          console.warn('No se encontr√≥ token en localStorage');\n          // Opcional: redirigir a login si no hay token\n        }\n      } catch (e) {\n        console.warn('No se pudo acceder a localStorage:', e);\n      }\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Funci√≥n para configurar la API\nexport function configureApi(baseUrl: string, useMockData: boolean = false) {\n  apiBaseUrl = baseUrl; // Usar variable local en lugar de la importada\n  USE_MOCK_DATA = useMockData;\n  api.defaults.baseURL = baseUrl;\n  \n  console.log(`API configurada con URL base: ${baseUrl}`);\n  console.log(`Uso de datos simulados: ${useMockData ? 'S√ç' : 'NO'}`);\n}\n\n// Funci√≥n para realizar peticiones GET\nexport async function get<T = any>(endpoint: string): Promise<T> {\n  try {\n    // Normalizar endpoint asegurando que empiece con /\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n    \n    // IMPORTANTE: A√±adir prefijo /api/v1 si no est√° presente y no hay ya un prefijo en la URL base\n    let apiEndpoint = normalizedEndpoint;\n    // Comprobar si ya hay un prefijo en la URL base (config.baseURL) o si ya hay un prefijo en el endpoint\n    const baseUrlHasPrefix = apiBaseUrl.includes('/api/v1');\n    if (!apiEndpoint.startsWith('/api/v1') && !baseUrlHasPrefix) {\n      apiEndpoint = `/api/v1${normalizedEndpoint}`;\n      console.log(`A√±adiendo prefijo a endpoint: ${normalizedEndpoint} -> ${apiEndpoint}`);\n    }\n    \n    // Quitar / al final si el endpoint lo tiene y no contiene query params\n    // El backend est√° redirigiendo los endpoints con / al final a los que no lo tienen\n    const finalEndpoint = (!apiEndpoint.includes('?') && apiEndpoint.endsWith('/')) \n      ? apiEndpoint.slice(0, -1) \n      : apiEndpoint;\n    \n    // IMPORTANTE: En producci√≥n, solo imprimir la ruta relativa\n    if (isProduction) {\n      // console.log(`Realizando petici√≥n GET a: ${finalEndpoint}`);\n    } else {\n      console.log(`Realizando petici√≥n GET a: ${finalEndpoint}`);\n    }\n    \n    const response = await api.get<T>(finalEndpoint);\n    \n    // Registrar informaci√≥n detallada de la respuesta para depuraci√≥n\n    // console.log(`‚úÖ Respuesta recibida de ${finalEndpoint}:`, {\n    //   status: response.status,\n    //   statusText: response.statusText,\n    //   dataType: typeof response.data,\n    //   isNull: response.data === null,\n    //   isUndefined: response.data === undefined,\n    //   dataLength: response.data && typeof response.data === 'object' ? Object.keys(response.data).length : 'N/A'\n    // });\n    \n    // Si la data es undefined o null, registrar warning y devolver objeto vac√≠o\n    if (response.data === undefined || response.data === null) {\n      // console.warn(`‚ö†Ô∏è Datos recibidos vac√≠os en ${finalEndpoint}`);\n      \n      // Devolver objeto vac√≠o del tipo esperado para evitar errores\n      if (Array.isArray(response.data)) {\n        return [] as unknown as T;\n      } else {\n        return {} as T;\n      }\n    }\n    \n    return response.data;\n  } catch (error) {\n    // Mejorar el log de errores para facilitar la depuraci√≥n\n    if (axios.isAxiosError(error)) {\n      // Solo mantenemos un log de error b√°sico para diagn√≥stico\n      console.error(`‚ùå Error en petici√≥n GET a ${endpoint}: ${error.message} (${error.response?.status || 'sin status'})`);\n    } else {\n      console.error(`‚ùå Error no relacionado con Axios en ${endpoint}: ${error}`);\n    }\n    \n    // Mecanismo de reintento para errores 404\n    if (axios.isAxiosError(error) && error.response?.status === 404) {\n      // Obtener la URL original que fall√≥\n      const originalUrl = error.config?.url || '';\n      const absoluteUrl = error.config?.baseURL ? `${error.config.baseURL}${originalUrl}` : originalUrl;\n      \n      // Registrar el fallo para diagn√≥stico\n      // console.warn(`‚ö†Ô∏è Error 404 en: ${absoluteUrl}`);\n      \n      // En desarrollo local, simplemente registramos el error y dejamos que falle normalmente\n      if (!isProduction) {\n        // console.warn(`Entorno de desarrollo: sin reintentos autom√°ticos`);\n      } else {\n        // En producci√≥n, intentamos estrategias de recuperaci√≥n\n        \n        // Estrategia 1: Convertir URL absoluta a relativa\n        if (absoluteUrl.includes('://')) {\n          try {\n            // Extraer solo el path para hacer una petici√≥n relativa\n            const urlObj = new URL(absoluteUrl);\n            const relativePath = urlObj.pathname + urlObj.search;\n            // console.log(`üîß Detectada URL absoluta, reintentando con ruta relativa: ${relativePath}`);\n            \n            // Hacer una petici√≥n completamente relativa\n            try {\n              // Configurar manualmente para ignorar cualquier baseURL\n              const retryResponse = await axios.get<T>(relativePath, {\n                baseURL: '',\n                headers: error.config?.headers\n              });\n              // console.log(`‚úÖ √âxito con la ruta relativa!`);\n              return retryResponse.data;\n            } catch (retryError) {\n              // console.error(`üí• Fall√≥ el intento con ruta relativa: ${relativePath}`);\n            }\n          } catch (e) {\n            // console.warn(`No se pudo procesar la URL para reintento: ${absoluteUrl}`);\n          }\n        }\n        \n        // Estrategia 2: Corregir URLs mal formadas\n        if (originalUrl.includes('//') || originalUrl.includes('api/api') || \n            (originalUrl.includes('/api/v1') && endpoint.includes('/api/v1'))) {\n          \n          // console.log(`üîß Detectada URL mal formada, intentando corregir...`);\n          \n          // Corregir problemas comunes en las URLs\n          let correctedUrl = endpoint.replace(/api\\/api/g, 'api');\n          correctedUrl = correctedUrl.replace(/\\/api\\/v1\\/api\\/v1/g, '/api/v1');\n          correctedUrl = correctedUrl.replace(/\\/\\/api\\/v1/g, '/api/v1');\n          \n          // Si la URL se corrige, intentar nuevamente\n          if (correctedUrl !== endpoint) {\n            // console.log(`üî® Reintentando con URL corregida: ${correctedUrl}`);\n            try {\n              const retryResponse = await api.get<T>(correctedUrl);\n              // console.log(`‚úÖ √âxito con URL corregida!`);\n              return retryResponse.data;\n            } catch (retryError) {\n              // console.error(`üí• Tambi√©n fall√≥ el reintento con URL corregida`);            \n            }\n          }\n        }\n        \n        // Estrategia 3: √öltimo intento con ruta absoluta desde ra√≠z\n        if (error.config?.baseURL) {\n          try {\n            let finalAttemptUrl = originalUrl;\n            if (!finalAttemptUrl.startsWith('/api')) {\n              finalAttemptUrl = `/api/v1/${finalAttemptUrl.startsWith('/') ? finalAttemptUrl.substring(1) : finalAttemptUrl}`;\n            }\n            \n            // console.log(`ü§ñ √öltimo intento con ruta absoluta: ${finalAttemptUrl}`);\n            const lastResponse = await axios.get<T>(finalAttemptUrl, {\n              baseURL: ''\n            });\n            // console.log(`‚úÖ √âxito en el √∫ltimo intento!`);\n            return lastResponse.data;\n          } catch (lastError) {\n            // console.error(`üí• Fall√≥ el √∫ltimo intento de recuperaci√≥n`); \n          }\n        }\n      }\n      \n      // Si llegamos aqu√≠, el reintento fall√≥ o no se intent√≥, devolver array vac√≠o para endpoints de lista\n      if (endpoint.includes('list') || \n          endpoint.includes('all') || \n          endpoint.includes('explotacions') || \n          endpoint.includes('animales')) {\n        // console.warn(`Devolviendo array vac√≠o para ${endpoint} debido a 404`);\n        return [] as unknown as T;\n      }\n    }\n    \n    // Devolver objeto vac√≠o para evitar que la UI se rompa\n    return {} as T;\n  }\n}\n\n// Funci√≥n para realizar peticiones POST\nexport async function post<T = any>(endpoint: string, data: any): Promise<T> {\n  try {\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n    const response = await api.post<T>(normalizedEndpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error en petici√≥n POST a ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Funci√≥n para realizar peticiones PUT\nexport async function put<T = any>(endpoint: string, data: any): Promise<T> {\n  try {\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n    const response = await api.put<T>(normalizedEndpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error en petici√≥n PUT a ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Funci√≥n para realizar peticiones PATCH\nexport async function patch<T = any>(endpoint: string, data: any): Promise<T> {\n  try {\n    // Normalizar endpoint\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n    console.log(`Realizando petici√≥n PATCH a ${apiBaseUrl}${normalizedEndpoint}`);\n    console.log('Datos enviados:', data);\n    \n    // Realizar petici√≥n utilizando URL base local\n    const response = await api.patch<T>(normalizedEndpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error(`Error en petici√≥n PATCH a ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Funci√≥n para realizar peticiones DELETE\nexport async function del<T = any>(endpoint: string): Promise<T> {\n  try {\n    const normalizedEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;\n    const response = await api.delete<T>(normalizedEndpoint);\n    return response.data;\n  } catch (error) {\n    console.error(`Error en petici√≥n DELETE a ${endpoint}:`, error);\n    throw error;\n  }\n}\n\n// Funci√≥n para verificar si el usuario est√° autenticado\nexport async function isAuthenticated(): Promise<boolean> {\n  try {\n    // Verificar si hay un token en localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const token = localStorage.getItem('token');\n      if (!token) return false;\n      \n      // Opcionalmente, verificar la validez del token con el backend\n      // await get('/auth/verify');\n      return true;\n    }\n    return false;\n  } catch (error) {\n    console.error('Error al verificar autenticaci√≥n:', error);\n    return false;\n  }\n}\n\n// Funci√≥n para obtener informaci√≥n del usuario actual\nexport async function getUserInfo() {\n  try {\n    if (await isAuthenticated()) {\n      return await get('/users/me');\n    }\n    return null;\n  } catch (error) {\n    console.error('Error al obtener informaci√≥n del usuario:', error);\n    return null;\n  }\n}\n\n// Funci√≥n para iniciar sesi√≥n usando el formato OAuth2 requerido\nexport async function login(username: string, password: string) {\n  try {\n    // Crear los datos en formato application/x-www-form-urlencoded que espera OAuth2\n    const formData = new URLSearchParams();\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('grant_type', 'password');\n    \n    // Ruta de login directa sin concatenar baseURL para evitar problemas\n    const loginEndpoint = '/auth/login';\n    \n    // Determinar qu√© URL usar para el login\n    let loginUrl = loginEndpoint;\n    let useBaseUrlOverride = false;\n    let baseUrlOverride = '';\n    \n    if (typeof window !== 'undefined') {\n      const hostname = window.location.hostname;\n      const isLocalNetwork = \n        hostname === 'localhost' || \n        hostname === '127.0.0.1' ||\n        /^192\\.168\\./.test(hostname) ||\n        /^10\\./.test(hostname) ||\n        /^172\\.(1[6-9]|2[0-9]|3[0-1])/.test(hostname);\n      \n      if (isLocalNetwork) {\n        // Para redes locales usando IP, forzar conexi√≥n a localhost:8000\n        useBaseUrlOverride = true;\n        baseUrlOverride = 'http://127.0.0.1:8000/api/v1';\n        loginUrl = '/auth/login'; // Sin api/v1 ya que est√° en baseUrlOverride\n        console.log(`Realizando login a: ${baseUrlOverride}${loginUrl}`);\n      } else if (isProduction) {\n        console.log(`Realizando login a: /api/v1${loginEndpoint}`);\n      } else {\n        console.log(`Realizando login a: ${api.defaults.baseURL}${loginEndpoint}`);\n      }\n    } else {\n      console.log(`Realizando login a: ${api.defaults.baseURL}${loginEndpoint}`);\n    }\n    \n    // Realizar la solicitud con el formato correcto\n    let response;\n    if (useBaseUrlOverride) {\n      // Crear una instancia de axios temporal para esta petici√≥n espec√≠fica\n      const tempAxios = axios.create({\n        baseURL: baseUrlOverride,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      response = await tempAxios.post(loginUrl, formData);\n    } else {\n      // Usar configuraci√≥n est√°ndar\n      response = await api.post(loginEndpoint, formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n    }\n    \n    // Guardar el token en localStorage\n    if (typeof window !== 'undefined' && window.localStorage && response.data.access_token) {\n      localStorage.setItem('token', response.data.access_token);\n      console.log('Token guardado correctamente');\n    }\n    \n    return response;\n  } catch (error) {\n    console.error('Error al iniciar sesi√≥n:', error);\n    throw error;\n  }\n}\n\n// Funci√≥n para obtener la URL base de la API (para depuraci√≥n)\nexport function getBaseUrl(): string {\n  return apiBaseUrl;\n};\n\nexport default {\n  get,\n  post,\n  put,\n  patch,\n  del,\n  isAuthenticated,\n  getUserInfo,\n  login,\n  configureApi,\n  getBaseUrl\n};\n"],"names":[],"mappings":"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"}