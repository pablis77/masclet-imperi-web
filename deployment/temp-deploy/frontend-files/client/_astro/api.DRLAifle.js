import{b4 as w}from"./vendor.CIJYp_OF.js";const E=()=>{if(typeof window>"u")return"server";const e=window.location.hostname;return e.includes("loca.lt")?"localtunnel":e==="localhost"||e.includes("192.168.")?"local":"production"},f=E(),g=f==="localtunnel";let i,$=!1;switch(f){case"localtunnel":i="https://api-masclet-imperi.loca.lt/api/v1";break;case"local":i="http://localhost:8000/api/v1";break;case"production":i="/api/v1",$=!0;break;default:i="http://localhost:8000/api/v1"}const p=i;console.log("üåé Modo de conexi√≥n:",f);console.log("üîå API Base URL:",i);console.log("üîó URLs Relativas:",$?"S√ç":"NO");function h(e){return e=e.startsWith("/")?e.substring(1):e,e.endsWith("/")?e:`${e}/`}console.log("üåé Modo de conexi√≥n:",f);console.log("üîå API Base URL:",i||"URL relativa");const d=w.create({baseURL:i,timeout:15e3,headers:{"Content-Type":"application/json","X-Environment":f},withCredentials:!1});d.interceptors.request.use(e=>{console.log("Usando token JWT para autenticaci√≥n");let o=null;const t=["token","accessToken","jwt","access_token"];if(typeof window<"u"&&window.localStorage)for(const a of t){const s=localStorage.getItem(a);if(s){o=s,console.log(`Token encontrado en localStorage['${a}']`);break}}if(!o&&typeof window<"u"&&window.sessionStorage)for(const a of t){const s=sessionStorage.getItem(a);if(s){o=s,console.log(`Token encontrado en sessionStorage['${a}']`);break}}if(o&&e.headers)o.startsWith("Bearer ")?e.headers.Authorization=o:e.headers.Authorization=`Bearer ${o}`,e.headers["X-Auth-Token"]=o,console.log("üîê Token JWT a√±adido correctamente a las cabeceras");else if(console.warn("‚ö†Ô∏è No se encontr√≥ token JWT para autenticar la petici√≥n"),console.log("URL de la petici√≥n:",e.url),console.log("M√©todo:",e.method),console.log("Headers actuales:",e.headers),typeof window<"u"){console.log("Contenido de localStorage:");for(let a=0;a<localStorage.length;a++){const s=localStorage.key(a);if(s){const l=localStorage.getItem(s);console.log(`- ${s}: ${l?l.substring(0,20)+"...":"null"}`)}}}return e},e=>(console.error("Error en interceptor de peticiones:",e),Promise.reject(e)));d.interceptors.response.use(e=>{if(console.log("Respuesta del servidor recibida:",{url:e.config.url,status:e.status,statusText:e.statusText,headers:e.headers,contentType:e.headers["content-type"]}),console.log("Cuerpo completo de la respuesta:",e),console.log("Datos de la respuesta (data):",e.data),console.log("Tipo de data:",typeof e.data),typeof e.data=="string"&&e.data.trim().startsWith("{"))try{console.log("Intentando parsear respuesta como JSON...");const o=JSON.parse(e.data);return console.log("Datos parseados:",o),o}catch(o){console.warn("Error al parsear respuesta como JSON:",o)}if(e.data===void 0&&(console.warn("Respuesta con data undefined, verificando respuesta bruta..."),e.status===200)){if(e.request&&e.request.response)try{console.log("Intentando extraer datos de request.response...");const o=e.request.response;if(typeof o=="string"){const t=JSON.parse(o);return console.log("Datos extra√≠dos de request.response:",t),t}}catch(o){console.warn("Error al procesar request.response:",o)}return console.warn("No se pudieron extraer datos de la respuesta, devolviendo objeto vac√≠o"),{}}return e.data&&typeof e.data=="object"&&e.data.hasOwnProperty("data")?(console.log("Extrayendo datos de response.data.data"),e.data.data):e.data||{}},e=>{if(e.response){e.response.status===401&&(localStorage.removeItem("token"),window.location.href="/login");const o=e.response.data,t=o.detail||o.message||"Error desconocido";return Promise.reject({message:t,status:e.response.status,code:o.code||"ERROR"})}return e.request?Promise.reject({message:"No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n.",status:0,code:"NETWORK_ERROR"}):Promise.reject({message:e.message||"Ocurri√≥ un error al procesar la solicitud",status:500,code:"UNKNOWN_ERROR"})});async function y(e,o={}){try{const t=new URLSearchParams;Object.entries(o).forEach(([n,u])=>{u!=null&&t.append(n,String(u))});let a;if(g){const n=h(e);a=`${i}${n}${t.toString()?"?"+t.toString():""}`}else t.append("endpoint",e),a=`${p}/proxy?${t.toString()}`;console.log(`üîç Fetching data [${g?"TUNNEL":"LOCAL"}]:`,a);const s=localStorage.getItem("token"),l={"Content-Type":"application/json"};s&&(l.Authorization=`Bearer ${s}`);const r=await fetch(a,{headers:l});if(!r.ok){const n=await r.json().catch(()=>({message:r.statusText}));throw console.error(`‚ùå Error ${r.status} en GET ${e}:`,n),new Error(n.message||`Error ${r.status}: ${r.statusText}`)}const c=await r.json();return console.log(`‚úÖ Respuesta GET ${e}:`,c),c}catch(t){throw console.error(`‚ùå Error en fetchData (${e}):`,t),{message:t.message||"No se pudo conectar con el servidor. Por favor, verifica tu conexi√≥n.",status:t.status||0,code:t.code||"NETWORK_ERROR"}}}async function m(e,o={},t="POST"){try{const a=localStorage.getItem("token"),s={"Content-Type":"application/json"};a&&(s.Authorization=`Bearer ${a}`);let l,r;if(g){const u=h(e);l=`${i}${u}`,r=JSON.stringify(o)}else l=`${p}/proxy`,r=JSON.stringify({endpoint:e,data:o,method:t});console.log(`üì§ ${t} [${g?"TUNNEL":"LOCAL"}]:`,l,o);const c=await fetch(l,{method:g?t:"POST",headers:s,body:r});if(!c.ok){const u=await c.json().catch(()=>({message:c.statusText}));throw console.error(`‚ùå Error ${c.status} en ${t} ${e}:`,u),new Error(u.message||u.detail||`Error ${c.status}: ${c.statusText}`)}const n=await c.json();return console.log(`‚úÖ Respuesta ${t} ${e}:`,n),n}catch(a){throw console.error(`‚ùå Error en ${t} (${e}):`,a),{message:a.message||"No se pudo conectar con el servidor. Por favor, verifica tu conexi√≥n.",status:a.status||0,code:a.code||"NETWORK_ERROR"}}}async function R(e,o={}){try{const t=localStorage.getItem("token"),a={"Content-Type":"application/json"};t&&(a.Authorization=`Bearer ${t}`);let s,l=JSON.stringify(o);if(g){const n=h(e);s=`${i}${n}`}else s=`${p}${e}`;console.log(`üîß PATCH [${g?"TUNNEL":"LOCAL"}]:`,s,o);const r=await fetch(s,{method:"PATCH",headers:a,body:l});if(!r.ok){const n=await r.json().catch(()=>({message:r.statusText}));throw console.error(`‚ùå Error ${r.status} en PATCH ${e}:`,n),new Error(n.message||n.detail||`Error ${r.status}: ${r.statusText}`)}const c=await r.json();return console.log(`‚úÖ Respuesta PATCH ${e}:`,c),c}catch(t){throw console.error(`Error en patchData (${e}):`,t),{message:t.message||"No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n.",status:t.status||0,code:t.code||"NETWORK_ERROR"}}}async function T(e,o={}){return m(e,o,"PUT")}async function v(e,o={}){return m(e,o,"DELETE")}function S(e,o,t="Ha ocurrido un error. Por favor, int√©ntelo de nuevo."){console.error("API Error:",e),e.code==="NETWORK_ERROR"?o("No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n."):e.message?o(e.message):o(e.message||t)}d.fetchData=y;d.postData=m;d.putData=T;d.deleteData=v;d.handleApiError=S;d.patchData=R;export{d as a};
