import{b2 as n}from"./vendor.CIJYp_OF.js";import{a}from"./authService.CvC7CJU-.js";const t=()=>{if(typeof window>"u")return null;try{return localStorage.getItem("token")}catch(r){return console.warn("Error al acceder a localStorage:",r),null}};function i(){try{const r=t();if(!r)return console.warn("No hay token JWT disponible"),"usuario";const o=n(r);if(console.log("Token decodificado:",o),o.username&&o.username.toLowerCase()==="ramon")return console.log("⭐ USUARIO RAMON DETECTADO por username, asignando rol Ramon"),"Ramon";if(o.sub&&o.sub.toLowerCase()==="ramon")return console.log("⭐ USUARIO RAMON DETECTADO por sub, asignando rol Ramon"),"Ramon";if(o.sub&&o.sub.toLowerCase()==="admin")return console.log("Usuario admin detectado en sub, asignando rol administrador"),"administrador";if(o.username==="admin")return console.log("Usuario admin detectado en username, asignando rol administrador"),"administrador";if(o.role){if(console.log("Rol en el token (sin procesar):",o.role,`(tipo: ${typeof o.role})`),typeof o.role=="string"&&o.role.includes("UserRole.")){console.log("Detectado formato UserRole.XXXX");const e=o.role.split(".")[1];if(console.log("Parte del rol extraída:",e),e==="ADMIN")return console.log("Mapeando ADMIN a administrador"),"administrador";if(e==="GERENTE"||e==="RAMON")return console.log("Mapeando GERENTE/RAMON a Ramon"),"Ramon";if(e==="EDITOR")return console.log("Mapeando EDITOR a editor"),"editor";if(e==="USER")return console.log("Mapeando USER a usuario"),"usuario"}if(["administrador","Ramon","editor","usuario"].includes(o.role))return console.log("Rol ya normalizado:",o.role),o.role;if(o.role==="gerente")return console.log("Convertiendo gerente a Ramon"),"Ramon"}if(o.sub){if(console.log("Intentando inferir rol a partir de sub:",o.sub),o.sub==="admin")return console.log("Usuario admin detectado en sub, asignando rol administrador"),"administrador";if(o.sub==="ramon"||o.sub==="Ramon")return console.log("Usuario Ramon detectado en sub, asignando rol Ramon"),"Ramon"}return console.warn("No se pudo determinar el rol a partir del token, usando valor por defecto"),"usuario"}catch(r){return console.error("Error al extraer rol del token:",r),"usuario"}}function d(){if(typeof window<"u"){const e=localStorage.getItem("userRole");if(e&&["administrador","Ramon","editor","usuario"].includes(e))return console.log("Rol obtenido de localStorage.userRole:",e),e}const r=i();if(console.log("Rol extraído del token JWT:",r),r!=="usuario")return r;const o=a();if(console.log("Usuario actual:",o),o?.username==="admin")return console.log("Usuario admin detectado, asignando rol administrador directamente"),"administrador";if(o?.role){if(console.log("Rol del usuario actual:",o.role),typeof o.role=="string"&&o.role.includes("UserRole.")){const e=o.role.split(".")[1];if(e==="ADMIN")return"administrador";if(e==="GERENTE")return"Ramon";if(e==="EDITOR")return"editor";if(e==="USER")return"usuario"}if(typeof o.role=="string"&&["administrador","Ramon","editor","usuario"].includes(o.role))return o.role}if(o?.username){if(console.log("Determinando rol por nombre de usuario:",o.username),o.username==="admin")return console.log("Usuario admin detectado, asignando rol administrador"),"administrador";if(o.username==="ramon")return"Ramon";if(o.username.includes("editor"))return"editor"}return console.log("No se pudo determinar el rol, usando valor por defecto: usuario"),"usuario"}export{d as g};
