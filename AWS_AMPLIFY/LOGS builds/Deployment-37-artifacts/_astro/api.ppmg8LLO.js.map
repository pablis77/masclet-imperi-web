{"version":3,"file":"api.ppmg8LLO.js","sources":["../../../src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse, AxiosInstance } from 'axios';\n\n// Importar configuraci√≥n centralizada desde el adaptador\nimport {\n  API_BASE_URL as CENTRAL_API_URL,\n  API_TIMEOUT,\n  API_DEFAULT_HEADERS,\n  environment as centralEnvironment,\n  isProduction,\n  isLocal,\n  normalizePath as apiNormalizePath,\n  TOKEN_NAME\n} from './apiConfigAdapter';\n\n// Extender la interfaz AxiosInstance para incluir nuestros m√©todos personalizados\ndeclare module 'axios' {\n  interface AxiosInstance {\n    fetchData: (endpoint: string, params?: Record<string, any>) => Promise<any>;\n    postData: (endpoint: string, data?: Record<string, any>, method?: string) => Promise<any>;\n    putData: (endpoint: string, data?: Record<string, any>) => Promise<any>;\n    deleteData: (endpoint: string, data?: Record<string, any>) => Promise<any>;\n    handleApiError: (error: any, setError: (message: string) => void, defaultMessage?: string) => void;\n    patchData: (endpoint: string, data?: Record<string, any>) => Promise<any>;\n  }\n}\n\n// Tipos para el entorno de ejecuci√≥n\ntype Environment = 'server' | 'local' | 'production';\n\n// Usar el entorno detectado por el adaptador centralizado\nconst environment = centralEnvironment as Environment;\n\n// Configuraci√≥n base seg√∫n el entorno\nlet baseURL: string = CENTRAL_API_URL;\nlet useRelativeUrls = isProduction;\n\n// Ya no usamos LocalTunnel ni otros servicios de t√∫neles\n\n// URL base para el proxy local (usado en desarrollo)\nconst API_BASE_URL_LOCAL = baseURL;\n\n// Imprimir informaci√≥n importante de depuraci√≥n\nconsole.log('üåé Modo de conexi√≥n:', environment);\nconsole.log('üîå API Base URL:', baseURL);\nconsole.log('üîó URLs Relativas:', useRelativeUrls ? 'S√ç' : 'NO');\n\n// Funci√≥n para normalizar rutas (usando el adaptador centralizado)\nfunction normalizePath(path: string): string {\n    return apiNormalizePath(path);\n}\n\n// Logs para depuraci√≥n\nconsole.log('üåé [api.ts] Modo de conexi√≥n:', environment);\nconsole.log('üîå [api.ts] API Base URL:', baseURL || 'URL relativa');\n\n// Configuraci√≥n de Axios personalizada para integrarse mejor con el backend\nconst api = axios.create({\n    baseURL,\n    timeout: API_TIMEOUT,\n    headers: API_DEFAULT_HEADERS,\n    validateStatus: function (status) {\n        return status >= 200 && status < 500; // Tratamos respuestas 4xx como v√°lidas para manejarlas\n    }\n});\n\n// Interceptor para agregar el token JWT a las solicitudes\napi.interceptors.request.use(config => {\n    const token = localStorage.getItem(TOKEN_NAME);\n    if (token && config.headers) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n        } else {\n            console.warn('‚ö†Ô∏è No se encontr√≥ token JWT para autenticar la petici√≥n');\n            \n            // A√±adir informaci√≥n de depuraci√≥n\n            console.log('URL de la petici√≥n:', config.url);\n            console.log('M√©todo:', config.method);\n            console.log('Headers actuales:', config.headers);\n            \n            // En modo desarrollo, mostrar contenido de localStorage\n            if (typeof window !== 'undefined') {\n                console.log('Contenido de localStorage:');\n                for (let i = 0; i < localStorage.length; i++) {\n                    const key = localStorage.key(i);\n                    if (key) {\n                        const value = localStorage.getItem(key);\n                        console.log(`- ${key}: ${value ? value.substring(0, 20) + '...' : 'null'}`);  \n                    }\n                }\n            }\n        }\n        \n        return config;\n    },\n    (error: AxiosError) => {\n        console.error('Error en interceptor de peticiones:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Interceptor para manejar respuestas y errores\napi.interceptors.response.use(\n    (response: AxiosResponse) => {\n        // Primero, loguear informaci√≥n detallada sobre la respuesta\n        console.log('Respuesta del servidor recibida:', {\n            url: response.config.url,\n            status: response.status,\n            statusText: response.statusText,\n            headers: response.headers,\n            contentType: response.headers['content-type']\n        });\n        \n        // Inspeccionar el cuerpo de la respuesta en detalle\n        console.log('Cuerpo completo de la respuesta:', response);\n        console.log('Datos de la respuesta (data):', response.data);\n        console.log('Tipo de data:', typeof response.data);\n        \n        // Si la respuesta es un string JSON, intentar parsearlo\n        if (typeof response.data === 'string' && response.data.trim().startsWith('{')) {\n            try {\n                console.log('Intentando parsear respuesta como JSON...');\n                const parsedData = JSON.parse(response.data);\n                console.log('Datos parseados:', parsedData);\n                return parsedData;\n            } catch (e) {\n                console.warn('Error al parsear respuesta como JSON:', e);\n            }\n        }\n        \n        // Manejar caso de respuesta indefinida (probablemente un error en la comunicaci√≥n)\n        if (response.data === undefined) {\n            console.warn('Respuesta con data undefined, verificando respuesta bruta...');\n            \n            // Si hay un c√≥digo de estado 200, pero data es undefined, extraer de otra parte\n            if (response.status === 200) {\n                // Intentar diferentes propiedades donde podr√≠an estar los datos\n                if (response.request && response.request.response) {\n                    try {\n                        console.log('Intentando extraer datos de request.response...');\n                        const rawData = response.request.response;\n                        if (typeof rawData === 'string') {\n                            const parsedData = JSON.parse(rawData);\n                            console.log('Datos extra√≠dos de request.response:', parsedData);\n                            return parsedData;\n                        }\n                    } catch (e) {\n                        console.warn('Error al procesar request.response:', e);\n                    }\n                }\n                \n                // Si llegamos aqu√≠ y no hay datos, devolver un objeto vac√≠o en lugar de undefined\n                console.warn('No se pudieron extraer datos de la respuesta, devolviendo objeto vac√≠o');\n                return {};\n            }\n        }\n        \n        // Si la API devuelve datos en la propiedad 'data', lo extraemos\n        if (response.data && typeof response.data === 'object' && response.data.hasOwnProperty('data')) {\n            console.log('Extrayendo datos de response.data.data');\n            return response.data.data;\n        }\n\n        // En cualquier otro caso, devolver los datos como vienen\n        return response.data || {}; // Evitar devolver undefined\n    },\n    (error: AxiosError) => {\n        // Manejar errores espec√≠ficos por c√≥digo\n        if (error.response) {\n            // Error de autenticaci√≥n\n            if (error.response.status === 401) {\n                // Limpiar token y redirigir a login\n                localStorage.removeItem('token');\n                window.location.href = '/login';\n            }\n\n            // Formatear respuestas de error para uso en UI\n            const errorData = error.response.data as any;\n            const errorMsg = errorData.detail || errorData.message || 'Error desconocido';\n\n            return Promise.reject({\n                message: errorMsg,\n                status: error.response.status,\n                code: errorData.code || 'ERROR'\n            });\n        }\n\n        // Error de red\n        if (error.request) {\n            return Promise.reject({\n                message: 'No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n.',\n                status: 0,\n                code: 'NETWORK_ERROR'\n            });\n        }\n\n        // Error general\n        return Promise.reject({\n            message: error.message || 'Ocurri√≥ un error al procesar la solicitud',\n            status: 500,\n            code: 'UNKNOWN_ERROR'\n        });\n    }\n);\n\n/**\n * Realiza una petici√≥n GET a la API\n * @param endpoint Endpoint de la API\n * @param params Par√°metros de la petici√≥n\n * @returns Promesa con la respuesta\n */\nexport async function fetchData(endpoint: string, params: Record<string, any> = {}): Promise<any> {\n  try {\n    // Construir la URL con los par√°metros\n    const queryParams = new URLSearchParams();\n    \n    // A√±adir par√°metros adicionales a la URL\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        queryParams.append(key, String(value));\n      }\n    });\n    \n    // Construir la URL seg√∫n el entorno\n    let url;\n    // En local, usamos el proxy\n    queryParams.append('endpoint', endpoint);\n    url = `${API_BASE_URL_LOCAL}/proxy?${queryParams.toString()}`;\n    \n    console.log(`üîç Fetching data:`, url);\n\n    const token = localStorage.getItem('token');\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n    };\n    \n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const response = await fetch(url, {\n      headers\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ message: response.statusText }));\n      console.error(`‚ùå Error ${response.status} en GET ${endpoint}:`, errorData);\n      throw new Error(errorData.message || `Error ${response.status}: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    console.log(`‚úÖ Respuesta GET ${endpoint}:`, data);\n    return data;\n  } catch (error: any) {\n    console.error(`‚ùå Error en fetchData (${endpoint}):`, error);\n    throw {\n      message: error.message || 'No se pudo conectar con el servidor. Por favor, verifica tu conexi√≥n.',\n      status: error.status || 0,\n      code: error.code || 'NETWORK_ERROR'\n    };\n  }\n}\n\n/**\n * Realiza una petici√≥n POST a la API\n * @param endpoint Endpoint de la API\n * @param data Datos a enviar\n * @param method M√©todo HTTP (POST, PUT, DELETE)\n * @returns Promesa con la respuesta\n */\nexport async function postData(endpoint: string, data: Record<string, any> = {}, method: string = 'POST'): Promise<any> {\n  try {\n    const token = localStorage.getItem('token');\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n    };\n    \n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    let url;\n    let requestBody;\n    \n    // En local, usamos el proxy\n    url = `${API_BASE_URL_LOCAL}/proxy`;\n    requestBody = JSON.stringify({\n      endpoint,\n      data,\n      method\n    });\n    \n    console.log(`üì§ ${method}:`, url, data);\n    \n    const response = await fetch(url, {\n      method: 'POST',\n      headers,\n      body: requestBody\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ message: response.statusText }));\n      console.error(`‚ùå Error ${response.status} en ${method} ${endpoint}:`, errorData);\n      throw new Error(errorData.message || errorData.detail || `Error ${response.status}: ${response.statusText}`);\n    }\n    \n    const responseData = await response.json();\n    console.log(`‚úÖ Respuesta ${method} ${endpoint}:`, responseData);\n    return responseData;\n  } catch (error: any) {\n    console.error(`‚ùå Error en ${method} (${endpoint}):`, error);\n    throw {\n      message: error.message || 'No se pudo conectar con el servidor. Por favor, verifica tu conexi√≥n.',\n      status: error.status || 0,\n      code: error.code || 'NETWORK_ERROR'\n    };\n  }\n}\n\n/**\n * Realiza una petici√≥n PATCH a la API\n * @param endpoint Endpoint de la API\n * @param data Datos a enviar\n * @returns Promesa con la respuesta\n */\nexport async function patchData(endpoint: string, data: Record<string, any> = {}): Promise<any> {\n  try {\n    const token = localStorage.getItem('token');\n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n    };\n    \n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    let url;\n    let requestBody = JSON.stringify(data);\n    \n    // En local, usamos el proxy\n    url = `${API_BASE_URL_LOCAL}${endpoint}`;\n    \n    console.log(`üîß PATCH:`, url, data);\n    \n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers,\n      body: requestBody\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({ message: response.statusText }));\n      console.error(`‚ùå Error ${response.status} en PATCH ${endpoint}:`, errorData);\n      throw new Error(errorData.message || errorData.detail || `Error ${response.status}: ${response.statusText}`);\n    }\n    \n    const responseData = await response.json();\n    console.log(`‚úÖ Respuesta PATCH ${endpoint}:`, responseData);\n    return responseData;\n  } catch (error: any) {\n    console.error(`Error en patchData (${endpoint}):`, error);\n    throw {\n      message: error.message || 'No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n.',\n      status: error.status || 0,\n      code: error.code || 'NETWORK_ERROR'\n    };\n  }\n}\n\n/**\n * Realiza una petici√≥n PUT a la API a trav√©s del proxy local\n * @param endpoint Endpoint de la API\n * @param data Datos a enviar\n * @returns Promesa con la respuesta\n */\nexport async function putData(endpoint: string, data: Record<string, any> = {}): Promise<any> {\n  return postData(endpoint, data, 'PUT');\n}\n\n/**\n * Realiza una petici√≥n DELETE a la API a trav√©s del proxy local\n * @param endpoint Endpoint de la API\n * @param data Datos a enviar\n * @returns Promesa con la respuesta\n */\nexport async function deleteData(endpoint: string, data: Record<string, any> = {}): Promise<any> {\n  return postData(endpoint, data, 'DELETE');\n}\n\n/**\n * Maneja los errores de la API de forma consistente\n * @param error Error capturado\n * @param setError Funci√≥n para establecer el error en el estado\n * @param defaultMessage Mensaje por defecto\n */\nexport function handleApiError(error: any, setError: (message: string) => void, defaultMessage: string = 'Ha ocurrido un error. Por favor, int√©ntelo de nuevo.'): void {\n  console.error('API Error:', error);\n  \n  if (error.code === 'NETWORK_ERROR') {\n    setError('No se pudo conectar con el servidor. Por favor, verifique su conexi√≥n.');\n  } else if (error.message) {\n    setError(error.message);\n  } else {\n    // Error general\n    setError(error.message || defaultMessage);\n  }\n}\n\n// Agregar los m√©todos al objeto api para mantener compatibilidad\napi.fetchData = fetchData;\napi.postData = postData;\napi.putData = putData;\napi.deleteData = deleteData;\napi.handleApiError = handleApiError;\napi.patchData = patchData;\n\nexport default api;"],"names":["environment","centralEnvironment","baseURL","CENTRAL_API_URL","useRelativeUrls","isProduction","API_BASE_URL_LOCAL","api","axios","API_TIMEOUT","API_DEFAULT_HEADERS","status","config","token","TOKEN_NAME","i","key","value","error","response","parsedData","e","rawData","errorData","errorMsg","fetchData","endpoint","params","queryParams","url","headers","data","postData","method","requestBody","responseData","patchData","putData","deleteData","handleApiError","setError","defaultMessage"],"mappings":"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"}