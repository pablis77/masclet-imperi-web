import{a as t}from"./apiService.DFT83caO.js";async function c(){try{return await t.get("listados/")}catch(a){return console.error("Error al obtener listados:",a),[]}}async function d(a){try{return await t.get(`listados/${a}`)}catch(e){return console.error(`Error al obtener listado ${a}:`,e),{}}}async function u(a){try{const e={nombre:a.name||"",descripcion:a.description||"",categoria:a.category||"",is_completed:a.is_completed||!1,animales:a.animals||[]};return await t.post("listados/",e)}catch(e){throw console.error("Error al crear listado:",e),e}}async function m(){try{console.log("Obteniendo animales desde el backend...");const a=[];let e=0;const r=1e3;let l=!0;for(;l;)try{const n=`animals/?offset=${e}&limit=${r}`;console.log(`Obteniendo lote de animales: ${n}`);const o=await t.get(n);let s=[];o&&typeof o=="object"&&(o.status==="success"&&o.data?Array.isArray(o.data)?s=o.data:o.data.items&&Array.isArray(o.data.items)&&(s=o.data.items):Array.isArray(o)&&(s=o)),console.log(`Obtenidos ${s.length} animales en esta p√°gina`),a.push(...s),s.length<r?(l=!1,console.log("No hay m√°s animales para obtener")):(e+=r,console.log(`Avanzando a offset=${e}`))}catch(n){console.error("Error al obtener p√°gina de animales:",n),l=!1}return console.log(`Total de animales obtenidos: ${a.length}`),a}catch(a){return console.error("Error al obtener animales:",a),[]}}async function f(a,e){try{console.log(`üìù Actualizando listado ${a}:`,e);const r=await t.put(`listados/${a}`,e);return console.log("‚úÖ Listado actualizado:",r),r}catch(r){throw console.error("‚ùå Error al actualizar listado:",r),r}}async function g(a,e){try{return await t.put(`listados/${a}/animales`,{animales:e})}catch(r){throw console.error(`Error al actualizar los animales del listado ${a}:`,r),r}}async function y(a){try{return await t.del(`listados/${a}`)}catch(e){throw console.error(`Error al eliminar el listado ${a}:`,e),e}}export{m as a,g as b,u as c,c as d,y as e,d as g,f as u};
