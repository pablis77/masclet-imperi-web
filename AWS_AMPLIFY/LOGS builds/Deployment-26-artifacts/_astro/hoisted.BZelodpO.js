import"./hoisted.BIV2cWaw.js";import"./LanguageSwitcher.astro_astro_type_script_index_0_lang.BhT4Hx0d.js";import"./authService.CvC7CJU-.js";import"./vendor.BAk4NxX6.js";document.addEventListener("DOMContentLoaded",function(){const d=document.querySelectorAll(".test-button"),f=document.getElementById("test-all-button"),l=document.getElementById("connection-log");function $(e){return JSON.stringify(e,null,2)}function o(e,n=!1){const t=new Date().toLocaleTimeString(),r=n?"text-red-600 dark:text-red-400":"";l.innerHTML=`<span class="text-gray-500">[${t}]</span> <span class="${r}">${e}</span>
`+l.innerHTML}async function u(e,n){const t=document.querySelectorAll(".endpoint-status")[n],r=document.querySelectorAll(".endpoint-result")[n],i=r.querySelector("div");t.textContent="Probando...",t.className="endpoint-status text-sm text-blue-500 dark:text-blue-400",o(`Iniciando petición a ${e}`);try{const c=new Date().getTime(),a=e.includes("?")?"&":"?",m=`${e}${a}_cache=${c}`,p={method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer token-desarrollo-12345"}},x=new AbortController,h=setTimeout(()=>x.abort(),5e3);p.signal=x.signal,o(`Enviando fetch: ${m}`);const s=await fetch(m,p);if(clearTimeout(h),o(`Respuesta recibida: Status ${s.status} ${s.statusText}`),!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const g=await s.json();return t.textContent=`Éxito (${s.status})`,t.className="endpoint-status text-sm text-green-600 dark:text-green-400",i.textContent=$(g),r.classList.remove("hidden"),o(`Datos recibidos correctamente (${Object.keys(g).length} propiedades)`),!0}catch(c){const a=c.name==="AbortError"?"Tiempo de espera agotado (5s)":c.message;return t.textContent=`Error: ${a}`,t.className="endpoint-status text-sm text-red-600 dark:text-red-400",i.textContent=`Error: ${a}`,r.classList.remove("hidden"),o(`Error en petición: ${a}`,!0),!1}}d.forEach(e=>{e.addEventListener("click",function(){const n=this.getAttribute("data-url"),t=parseInt(this.getAttribute("data-index"));u(n,t)})}),f.addEventListener("click",async function(){o("Iniciando prueba de todos los endpoints...");const e=Array.from(d).map(t=>({url:t.getAttribute("data-url"),index:parseInt(t.getAttribute("data-index"))}));let n=0;for(const t of e)await u(t.url,t.index)&&n++,await new Promise(i=>setTimeout(i,500));o(`Prueba completa: ${n} de ${e.length} endpoints funcionando correctamente`)})});
