{"version":3,"file":"ProfileManagement.DIl2-pb6.js","sources":["../../../src/components/profile/ProfileManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getStoredUser, isAuthenticated } from '../../services/authService';\nimport type { User, UserRole } from '../../services/authService';\nimport { getCurrentRole } from '../../services/roleService';\nimport { jwtDecode } from 'jwt-decode';\n\nexport const ProfileManagement: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n  \n  // Estado para el formulario de cambio de contrase침a\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordError, setPasswordError] = useState<string | null>(null);\n  const [currentRole, setCurrentRole] = useState('');\n\n  useEffect(() => {\n    // Verificamos que el usuario est칠 autenticado\n    if (!isAuthenticated()) {\n      setError('Debes iniciar sesi칩n para ver esta p치gina');\n      setLoading(false);\n      return;\n    }\n\n    // Obtenemos la informaci칩n del usuario actual\n    let user = getStoredUser();\n    \n    // Usamos SOLO la informaci칩n del token JWT para determinar el usuario\n    const tokenData = localStorage.getItem('token');\n    \n    if (tokenData) {\n      try {\n        // Decodificar el token JWT para obtener la informaci칩n real del usuario\n        const decoded = jwtDecode<{ sub?: string; role?: string }>(tokenData);\n        console.log('Token JWT decodificado:', decoded);\n        \n        const tokenUsername = decoded.sub || '';\n        const tokenRole = decoded.role || '';\n        \n        // Si el token indica que es Ramon, usar datos de Ramon\n        if (tokenUsername === 'Ramon' || tokenRole === 'Ramon') {\n          console.log('游닇 Usuario Ramon detectado en el token JWT - usando datos reales');\n          user = {\n            id: 14, // ID real de Ramon seg칰n se verific칩 en la base de datos\n            username: 'Ramon',\n            email: 'ramon@prueba.com', // Email correcto seg칰n la base de datos\n            // Eliminamos el campo full_name que no existe realmente en la DB\n            role: 'Ramon' as UserRole,\n            is_active: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n          \n          // Actualizamos localStorage con los datos correctos\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('userRole', 'Ramon'); \n          localStorage.setItem('username', 'Ramon');\n        } \n        // Si el token indica que es admin u otro usuario\n        else {\n          console.log(`游닇 Usuario ${tokenUsername} detectado en el token JWT - usando datos del token`);\n          user = {\n            id: 1, // ID provisional\n            username: tokenUsername,\n            email: `${tokenUsername.toLowerCase()}@mascletimperi.com`,\n            // Eliminamos el campo full_name que no existe realmente en la DB\n            role: (tokenRole as UserRole) || 'usuario',\n            is_active: true,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString()\n          };\n          \n          // Actualizar localStorage para mantener coherencia\n          localStorage.setItem('user', JSON.stringify(user));\n          localStorage.setItem('userRole', tokenRole); \n          localStorage.setItem('username', tokenUsername);\n        }\n      } catch (err) {\n        console.error('Error al procesar el token JWT:', err);\n      }\n    }\n    \n    if (!user) {\n      setError('No se pudo obtener la informaci칩n del usuario');\n      setLoading(false);\n      return;\n    }\n\n    // Aseguramos que el rol sea correcto para los usuarios espec칤ficos\n    if (user) {\n      if (user.username === 'admin' && user.role !== 'administrador') {\n        console.log('Corrigiendo rol para usuario admin de:', user.role, 'a: administrador');\n        user.role = 'administrador';\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n      \n      // Asegurarse que Ramon siempre tiene el rol correcto\n      if (user.username === 'Ramon' && user.role !== 'Ramon') {\n        console.log('Corrigiendo rol para usuario Ramon de:', user.role, 'a: Ramon');\n        user.role = 'Ramon' as UserRole;\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('ramonFix', 'true'); // Marcar indicador\n        localStorage.setItem('userRole', 'Ramon');\n      }\n    }\n\n    // Obtener el rol actualizado\n    const actualRole = getCurrentRole();\n    console.log('Rol actual detectado:', actualRole);\n\n    setCurrentUser(user);\n    setCurrentRole(actualRole);\n    setLoading(false);\n  }, []);\n\n  const handlePasswordChange = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validaci칩n b치sica\n    if (!oldPassword || !newPassword || !confirmPassword) {\n      setPasswordError('Todos los campos son obligatorios');\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setPasswordError('Las nuevas contrase침as no coinciden');\n      return;\n    }\n\n    if (newPassword.length < 8) {\n      setPasswordError('La nueva contrase침a debe tener al menos 8 caracteres');\n      return;\n    }\n\n    setPasswordError(null);\n    setLoading(true);\n    \n    try {\n      // Hacer la petici칩n al backend para cambiar la contrase침a\n      const response = await fetch('/api/v1/users/me/password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          current_password: oldPassword,\n          new_password: newPassword\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Error al cambiar la contrase침a');\n      }\n\n      // Limpiar formulario y mostrar mensaje de 칠xito\n      setOldPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      setSuccess('Contrase침a actualizada correctamente');\n      \n      // Ocultar mensaje de 칠xito despu칠s de 5 segundos\n      setTimeout(() => {\n        setSuccess(null);\n      }, 5000);\n    } catch (err) {\n      setPasswordError((err as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center p-4\">Cargando...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <strong className=\"font-bold\">Error:</strong>\n        <span className=\"block sm:inline\"> {error}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6\">\n      {currentUser && (\n        <>\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Informaci칩n del usuario</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm text-gray-600\">Nombre de usuario</p>\n                <p className=\"font-medium\">{currentUser?.username}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Correo electr칩nico</p>\n                <p className=\"font-medium\">{currentUser?.email}</p>\n              </div>\n              {/* Campo Nombre completo eliminado - no existe en la DB */}\n              <div>\n                <p className=\"text-sm text-gray-600\">Rol</p>\n                <p className=\"font-medium\">{currentUser?.role}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"border-t pt-6\">\n            <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Cambiar contrase침a</h2>\n            \n            {success && (\n              <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n                <span className=\"block sm:inline\">{success}</span>\n              </div>\n            )}\n            \n            {passwordError && (\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\" role=\"alert\">\n                <span className=\"block sm:inline\">{passwordError}</span>\n              </div>\n            )}\n            \n            <form onSubmit={handlePasswordChange}>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"oldPassword\">\n                  Contrase침a actual\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"oldPassword\"\n                  type=\"password\"\n                  value={oldPassword}\n                  onChange={(e) => setOldPassword(e.target.value)}\n                  placeholder=\"Ingresa tu contrase침a actual\"\n                />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"newPassword\">\n                  Nueva contrase침a\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"newPassword\"\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  placeholder=\"Ingresa tu nueva contrase침a\"\n                />\n              </div>\n              \n              <div className=\"mb-6\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\n                  Confirmar nueva contrase침a\n                </label>\n                <input\n                  className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  placeholder=\"Confirma tu nueva contrase침a\"\n                />\n              </div>\n              \n              <div className=\"flex items-center justify-end\">\n                <button\n                  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline disabled:opacity-50\"\n                  type=\"submit\"\n                  disabled={loading}\n                >\n                  {loading ? 'Procesando...' : 'Cambiar contrase침a'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n"],"names":["ProfileManagement","currentUser","setCurrentUser","useState","loading","setLoading","error","setError","success","setSuccess","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","currentRole","setCurrentRole","useEffect","isAuthenticated","user","getStoredUser","tokenData","decoded","jwtDecode","tokenUsername","tokenRole","err","actualRole","getCurrentRole","handlePasswordChange","e","response","errorData","jsx","jsxs","Fragment"],"mappings":"0JAMO,MAAMA,EAA8B,IAAM,CAC/C,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAsB,IAAI,EAC1D,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAwB,IAAI,EAChD,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAwB,IAAI,EAGpD,CAACO,EAAaC,CAAc,EAAIR,EAAAA,SAAS,EAAE,EAC3C,CAACS,EAAaC,CAAc,EAAIV,EAAAA,SAAS,EAAE,EAC3C,CAACW,EAAiBC,CAAkB,EAAIZ,EAAAA,SAAS,EAAE,EACnD,CAACa,EAAeC,CAAgB,EAAId,EAAAA,SAAwB,IAAI,EAChE,CAACe,EAAaC,CAAc,EAAIhB,EAAAA,SAAS,EAAE,EAEjDiB,EAAAA,UAAU,IAAM,CAEV,GAAA,CAACC,IAAmB,CACtBd,EAAS,2CAA2C,EACpDF,EAAW,EAAK,EAChB,MAAA,CAIF,IAAIiB,EAAOC,EAAc,EAGnB,MAAAC,EAAY,aAAa,QAAQ,OAAO,EAE9C,GAAIA,EACE,GAAA,CAEI,MAAAC,EAAUC,EAA2CF,CAAS,EAC5D,QAAA,IAAI,0BAA2BC,CAAO,EAExC,MAAAE,EAAgBF,EAAQ,KAAO,GAC/BG,EAAYH,EAAQ,MAAQ,GAG9BE,IAAkB,SAAWC,IAAc,SAC7C,QAAQ,IAAI,kEAAkE,EACvEN,EAAA,CACL,GAAI,GACJ,SAAU,QACV,MAAO,mBAEP,KAAM,QACN,UAAW,GACX,WAAY,IAAI,KAAK,EAAE,YAAY,EACnC,WAAY,IAAI,KAAK,EAAE,YAAY,CACrC,EAGA,aAAa,QAAQ,OAAQ,KAAK,UAAUA,CAAI,CAAC,EACpC,aAAA,QAAQ,WAAY,OAAO,EAC3B,aAAA,QAAQ,WAAY,OAAO,IAIhC,QAAA,IAAI,cAAcK,CAAa,qDAAqD,EACrFL,EAAA,CACL,GAAI,EACJ,SAAUK,EACV,MAAO,GAAGA,EAAc,YAAA,CAAa,qBAErC,KAAOC,GAA0B,UACjC,UAAW,GACX,WAAY,IAAI,KAAK,EAAE,YAAY,EACnC,WAAY,IAAI,KAAK,EAAE,YAAY,CACrC,EAGA,aAAa,QAAQ,OAAQ,KAAK,UAAUN,CAAI,CAAC,EACpC,aAAA,QAAQ,WAAYM,CAAS,EAC7B,aAAA,QAAQ,WAAYD,CAAa,SAEzCE,EAAK,CACJ,QAAA,MAAM,kCAAmCA,CAAG,CAAA,CAIxD,GAAI,CAACP,EAAM,CACTf,EAAS,+CAA+C,EACxDF,EAAW,EAAK,EAChB,MAAA,CAIEiB,IACEA,EAAK,WAAa,SAAWA,EAAK,OAAS,kBAC7C,QAAQ,IAAI,yCAA0CA,EAAK,KAAM,kBAAkB,EACnFA,EAAK,KAAO,gBACZ,aAAa,QAAQ,OAAQ,KAAK,UAAUA,CAAI,CAAC,GAI/CA,EAAK,WAAa,SAAWA,EAAK,OAAS,UAC7C,QAAQ,IAAI,yCAA0CA,EAAK,KAAM,UAAU,EAC3EA,EAAK,KAAO,QACZ,aAAa,QAAQ,OAAQ,KAAK,UAAUA,CAAI,CAAC,EACpC,aAAA,QAAQ,WAAY,MAAM,EAC1B,aAAA,QAAQ,WAAY,OAAO,IAK5C,MAAMQ,EAAaC,EAAe,EAC1B,QAAA,IAAI,wBAAyBD,CAAU,EAE/C5B,EAAeoB,CAAI,EACnBH,EAAeW,CAAU,EACzBzB,EAAW,EAAK,CAClB,EAAG,EAAE,EAEC,MAAA2B,EAAuB,MAAOC,GAAuB,CAIzD,GAHAA,EAAE,eAAe,EAGb,CAACvB,GAAe,CAACE,GAAe,CAACE,EAAiB,CACpDG,EAAiB,mCAAmC,EACpD,MAAA,CAGF,GAAIL,IAAgBE,EAAiB,CACnCG,EAAiB,qCAAqC,EACtD,MAAA,CAGE,GAAAL,EAAY,OAAS,EAAG,CAC1BK,EAAiB,sDAAsD,EACvE,MAAA,CAGFA,EAAiB,IAAI,EACrBZ,EAAW,EAAI,EAEX,GAAA,CAEI,MAAA6B,EAAW,MAAM,MAAM,4BAA6B,CACxD,OAAQ,MACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAU,aAAa,QAAQ,OAAO,CAAC,EAC1D,EACA,KAAM,KAAK,UAAU,CACnB,iBAAkBxB,EAClB,aAAcE,CACf,CAAA,CAAA,CACF,EAEG,GAAA,CAACsB,EAAS,GAAI,CACV,MAAAC,EAAY,MAAMD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMC,EAAU,QAAU,gCAAgC,CAAA,CAItExB,EAAe,EAAE,EACjBE,EAAe,EAAE,EACjBE,EAAmB,EAAE,EACrBN,EAAW,sCAAsC,EAGjD,WAAW,IAAM,CACfA,EAAW,IAAI,GACd,GAAI,QACAoB,EAAK,CACZZ,EAAkBY,EAAc,OAAO,CAAA,QACvC,CACAxB,EAAW,EAAK,CAAA,CAEpB,EAEA,OAAID,EACMgC,EAAAA,IAAA,MAAA,CAAI,UAAU,kBAAkB,SAAW,cAAA,EAGjD9B,EAEC+B,EAAAA,KAAA,MAAA,CAAI,UAAU,2EAA2E,KAAK,QAC7F,SAAA,CAACD,EAAA,IAAA,SAAA,CAAO,UAAU,YAAY,SAAM,SAAA,EACpCC,EAAAA,KAAC,OAAK,CAAA,UAAU,kBAAkB,SAAA,CAAA,IAAE/B,CAAA,CAAM,CAAA,CAAA,EAC5C,EAKD8B,MAAA,MAAA,CAAI,UAAU,oCACZ,YAEGC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAuB,0BAAA,EAChFC,EAAAA,KAAC,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACD,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAiB,oBAAA,EACrDA,EAAA,IAAA,IAAA,CAAE,UAAU,cAAe,YAAa,QAAS,CAAA,CAAA,EACpD,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAkB,qBAAA,EACtDA,EAAA,IAAA,IAAA,CAAE,UAAU,cAAe,YAAa,KAAM,CAAA,CAAA,EACjD,SAEC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,IAAA,CAAE,UAAU,wBAAwB,SAAG,MAAA,EACvCA,EAAA,IAAA,IAAA,CAAE,UAAU,cAAe,YAAa,IAAK,CAAA,CAAA,CAChD,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EAEAC,EAAAA,KAAC,MAAI,CAAA,UAAU,gBACb,SAAA,CAACD,EAAA,IAAA,KAAA,CAAG,UAAU,2CAA2C,SAAkB,qBAAA,EAE1E5B,GACC4B,EAAA,IAAC,MAAI,CAAA,UAAU,sFAAsF,KAAK,QACxG,SAAAA,EAAAA,IAAC,OAAK,CAAA,UAAU,kBAAmB,SAAA5B,CAAQ,CAAA,EAC7C,EAGDQ,GACCoB,EAAA,IAAC,MAAI,CAAA,UAAU,gFAAgF,KAAK,QAClG,SAAAA,EAAAA,IAAC,OAAK,CAAA,UAAU,kBAAmB,SAAApB,CAAc,CAAA,EACnD,EAGFqB,EAAAA,KAAC,OAAK,CAAA,SAAUL,EACd,SAAA,CAACK,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAD,MAAC,QAAM,CAAA,UAAU,6CAA6C,QAAQ,cAAc,SAEpF,oBAAA,EACAA,EAAA,IAAC,QAAA,CACC,UAAU,6HACV,GAAG,cACH,KAAK,WACL,MAAO1B,EACP,SAAWuB,GAAMtB,EAAesB,EAAE,OAAO,KAAK,EAC9C,YAAY,8BAAA,CAAA,CACd,EACF,EAEAI,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAD,MAAC,QAAM,CAAA,UAAU,6CAA6C,QAAQ,cAAc,SAEpF,mBAAA,EACAA,EAAA,IAAC,QAAA,CACC,UAAU,6HACV,GAAG,cACH,KAAK,WACL,MAAOxB,EACP,SAAWqB,GAAMpB,EAAeoB,EAAE,OAAO,KAAK,EAC9C,YAAY,6BAAA,CAAA,CACd,EACF,EAEAI,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAD,MAAC,QAAM,CAAA,UAAU,6CAA6C,QAAQ,kBAAkB,SAExF,6BAAA,EACAA,EAAA,IAAC,QAAA,CACC,UAAU,6HACV,GAAG,kBACH,KAAK,WACL,MAAOtB,EACP,SAAWmB,GAAMlB,EAAmBkB,EAAE,OAAO,KAAK,EAClD,YAAY,8BAAA,CAAA,CACd,EACF,EAEAG,EAAAA,IAAC,MAAI,CAAA,UAAU,gCACb,SAAAA,EAAA,IAAC,SAAA,CACC,UAAU,mIACV,KAAK,SACL,SAAUhC,EAET,WAAU,gBAAkB,oBAAA,CAAA,CAEjC,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAEJ,CAAA,CAEJ"}