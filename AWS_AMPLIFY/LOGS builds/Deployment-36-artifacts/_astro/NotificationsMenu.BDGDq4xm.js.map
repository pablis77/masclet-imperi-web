{"version":3,"file":"NotificationsMenu.BDGDq4xm.js","sources":["../../../src/components/notifications/NotificationsMenu.js"],"sourcesContent":["/**\n * Componente para gestionar las notificaciones del sistema\n * Este componente muestra el icono de campana y el men√∫ desplegable con las notificaciones\n */\n\n// Importar el servicio de notificaciones\nimport { notificationService } from '../../services/notificationService';\n\n// Configurar el componente\nfunction initializeNotifications() {\n  const notificationsButton = document.getElementById('notifications-button');\n  const notificationsMenu = document.getElementById('notifications-menu');\n  const notificationsCount = document.querySelector('#notifications-button .absolute');\n  const notificationsContainer = document.querySelector('#notifications-menu .max-h-80');\n  const markAllReadButton = document.getElementById('mark-all-read');\n  const notificationTitle = document.querySelector('#notifications-menu .font-bold');\n  \n  if (!notificationsButton || !notificationsMenu || !notificationsCount || \n      !notificationsContainer || !markAllReadButton || !notificationTitle) {\n    console.error('No se encontraron todos los elementos necesarios para las notificaciones');\n    return;\n  }\n\n  // Activar/desactivar el men√∫ de notificaciones\n  notificationsButton.addEventListener('click', () => {\n    notificationsMenu.classList.toggle('hidden');\n    \n    // Si el men√∫ est√° visible, actualizar las notificaciones\n    if (!notificationsMenu.classList.contains('hidden')) {\n      refreshNotifications();\n    }\n  });\n\n  // Cerrar el men√∫ al hacer clic fuera de √©l\n  document.addEventListener('click', (e) => {\n    if (!notificationsButton.contains(e.target) && !notificationsMenu.contains(e.target)) {\n      notificationsMenu.classList.add('hidden');\n    }\n  });\n\n  // Marcar todas como le√≠das\n  markAllReadButton.addEventListener('click', async () => {\n    await notificationService.markAllAsRead();\n    refreshNotifications();\n  });\n\n  // Actualizar el contador y contenido de notificaciones\n  function updateNotificationsUI(data) {\n    // Actualizar contador\n    const unreadCount = data.unread_count;\n    notificationsCount.textContent = unreadCount;\n    \n    // Mostrar/ocultar contador seg√∫n haya notificaciones o no\n    if (unreadCount === 0) {\n      notificationsCount.classList.add('hidden');\n    } else {\n      notificationsCount.classList.remove('hidden');\n    }\n    \n    // T√≠tulo seg√∫n idioma\n    const lang = document.documentElement.lang || 'es';\n    notificationTitle.textContent = lang === 'ca' ? 'Alertes del sistema' : 'Alertas del sistema';\n    \n    // Actualizar contenido de notificaciones\n    updateNotificationsList(data.items);\n  }\n\n  // Actualizar lista de notificaciones\n  function updateNotificationsList(notifications) {\n    // Limpiar contenedor\n    notificationsContainer.innerHTML = '';\n    \n    // Si no hay notificaciones, mostrar mensaje\n    if (notifications.length === 0) {\n      const emptyMessage = document.createElement('div');\n      emptyMessage.className = 'p-4 text-center text-gray-500 dark:text-gray-400';\n      emptyMessage.textContent = document.documentElement.lang === 'ca' \n        ? 'No hi ha notificacions' \n        : 'No hay notificaciones';\n      notificationsContainer.appendChild(emptyMessage);\n      return;\n    }\n    \n    // Crear elementos para cada notificaci√≥n\n    notifications.forEach(notification => {\n      const notificationElement = createNotificationElement(notification);\n      notificationsContainer.appendChild(notificationElement);\n    });\n  }\n\n  // Crear elemento HTML para una notificaci√≥n\n  function createNotificationElement(notification) {\n    const container = document.createElement('div');\n    container.className = `p-3 border-b border-gray-100 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 ${notification.read ? 'opacity-70' : ''}`;\n    \n    // Definir color de fondo seg√∫n tipo\n    let bgColorClass = 'bg-blue-100 dark:bg-blue-900/30';\n    let textColorClass = 'text-blue-600 dark:text-blue-400';\n    \n    switch (notification.type) {\n      case 'system':\n        bgColorClass = 'bg-amber-100 dark:bg-amber-900/30';\n        textColorClass = 'text-amber-600 dark:text-amber-400';\n        break;\n      case 'backup':\n        bgColorClass = 'bg-green-100 dark:bg-green-900/30';\n        textColorClass = 'text-green-600 dark:text-green-400';\n        break;\n      case 'animal':\n        bgColorClass = 'bg-blue-100 dark:bg-blue-900/30';\n        textColorClass = 'text-blue-600 dark:text-blue-400';\n        break;\n      case 'import':\n        bgColorClass = 'bg-purple-100 dark:bg-purple-900/30';\n        textColorClass = 'text-purple-600 dark:text-purple-400';\n        break;\n      default:\n        break;\n    }\n    \n    container.innerHTML = `\n      <div class=\"flex items-start\">\n        <div class=\"flex-shrink-0 ${bgColorClass} p-2 rounded-full\">\n          <span class=\"${textColorClass} text-sm\">${notification.icon}</span>\n        </div>\n        <div class=\"ml-3 flex-1\">\n          <p class=\"text-sm font-medium text-gray-700 dark:text-gray-200\">${notification.title}</p>\n          <p class=\"text-xs text-gray-500 dark:text-gray-400\">${notification.message}</p>\n          <p class=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">${notification.relative_time}</p>\n        </div>\n        <div class=\"ml-2 flex flex-col gap-1\">\n          <button class=\"mark-read-btn text-xs text-primary hover:text-primary-dark p-1\" data-id=\"${notification.id}\" title=\"Marcar como le√≠da\">\n            ${notification.read ? '‚úì' : 'üëÅÔ∏è'}\n          </button>\n          <button class=\"delete-btn text-xs text-red-500 hover:text-red-700 p-1\" data-id=\"${notification.id}\" title=\"Eliminar\">\n            üóëÔ∏è\n          </button>\n        </div>\n      </div>\n    `;\n    \n    // A√±adir event listeners\n    container.querySelector('.mark-read-btn').addEventListener('click', async (e) => {\n      e.stopPropagation();\n      const id = parseInt(e.currentTarget.getAttribute('data-id'));\n      await notificationService.markAsRead(id);\n      refreshNotifications();\n    });\n    \n    container.querySelector('.delete-btn').addEventListener('click', async (e) => {\n      e.stopPropagation();\n      const id = parseInt(e.currentTarget.getAttribute('data-id'));\n      await notificationService.deleteNotification(id);\n      refreshNotifications();\n    });\n    \n    // Marcar como le√≠da al hacer clic en la notificaci√≥n\n    container.addEventListener('click', async () => {\n      if (!notification.read) {\n        await notificationService.markAsRead(notification.id);\n        refreshNotifications();\n      }\n      \n      // Redirigir seg√∫n el tipo de notificaci√≥n\n      handleNotificationClick(notification);\n    });\n    \n    return container;\n  }\n\n  // Manejar clic en notificaci√≥n\n  function handleNotificationClick(notification) {\n    // Cerrar el men√∫\n    notificationsMenu.classList.add('hidden');\n    \n    // Redirigir seg√∫n el tipo de notificaci√≥n y entidad relacionada\n    switch (notification.type) {\n      case 'animal':\n        if (notification.related_entity_id) {\n          window.location.href = `/animals/${notification.related_entity_id}`;\n        } else {\n          window.location.href = '/animals';\n        }\n        break;\n      case 'backup':\n        window.location.href = '/backup';\n        break;\n      case 'import':\n        window.location.href = '/imports';\n        break;\n      case 'system':\n        // No hacer nada especial para notificaciones del sistema\n        break;\n      default:\n        break;\n    }\n  }\n\n  // Actualizar notificaciones desde el servidor\n  async function refreshNotifications() {\n    try {\n      await notificationService.getNotifications(false, 10, 0);\n    } catch (error) {\n      console.error('Error al actualizar notificaciones:', error);\n    }\n  }\n\n  // Suscribirse a cambios en las notificaciones\n  notificationService.subscribe(updateNotificationsUI);\n  \n  // Iniciar polling de notificaciones\n  notificationService.startPolling(60000); // Actualizar cada minuto\n  \n  // Cargar notificaciones iniciales\n  refreshNotifications();\n  \n  // Bot√≥n de prueba para desarrollo (solo visible en entorno de desarrollo)\n  if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n    const testButton = document.createElement('button');\n    testButton.textContent = 'Crear notificaciones de prueba';\n    testButton.className = 'w-full mt-2 text-xs text-primary bg-primary/10 hover:bg-primary/20 py-1 rounded';\n    testButton.addEventListener('click', async () => {\n      await notificationService.createTestNotifications();\n    });\n    \n    const container = document.querySelector('#notifications-menu .p-2');\n    if (container) {\n      container.appendChild(testButton);\n    }\n  }\n}\n\n// Exportar la funci√≥n de inicializaci√≥n\nexport default initializeNotifications;\n"],"names":["initializeNotifications","notificationsButton","notificationsMenu","notificationsCount","notificationsContainer","markAllReadButton","notificationTitle","refreshNotifications","notificationService","updateNotificationsUI","data","unreadCount","lang","updateNotificationsList","notifications","emptyMessage","notification","notificationElement","createNotificationElement","container","bgColorClass","textColorClass","e","id","handleNotificationClick","error","testButton"],"mappings":"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"}