{"version":3,"file":"hoisted.B4QE83rU.js","sources":["../../../src/pages/imports/index.astro?astro&type=script&index=0&lang.ts","../../../src/pages/imports/index.astro?astro&type=script&index=1&lang.ts"],"sourcesContent":["  // Script para manejar la actualización del historial después de una importación\n  document.addEventListener('DOMContentLoaded', () => {\n    const importForm = document.querySelector('import-form');\n    const importHistory = document.querySelector('import-history');\n    \n    // Botones de acción\n    const resetBtn = document.getElementById('reset-import');\n    const importBtn = document.getElementById('import-btn');\n    \n    // Función para actualizar el historial\n    const refreshHistory = () => {\n      if (importHistory) {\n        // Disparar un evento para actualizar el historial\n        const event = new CustomEvent('refresh-history');\n        importHistory.dispatchEvent(event);\n      }\n    };\n    \n    // Escuchar eventos de importación completada\n    if (importForm) {\n      importForm.addEventListener('import-complete', () => {\n        // Esperar un momento para que el backend procese la importación\n        setTimeout(refreshHistory, 1000);\n      });\n    }\n    \n    // Conectar botones con el componente React\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        document.dispatchEvent(new CustomEvent('reset-import'));\n      });\n    }\n    \n    if (importBtn) {\n      importBtn.addEventListener('click', () => {\n        document.dispatchEvent(new CustomEvent('import-btn-click'));\n      });\n    }\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","    // Obtener el idioma del usuario del localStorage\n    document.addEventListener('DOMContentLoaded', function() {\n      const updateLanguage = () => {\n        const userLang = localStorage.getItem('userLanguage') || 'es';\n        \n        // Textos traducibles\n        const translations = {\n          es: {\n            title: \"Importación de Datos\",\n            subtitle: \"Importa datos masivos desde archivos CSV - Todos los derechos reservados\",\n            importAnimals: \"Importar Animales\",\n            selectFile: \"Selecciona un archivo CSV con el formato correcto para importar animales al sistema.\",\n            downloadTemplate: \"Descargar Plantilla\",\n            reset: \"Reiniciar\",\n            import: \"Importar\"\n          },\n          ca: {\n            title: \"Importació de Dades\",\n            subtitle: \"Importa dades massives des d'arxius CSV - Tots els drets reservats\",\n            importAnimals: \"Importar Animals\",\n            selectFile: \"Selecciona un arxiu CSV amb el format correcte per importar animals al sistema.\",\n            downloadTemplate: \"Descarregar Plantilla\",\n            reset: \"Reiniciar\",\n            import: \"Importar\"\n          }\n        };\n        \n        // Aplicar traducciones\n        document.getElementById('imports-title').textContent = translations[userLang].title;\n        document.getElementById('imports-subtitle').textContent = translations[userLang].subtitle;\n        document.getElementById('import-animals-title').textContent = translations[userLang].importAnimals;\n        document.getElementById('import-animals-desc').textContent = translations[userLang].selectFile;\n        document.getElementById('download-template').textContent = translations[userLang].downloadTemplate;\n        document.getElementById('reset-text').textContent = translations[userLang].reset;\n        document.getElementById('import-text').textContent = translations[userLang].import;\n      };\n      \n      // Actualizar idioma inmediatamente\n      updateLanguage();\n      \n      // Escuchar cambios de idioma\n      window.addEventListener('storage', function(e) {\n        if (e.key === 'userLanguage') {\n          updateLanguage();\n        }\n      });\n    });\n  \n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["importForm","importHistory","resetBtn","importBtn","refreshHistory","event","updateLanguage","userLang","translations","e"],"mappings":"uIA8RE,SAAS,iBAAiB,mBAAoB,IAAM,CAC5C,MAAAA,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAgB,SAAS,cAAc,gBAAgB,EAGvDC,EAAW,SAAS,eAAe,cAAc,EACjDC,EAAY,SAAS,eAAe,YAAY,EAGhDC,EAAiB,IAAM,CAC3B,GAAIH,EAAe,CAEX,MAAAI,EAAQ,IAAI,YAAY,iBAAiB,EAC/CJ,EAAc,cAAcI,CAAK,CACnC,CACF,EAGIL,GACSA,EAAA,iBAAiB,kBAAmB,IAAM,CAEnD,WAAWI,EAAgB,GAAI,EAChC,EAICF,GACOA,EAAA,iBAAiB,QAAS,IAAM,CACvC,SAAS,cAAc,IAAI,YAAY,cAAc,CAAC,EACvD,EAGCC,GACQA,EAAA,iBAAiB,QAAS,IAAM,CACxC,SAAS,cAAc,IAAI,YAAY,kBAAkB,CAAC,EAC3D,CAEL,CAAC,ECtJC,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,MAAMG,EAAiB,IAAM,CAC3B,MAAMC,EAAW,aAAa,QAAQ,cAAc,GAAK,KAGnDC,EAAe,CACnB,GAAI,CACF,MAAO,uBACP,SAAU,2EACV,cAAe,oBACf,WAAY,uFACZ,iBAAkB,sBAClB,MAAO,YACP,OAAQ,UACV,EACA,GAAI,CACF,MAAO,sBACP,SAAU,qEACV,cAAe,mBACf,WAAY,kFACZ,iBAAkB,wBAClB,MAAO,YACP,OAAQ,UACV,CACF,EAGA,SAAS,eAAe,eAAe,EAAE,YAAcA,EAAaD,CAAQ,EAAE,MAC9E,SAAS,eAAe,kBAAkB,EAAE,YAAcC,EAAaD,CAAQ,EAAE,SACjF,SAAS,eAAe,sBAAsB,EAAE,YAAcC,EAAaD,CAAQ,EAAE,cACrF,SAAS,eAAe,qBAAqB,EAAE,YAAcC,EAAaD,CAAQ,EAAE,WACpF,SAAS,eAAe,mBAAmB,EAAE,YAAcC,EAAaD,CAAQ,EAAE,iBAClF,SAAS,eAAe,YAAY,EAAE,YAAcC,EAAaD,CAAQ,EAAE,MAC3E,SAAS,eAAe,aAAa,EAAE,YAAcC,EAAaD,CAAQ,EAAE,MAC9E,EAGeD,EAAA,EAGR,OAAA,iBAAiB,UAAW,SAASG,EAAG,CACzCA,EAAE,MAAQ,gBACGH,EAAA,EAElB,CACH,CAAC"}