{"version":3,"mappings":"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","names":["ExplotacionesPage","currentLang","setCurrentLang","useState","useEffect","storedLang","handleLangChange","e","explotacionesData","setExplotacionesData","displayExplotaciones","setDisplayExplotaciones","searchTerm","setSearchTerm","loading","setLoading","error","setError","currentExplotacion","setCurrentExplotacion","allAnimals","setAllAnimals","filteredAnimals","setFilteredAnimals","activeCategory","setActiveCategory","stats","setStats","isMobileView","setIsMobileView","sortField","setSortField","sortDirection","setSortDirection","loadInitialData","checkScreenWidth","isMobile","sortExplotaciones","explotaciones","a","b","aTotal","bTotal","dataToDisplay","exp","filterAnimalsByCategory","apiService","response","explotacionesMap","animal","explotacionesDataArray","animales","toros","vacas","toros_activos","vacas_activas","vacasAletar1","vacasAletar2","amamantando","noAmamantando","partosAprox","terneros","total_animales_activos","updatedExplotacionesData","dashboardEndpoint","explotacionData","statsEndpoint","statsData","updatedExp","partos","handleSearch","filteredExplotaciones","showExplotacionDetail","handleClear","explotacionCode","endpoint","animals","newStats","detailView","cardsView","titleElement","handleBack","category","filtered","renderAnimalTable","jsx","jsxs","exportToPDF","jsPDF","n","autoTable","__vitePreload","doc","title","columns","data","aAlletar","bAlletar","codigo","fechaNacimiento","fecha","dia","mes","anio","date","resumenStartY","logoUrl","logoHeight","pageWidth","logoX","logoY","logoSize","totalAnimales","animalesActivos","torosActivos","vacasActivas","total","alletar","pageCount","i","fileName","Fragment"],"ignoreList":[],"sources":["../../../src/components/explotaciones-react/ExplotacionesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// Mantenemos solo la importación necesaria sin CSS adicional\nimport apiService from '../../services/apiService';\nimport { t } from '../../i18n/config';\n\n// Tipos para los datos\ninterface ExplotacionInfo {\n  explotacio: string;\n  total_animales?: number;\n  total_animales_activos?: number;\n  toros?: number;\n  toros_activos?: number;\n  vacas?: number;\n  vacas_activas?: number;\n  alletar_0?: number;\n  alletar_1?: number;\n  alletar_2?: number;\n  alletar_0_activas?: number;\n  alletar_1_activas?: number;\n  alletar_2_activas?: number;\n  partos?: number;\n  ratio?: number | string;\n  amamantando?: number;\n  noAmamantando?: number;\n  terneros?: number;\n  total?: number;\n  animales?: any[];\n}\n\ninterface Animal {\n  id: number;\n  nom: string;\n  explotacio: string;\n  genere: 'M' | 'F';\n  estado: 'OK' | 'DEF';\n  alletar?: string | number | null;\n  dob?: string;\n  [key: string]: any;\n}\n\nconst ExplotacionesPage: React.FC = () => {\n  // Estado para el idioma actual\n  const [currentLang, setCurrentLang] = useState('es');\n\n  // Efecte para obtener y manejar el idioma\n  useEffect(() => {\n    // Obtener el idioma inicial\n    const storedLang = localStorage.getItem('userLanguage') || 'es';\n    setCurrentLang(storedLang);\n\n    // Escuchar cambios de idioma\n    const handleLangChange = (e: StorageEvent) => {\n      if (e.key === 'userLanguage') {\n        setCurrentLang(e.newValue || 'es');\n      }\n    };\n\n    window.addEventListener('storage', handleLangChange);\n    return () => window.removeEventListener('storage', handleLangChange);\n  }, []);\n\n  // Estados\n  const [explotacionesData, setExplotacionesData] = useState<ExplotacionInfo[]>([]);\n  const [displayExplotaciones, setDisplayExplotaciones] = useState<ExplotacionInfo[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentExplotacion, setCurrentExplotacion] = useState<string | null>(null);\n  const [allAnimals, setAllAnimals] = useState<Animal[]>([]);\n  const [filteredAnimals, setFilteredAnimals] = useState<Animal[]>([]);\n  const [activeCategory, setActiveCategory] = useState('todos');\n  const [stats, setStats] = useState({\n    toros: 0,\n    vacas: 0,\n    terneros: 0\n  });\n  \n  // Estado para detectar si estamos en vista móvil\n  const [isMobileView, setIsMobileView] = useState(false);\n  // Estados para ordenación\n  const [sortField, setSortField] = useState<'explotacio' | 'total'>('explotacio');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  // Cargar datos iniciales\n  useEffect(() => {\n    loadInitialData();\n  }, []);\n  \n  // Efecto para detectar el ancho de la pantalla y ordenar correctamente en móvil\n  useEffect(() => {\n    const checkScreenWidth = () => {\n      const isMobile = window.innerWidth < 640; // sm breakpoint en Tailwind es 640px\n      setIsMobileView(isMobile);\n    };\n    \n    // Ejecutar al montar el componente\n    checkScreenWidth();\n    \n    // Escuchar cambios en el tamaño de la ventana\n    window.addEventListener('resize', checkScreenWidth);\n    return () => window.removeEventListener('resize', checkScreenWidth);\n  }, []);\n  \n  // Efecto para ordenar correctamente en móvil\n  useEffect(() => {\n    // En móvil, ordenar por total de animales (mayor a menor)\n    if (isMobileView && (sortField !== 'total' || sortDirection !== 'desc')) {\n      setSortField('total');\n      setSortDirection('desc');\n    }\n  }, [isMobileView, sortField, sortDirection]);\n  \n  // Función para ordenar las explotaciones\n  const sortExplotaciones = (explotaciones: ExplotacionInfo[]) => {\n    if (!explotaciones) return [];\n    \n    // En móvil, siempre ordenar por cantidad de animales (mayor a menor)\n    if (isMobileView) {\n      return [...explotaciones].sort((a, b) => {\n        const aTotal = a.total || 0;\n        const bTotal = b.total || 0;\n        return bTotal - aTotal; // Orden descendente por total en móvil\n      });\n    }\n    \n    // En desktop, seguir el criterio de ordenación elegido\n    return [...explotaciones].sort((a, b) => {\n      if (sortField === 'explotacio') {\n        return sortDirection === 'asc' \n          ? a.explotacio.localeCompare(b.explotacio)\n          : b.explotacio.localeCompare(a.explotacio);\n      } else if (sortField === 'total') {\n        const aTotal = a.total || 0;\n        const bTotal = b.total || 0;\n        return sortDirection === 'asc' ? aTotal - bTotal : bTotal - aTotal;\n      }\n      return a.explotacio.localeCompare(b.explotacio);\n    });\n  };\n\n  // Efecto para ordenar y filtrar explotaciones cuando cambian los datos, los criterios de ordenación o la vista\n  useEffect(() => {\n    if (!explotacionesData.length) return;\n    \n    let dataToDisplay = sortExplotaciones(explotacionesData);\n    \n    // Aplicar filtro de búsqueda si existe\n    if (searchTerm.trim() !== '') {\n      dataToDisplay = dataToDisplay.filter(exp => \n        exp.explotacio.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    // Actualizar las explotaciones a mostrar\n    setDisplayExplotaciones(dataToDisplay);\n  }, [explotacionesData, searchTerm, isMobileView, sortField, sortDirection]);\n\n  // Filtrar animales por categoría cuando cambia la categoría activa o la lista de animales\n  useEffect(() => {\n    if (allAnimals.length > 0) {\n      filterAnimalsByCategory(activeCategory);\n    }\n  }, [activeCategory, allAnimals]);\n\n  // Función para cargar los datos iniciales\n  const loadInitialData = async () => {\n    try {\n      console.log('######## INICIO CARGA DE DATOS DE EXPLOTACIONES (REACT) ########');\n      console.log(`Usando API URL: ${apiService.getBaseUrl()}`);\n      \n      setLoading(true);\n      setError(null);\n      \n      // Obtener todos los animales del backend con un límite razonable\n      console.log('Realizando petición GET a animals/?page=1&limit=100');\n      const response = await apiService.get('animals/?page=1&limit=100');\n      console.log('Respuesta recibida de animals:', response);\n      \n      // Verificar la estructura de la respuesta\n      if (!response.data || !response.data.items || !Array.isArray(response.data.items)) {\n        throw new Error('Formato de respuesta incorrecto');\n      }\n      \n      const allAnimals = response.data.items;\n      console.log(`Obtenidos ${allAnimals.length} animales`);\n      \n      // Agrupar animales por explotación\n      const explotacionesMap: Record<string, ExplotacionInfo> = {};\n      \n      allAnimals.forEach((animal: Animal) => {\n        if (!animal.explotacio) return; // Ignorar animales sin explotación\n        \n        // Si la explotación no existe en el mapa, la añadimos\n        if (!explotacionesMap[animal.explotacio]) {\n          explotacionesMap[animal.explotacio] = {\n            explotacio: animal.explotacio,\n            animales: []\n          };\n        }\n        \n        // Añadir animal a la explotación\n        explotacionesMap[animal.explotacio].animales = \n          [...(explotacionesMap[animal.explotacio].animales || []), animal];\n      });\n      \n      // Calcular estadísticas para cada explotación\n      const explotacionesDataArray = Object.values(explotacionesMap).map((exp: ExplotacionInfo) => {\n        const animales = exp.animales || [];\n        \n        // Total de animales por género\n        const toros = animales.filter((a: Animal) => a.genere === 'M').length;\n        const vacas = animales.filter((a: Animal) => a.genere === 'F').length;\n        \n        // Animales activos (estado=OK)\n        const toros_activos = animales.filter((a: Animal) => a.genere === 'M' && a.estado === 'OK').length;\n        const vacas_activas = animales.filter((a: Animal) => a.genere === 'F' && a.estado === 'OK').length;\n        \n        // Contar las vacas amamantando (alletar 1 o 2)\n        const vacasAletar1 = animales.filter((a: Animal) => a.genere === 'F' && ['1', 1].includes(a.alletar as any)).length;\n        const vacasAletar2 = animales.filter((a: Animal) => a.genere === 'F' && ['2', 2].includes(a.alletar as any)).length;\n        const amamantando = vacasAletar1 + vacasAletar2;\n        \n        // Vacas que no están amamantando (alletar 0 o null)\n        const noAmamantando = animales.filter((a: Animal) => a.genere === 'F' && (['0', 0].includes(a.alletar as any) || a.alletar === null)).length;\n        \n        // Inicializar partos con 0, luego se actualizará\n        let partosAprox = 0;\n        \n        // Cálculo correcto de terneros: cada vaca con alletar=1 amamanta 1 ternero y cada vaca con alletar=2 amamanta 2 terneros\n        const terneros = vacasAletar1 + (vacasAletar2 * 2);\n        \n        // Total de animales activos\n        const total_animales_activos = toros_activos + vacas_activas + terneros;\n        \n        return {\n          explotacio: exp.explotacio,\n          total: animales.length,\n          total_animales_activos: total_animales_activos,\n          toros: toros,\n          toros_activos: toros_activos,\n          vacas: vacas,\n          vacas_activas: vacas_activas,\n          amamantando: amamantando,\n          noAmamantando: noAmamantando,\n          terneros: terneros,\n          partos: partosAprox\n        };\n      });\n      \n      // Obtener el conteo correcto de partos para cada explotación\n      const updatedExplotacionesData = await Promise.all(explotacionesDataArray.map(async (exp) => {\n        try {\n          // Obtener detalles de la explotación usando la API del dashboard\n          const dashboardEndpoint = `dashboard/explotacions/${encodeURIComponent(exp.explotacio)}`;\n          console.log(`Solicitando detalles de explotación: ${dashboardEndpoint}`);\n          const explotacionData = await apiService.get(dashboardEndpoint);\n          console.log(`Datos recibidos para explotación ${exp.explotacio}:`, explotacionData);\n          \n          // Obtener estadísticas detalladas de la explotación\n          const statsEndpoint = `dashboard/explotacions/${encodeURIComponent(exp.explotacio)}/stats`;\n          console.log(`Solicitando estadísticas: ${statsEndpoint}`);\n          const statsData = await apiService.get(statsEndpoint);\n          console.log(`Estadísticas recibidas para ${exp.explotacio}:`, statsData);\n          \n          // Inicializar objeto con datos actualizados\n          let updatedExp = {...exp};\n          \n          // Actualizar el conteo de partos con el valor correcto de la API\n          if (explotacionData && explotacionData.total_partos !== undefined) {\n            updatedExp = {\n              ...updatedExp,\n              partos: explotacionData.total_partos\n            };\n          }\n          \n          // Extraer datos detallados de estadísticas\n          const animales = statsData.animales || {};\n          const partos = statsData.partos || {};\n          \n          // Actualizar con los datos estadísticos completos\n          updatedExp = {\n            ...updatedExp,\n            toros: animales.toros || updatedExp.toros,\n            toros_activos: animales.toros_activos || updatedExp.toros_activos,\n            vacas: animales.vacas || updatedExp.vacas,\n            vacas_activas: animales.vacas_activas || updatedExp.vacas_activas,\n            total_animales_activos: updatedExp.total_animales_activos,\n            terneros: animales.terneros || updatedExp.terneros,\n            amamantando: animales.vacas_amamantando || updatedExp.amamantando,\n            noAmamantando: animales.vacas_no_amamantando || updatedExp.noAmamantando,\n            partos: partos.total || updatedExp.partos\n          };\n          \n          // Devolver la explotación con todos los datos actualizados\n          return updatedExp;\n        } catch (error: any) {\n          console.error(`Error al obtener información para ${exp.explotacio}:`, error);\n          console.error(`Error detallado: ${error.message}`);\n          if (error.response) {\n            console.error(`Status: ${error.response.status}, Data:`, error.response.data);\n          }\n          // Si hay un error, devolver los datos originales\n          return exp;\n        }\n      }));\n      \n      // Ordenar por nombre de explotación\n      updatedExplotacionesData.sort((a, b) => a.explotacio.localeCompare(b.explotacio));\n      \n      // Actualizar el estado\n      setExplotacionesData(updatedExplotacionesData);\n      setLoading(false);\n    } catch (error: any) {\n      console.error('Error al cargar datos iniciales de explotaciones:', error);\n      console.error('Detalle del error:', error.stack || 'No hay stack disponible');\n      \n      setLoading(false);\n      setError(error.message);\n    }\n  };\n\n  // Función para buscar explotaciones por término\n  const handleSearch = () => {\n    console.log(`Buscando: \"${searchTerm}\"`);\n    // Si el campo está vacío, mostrar todas\n    if (!searchTerm.trim()) {\n      return;\n    }\n    \n    // Filtrar explotaciones que contienen el término de búsqueda\n    const filteredExplotaciones = explotacionesData.filter(exp => \n      exp.explotacio.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    \n    if (filteredExplotaciones.length === 0) {\n      alert('No se encontraron explotaciones que coincidan con tu búsqueda.');\n    } else if (filteredExplotaciones.length === 1) {\n      // Si solo hay una coincidencia, mostrar directamente los detalles\n      showExplotacionDetail(filteredExplotaciones[0].explotacio);\n    } else {\n      // TODO: Actualizar la vista para mostrar solo las explotaciones filtradas\n    }\n  };\n\n  // Función para limpiar búsqueda\n  const handleClear = () => {\n    setSearchTerm('');\n    // TODO: Actualizar la vista para mostrar todas las explotaciones\n  };\n\n  // Función para mostrar detalles de una explotación\n  const showExplotacionDetail = async (explotacionCode: string) => {\n    if (!explotacionCode) return;\n    \n    setCurrentExplotacion(explotacionCode);\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Obtener datos de los animales de esta explotación\n      const endpoint = `animals/?explotacio=${encodeURIComponent(explotacionCode)}&limit=100`;\n      console.log(`Solicitando animales de explotación (con límite 100): ${endpoint}`);\n      \n      const response = await apiService.get(endpoint);\n      console.log(`Respuesta recibida para animales de ${explotacionCode}:`, response);\n      \n      // Verificar la estructura de la respuesta\n      if (!response.data || !response.data.items || !Array.isArray(response.data.items)) {\n        throw new Error('Formato de respuesta incorrecto');\n      }\n      \n      const animals = response.data.items;\n      console.log(`Encontrados ${animals.length} animales para la explotación ${explotacionCode}`);\n      \n      // Calcular estadísticas\n      const toros = animals.filter((a: Animal) => a.genere === 'M').length;\n      const vacas = animals.filter((a: Animal) => a.genere === 'F').length;\n      const newStats = {\n        toros: toros,\n        vacas: vacas,\n        terneros: 0 // TODO: Calcular terneros correctamente\n      };\n      \n      setAllAnimals(animals);\n      setFilteredAnimals(animals); // Inicialmente mostrar todos\n      setStats(newStats);\n      setActiveCategory('todos');\n      \n      // Mostrar la vista de detalles\n      const detailView = document.getElementById('explotacion-detail');\n      const cardsView = document.getElementById('explotacionCards');\n      \n      if (detailView) detailView.style.display = 'block';\n      if (cardsView) cardsView.style.display = 'none';\n      \n      // Actualizar el título\n      const titleElement = document.getElementById('explotacion-code');\n      if (titleElement) titleElement.textContent = explotacionCode;\n      \n      setLoading(false);\n    } catch (error: any) {\n      console.error('Error al cargar detalle de explotación:', error);\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n\n  // Función para volver a la vista de tarjetas\n  const handleBack = () => {\n    const detailView = document.getElementById('explotacion-detail');\n    const cardsView = document.getElementById('explotacionCards');\n    \n    if (detailView) detailView.style.display = 'none';\n    if (cardsView) cardsView.style.display = 'grid';\n    \n    setCurrentExplotacion(null);\n  };\n\n  // Función para filtrar animales por categoría\n  const filterAnimalsByCategory = (category: string) => {\n    if (!allAnimals.length) return;\n    \n    let filtered: Animal[] = [];\n    \n    switch (category) {\n      case 'todos':\n        filtered = [...allAnimals];\n        break;\n      case 'toros':\n        filtered = allAnimals.filter(animal => animal.genere === 'M');\n        break;\n      case 'vacas-amam':\n        filtered = allAnimals.filter(animal => \n          animal.genere === 'F' && ['1', 1, '2', 2].includes(animal.alletar as any)\n        );\n        break;\n      case 'vacas-no-amam':\n        filtered = allAnimals.filter(animal => \n          animal.genere === 'F' && (['0', 0].includes(animal.alletar as any) || animal.alletar === null)\n        );\n        break;\n      case 'terneros':\n        // TODO: Implementar filtro de terneros\n        filtered = [];\n        break;\n      default:\n        filtered = [...allAnimals];\n    }\n    \n    setFilteredAnimals(filtered);\n    setActiveCategory(category);\n  };\n\n  // Renderizar tabla de animales\n  const renderAnimalTable = () => {\n    // Si no hay animales\n    if (!filteredAnimals || filteredAnimals.length === 0) {\n      return (\n        <div className=\"flex justify-center items-center h-[200px]\">\n          <p className=\"text-gray-500 dark:text-gray-400\">\n            {currentLang === 'ca' ? \"No hi ha animals per mostrar en aquesta categoria\" : \"No hay animales que mostrar en esta categoría\"}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"overflow-x-auto\">\n        <table className=\"w-full text-sm text-left border-collapse\">\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-100 dark:bg-gray-700 dark:text-gray-300\">\n            <tr>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Codi\" : \"Código\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Nom\" : \"Nombre\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Gènere\" : \"Género\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Estat\" : \"Estado\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Data Naixement\" : \"Fecha Nacimiento\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Alletant\" : \"Amamantando\"}</th>\n              <th className=\"px-4 py-2\">{currentLang === 'ca' ? \"Accions\" : \"Acciones\"}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredAnimals.map((animal) => (\n              <tr key={animal.id} className=\"border-b dark:border-gray-700\">\n                <td className=\"px-4 py-2\">{animal.cod || '-'}</td>\n                <td className=\"px-4 py-2 font-medium\">{animal.nom}</td>\n                <td className=\"px-4 py-2\">{animal.genere === 'M' ? (currentLang === 'ca' ? 'Toro' : 'Toro') : (currentLang === 'ca' ? 'Vaca' : 'Vaca')}</td>\n                <td className=\"px-4 py-2\">\n                  <span className={`px-2 py-1 rounded-full text-xs ${\n                    animal.estado === 'OK' ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : \n                    'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n                  }`}>\n                    {animal.estado === 'OK' ? (currentLang === 'ca' ? 'Actiu' : 'Activo') : (currentLang === 'ca' ? 'Mort' : 'Fallecido')}\n                  </span>\n                </td>\n                <td className=\"px-4 py-2\">{animal.dob || (currentLang === 'ca' ? 'No disponible' : 'No disponible')}</td>\n                <td className=\"px-4 py-2\">\n                  {animal.genere === 'F' ? (\n                    animal.alletar === '1' ? (currentLang === 'ca' ? '1 vedell' : '1 ternero') : \n                    animal.alletar === '2' ? (currentLang === 'ca' ? '2 vedells' : '2 terneros') : \n                    (currentLang === 'ca' ? 'Sense alletar' : 'No amamantando')\n                  ) : 'N/A'}\n                </td>\n                <td className=\"px-4 py-2\">\n                  <div className=\"flex space-x-2\">\n                    <a \n                      href={`/animals/${animal.id}`}\n                      className=\"inline-flex items-center px-2 py-1 bg-primary text-white rounded hover:bg-primary/80\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" />\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                      </svg>\n                      {currentLang === 'ca' ? 'Veure' : 'Ver'}\n                    </a>\n                    <a \n                      href={`/animals/update/${animal.id}`}\n                      className=\"inline-flex items-center px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                      {currentLang === 'ca' ? 'Actualitzar' : 'Actualizar'}\n                    </a>\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n  // Función para exportar a PDF con formato atractivo\n  const exportToPDF = async () => {\n    if (!filteredAnimals || !filteredAnimals.length) return;\n    \n    try {\n      // Importaciones dinámicas para evitar errores SSR\n      const jsPDFModule = await import('jspdf');\n      const jsPDF = jsPDFModule.default;\n      \n      const autoTableModule = await import('jspdf-autotable');\n      const autoTable = autoTableModule.default;\n      \n      // Crear un documento PDF nuevo\n      const doc = new jsPDF();\n    \n    // Configurar títulos y encabezados\n    const title = currentLang === 'ca' \n      ? `Llistat d'Animals - ${currentExplotacion}`\n      : `Listado de Animales - ${currentExplotacion}`;\n    \n    const columns = [\n      currentLang === 'ca' ? 'Codi' : 'Código',\n      currentLang === 'ca' ? 'Nom' : 'Nombre',\n      currentLang === 'ca' ? 'Gènere' : 'Género',\n      currentLang === 'ca' ? 'Estat' : 'Estado',\n      currentLang === 'ca' ? 'Data Naixement' : 'Fecha Nacimiento',\n      currentLang === 'ca' ? 'Alletant' : 'Amamantando',\n    ];\n    \n    // Ordenar los animales por categorías:\n    // 1. Activos primero (y dentro de activos: toros, vacas amamantando, vacas no amamantando)\n    // 2. Fallecidos al final\n    const sortedAnimals = [...filteredAnimals].sort((a, b) => {\n      // Primero por estado (activos antes que fallecidos)\n      if (a.estado !== b.estado) {\n        return a.estado === 'OK' ? -1 : 1;\n      }\n      \n      // Dentro de cada estado, ordenar por género (toros primero)\n      if (a.genere !== b.genere) {\n        return a.genere === 'M' ? -1 : 1;\n      }\n      \n      // Para las vacas (F), ordenar por amamantando\n      if (a.genere === 'F') {\n        const aAlletar = a.alletar ? Number(a.alletar) : 0;\n        const bAlletar = b.alletar ? Number(b.alletar) : 0;\n        if (aAlletar !== bAlletar) {\n          return bAlletar - aAlletar; // Las que amamantan más primero\n        }\n      }\n      \n      // Si todo lo demás es igual, ordenar por nombre\n      return a.nom.localeCompare(b.nom);\n    });\n    \n    // Preparar los datos de animales con manejo adecuado de fechas y códigos\n    const data = sortedAnimals.map(animal => {\n      // Para el código, usar preferentemente cod (campo oficial), luego id\n      let codigo = 'N/A';\n      if (animal.cod && animal.cod !== '') {\n        codigo = animal.cod;\n      } else if (animal.id) {\n        codigo = animal.id.toString();\n      }\n      \n      // Para la fecha, asegurarnos de que esté en formato español DD/MM/AAAA\n      let fechaNacimiento = 'N/A';\n      if (animal.dob) {\n        try {\n          // Intentar convertir la fecha\n          let fecha;\n          \n          // Primero ver si es un string con formato ya adecuado (DD/MM/AAAA)\n          if (typeof animal.dob === 'string' && animal.dob.match(/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/)) {\n            fechaNacimiento = animal.dob; // Ya tiene el formato correcto\n          } \n          // Si es una fecha ISO o similar, convertirla al formato español\n          else {\n            fecha = new Date(animal.dob);\n            if (!isNaN(fecha.getTime())) {\n              // Formatear manualmente al formato DD/MM/AAAA\n              const dia = fecha.getDate().toString().padStart(2, '0');\n              const mes = (fecha.getMonth() + 1).toString().padStart(2, '0');\n              const anio = fecha.getFullYear();\n              fechaNacimiento = `${dia}/${mes}/${anio}`;\n            } else {\n              // Si el formato no es reconocible, mostrarlo como está\n              fechaNacimiento = typeof animal.dob === 'string' ? animal.dob : 'N/A';\n            }\n          }\n        } catch (e) {\n          // Si hay error al convertir, mostramos el valor original\n          fechaNacimiento = typeof animal.dob === 'string' ? animal.dob : 'N/A';\n        }\n      }\n      \n      return [\n        codigo,\n        animal.nom,\n        animal.genere === 'M' \n          ? (currentLang === 'ca' ? 'Toro' : 'Toro') \n          : (currentLang === 'ca' ? 'Vaca' : 'Vaca'),\n        animal.estado === 'OK' \n          ? (currentLang === 'ca' ? 'Actiu' : 'Activo') \n          : (currentLang === 'ca' ? 'Mort' : 'Fallecido'),\n        fechaNacimiento,\n        animal.genere === 'F' \n          ? (['1', 1].includes(animal.alletar as any) \n              ? (currentLang === 'ca' ? '1 vedell' : '1 ternero')\n              : ['2', 2].includes(animal.alletar as any) \n                ? (currentLang === 'ca' ? '2 vedells' : '2 terneros')\n                : 'N/A')\n          : 'N/A'\n      ];\n    });\n    \n    // Añadir fecha en la esquina superior derecha\n    doc.setFontSize(10);\n    doc.setTextColor(100, 100, 100);\n    const date = new Date().toLocaleDateString(currentLang === 'ca' ? 'ca-ES' : 'es-ES');\n    doc.text(\n      currentLang === 'ca' ? `Data: ${date}` : `Fecha: ${date}`, \n      195, 15, { align: 'right' }\n    );\n    \n    // Definimos la posición inicial para el resumen (usada en todo el documento)\n    const logoY = 10; // Valor predeterminado por si falla la carga del logo\n    const logoHeight = 35; // Valor predeterminado por si falla la carga del logo\n    let resumenStartY = logoY + logoHeight + 20; // Posición inicial del resumen\n    \n    // Añadir logo oficial de Masclet Imperi\n    try {\n      // Intentamos cargar el logo oficial desde una imagen base64\n      // La ruta es relativa a la ubicación desde donde se sirve la aplicación\n      const logoUrl = '/images/logo_masclet.png';\n      \n      // Tamaño y posicionamiento del logo (centrado arriba)\n      const logoWidth = 45;\n      let logoHeight = 35;\n      const pageWidth = doc.internal.pageSize.getWidth();\n      const logoX = (pageWidth / 2) - (logoWidth / 2); // Centrado horizontalmente\n      const logoY = 10; // Margen superior\n      \n      // Añadir la imagen al PDF\n      doc.addImage(logoUrl, 'PNG', logoX, logoY, logoWidth, logoHeight);\n      \n      // Añadir el título debajo del logo (con más espacio para evitar que se tape)\n      doc.setFontSize(20);\n      doc.setTextColor(40, 40, 40);\n      doc.text(title, pageWidth / 2, logoY + logoHeight + 5, { align: 'center' });\n      \n      // Actualizamos la posición inicial del resumen con los valores reales del logo\n      resumenStartY = logoY + logoHeight + 20;\n    } catch (error) {\n      console.error('Error al cargar el logo:', error);\n      \n      // Si hay error, usamos el logo alternativo (rectángulo verde)\n      doc.setDrawColor(0);\n      doc.setFillColor(126, 211, 33); // Color verde lima corporativo\n      \n      const logoX = 30;\n      const logoY = 25;\n      const logoSize = 15;\n      \n      // Dibujamos un cuadrado redondeado como fondo del logo\n      doc.roundedRect(logoX - logoSize/2, logoY - logoSize/2, logoSize, logoSize, 2, 2, 'F');\n      \n      // Dibujamos la \"M\" de Masclet en blanco\n      doc.setDrawColor(255);\n      doc.setTextColor(255);\n      doc.setFontSize(14);\n      doc.setFont('helvetica', 'bold');\n      doc.text('M', logoX - 5, logoY + 5, { align: 'center' });\n    }\n    \n    // Añadir estadísticas resumen similar a la tarjeta de explotaciones\n    doc.setFontSize(12);\n    doc.setTextColor(40, 40, 40);\n    \n    // Calcular estadísticas detalladas para coincidan con el formato de las tarjetas\n    const totalAnimales = filteredAnimals.length;\n    const animalesActivos = filteredAnimals.filter(a => a.estado === 'OK').length;\n    const torosActivos = filteredAnimals.filter(a => a.genere === 'M' && a.estado === 'OK').length;\n    const vacasActivas = filteredAnimals.filter(a => a.genere === 'F' && a.estado === 'OK').length;\n    const terneros = filteredAnimals.filter(a => \n      a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)\n    ).reduce((total, animal) => {\n      const alletar = String(animal.alletar);\n      return total + (alletar === '1' ? 1 : alletar === '2' ? 2 : 0);\n    }, 0);\n    const amamantando = filteredAnimals.filter(a => \n      a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)\n    ).length;\n    \n    // Crear estructura de dos columnas para la primera fila (Total y Activos)\n    // Reducimos ligeramente el tamaño para que quepa mejor\n    doc.setFillColor(245, 245, 245);\n    doc.roundedRect(30, resumenStartY, 150, 13, 2, 2, 'F');\n    \n    // Títulos de las columnas\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(80, 80, 80);\n    doc.setFontSize(11); // Reducimos un poco el tamaño\n    doc.text(currentLang === 'ca' ? 'Total Animals' : 'Total Animales', 65, resumenStartY + 5, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Animals Actius' : 'Animales Activos', 145, resumenStartY + 5, { align: 'center' });\n    \n    // Valores de las columnas\n    doc.setFontSize(13); // Reducimos un poco el tamaño\n    doc.setTextColor(40, 40, 40);\n    doc.text(totalAnimales.toString(), 65, resumenStartY + 10, { align: 'center' });\n    doc.setTextColor(34, 139, 34); // Verde para animales activos\n    doc.text(animalesActivos.toString(), 145, resumenStartY + 10, { align: 'center' });\n    \n    // Segunda fila - Tres columnas (Toros, Vacas, Terneros)\n    doc.setFillColor(250, 250, 250);\n    doc.roundedRect(30, resumenStartY + 15, 150, 13, 2, 2, 'F');\n    \n    // Títulos\n    doc.setFontSize(11); // Tamaño reducido\n    doc.setTextColor(80, 80, 80);\n    doc.text(currentLang === 'ca' ? 'Toros Actius' : 'Toros Activos', 55, resumenStartY + 20, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Vaques Actives' : 'Vacas Activas', 105, resumenStartY + 20, { align: 'center' });\n    doc.text(currentLang === 'ca' ? 'Vedells' : 'Terneros', 155, resumenStartY + 20, { align: 'center' });\n    \n    // Valores\n    doc.setTextColor(51, 102, 204); // Azul para toros\n    doc.text(torosActivos.toString(), 55, resumenStartY + 25, { align: 'center' });\n    doc.setTextColor(233, 30, 99); // Rosa para vacas\n    doc.text(vacasActivas.toString(), 105, resumenStartY + 25, { align: 'center' });\n    doc.setTextColor(255, 152, 0); // Naranja para terneros\n    doc.text(terneros.toString(), 155, resumenStartY + 25, { align: 'center' });\n    \n    // Tercera fila - Amamantando\n    doc.setFillColor(250, 250, 250);\n    doc.roundedRect(30, resumenStartY + 30, 70, 13, 2, 2, 'F');\n    \n    // Título y valor\n    doc.setTextColor(80, 80, 80);\n    doc.text(currentLang === 'ca' ? 'Alletant' : 'Amamantando', 45, resumenStartY + 35, { align: 'center' });\n    doc.setTextColor(3, 169, 244); // Azul para amamantando\n    doc.text(amamantando.toString(), 75, resumenStartY + 35, { align: 'center' });\n    \n    // Añadir tabla de animales usando jspdf-autotable\n    autoTable(doc, {\n      head: [columns],\n      body: data,\n      startY: resumenStartY + 50, // Ajustamos el inicio de la tabla para dejar espacio al resumen\n      theme: 'grid',\n      styles: { fontSize: 9, cellPadding: 3 },\n      headStyles: { \n        fillColor: [126, 211, 33], // Color verde lima corporativo\n        textColor: 255,\n        fontStyle: 'bold' \n      },\n      alternateRowStyles: { fillColor: [240, 240, 240] },\n      columnStyles: {\n        0: { cellWidth: 20 }, // ID\n        1: { cellWidth: 40 }, // Nombre\n        2: { cellWidth: 25 }, // Género\n        3: { cellWidth: 30 }, // Estado\n        4: { cellWidth: 35 }, // Fecha Nacimiento\n        5: { cellWidth: 40 }  // Amamantando\n      },\n      margin: { top: 70 }\n    });\n    \n    // Añadir pie de página\n    const pageCount = (doc as any).internal.getNumberOfPages();\n    for(let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(8);\n      doc.setTextColor(100, 100, 100);\n      doc.text(\n        'Masclet Imperi - ' + (currentLang === 'ca' ? 'Sistema de Gestió Ramadera' : 'Sistema de Gestión Ganadera'), \n        105, doc.internal.pageSize.height - 10, { align: 'center' }\n      );\n      doc.text(\n        currentLang === 'ca' ? `Pàgina ${i} de ${pageCount}` : `Página ${i} de ${pageCount}`, \n        195, doc.internal.pageSize.height - 10, { align: 'right' }\n      );\n    }\n    \n    // Guardar el PDF\n    const fileName = `animales_${currentExplotacion || 'todas'}_${new Date().toISOString().split('T')[0]}.pdf`;\n    doc.save(fileName);\n    } catch (error) {\n      console.error('Error al generar PDF:', error);\n      alert(currentLang === 'ca' ? 'Error en generar el PDF' : 'Error al generar el PDF');\n    }\n  };\n\n  // Renderizar el componente principal\n  return (\n    <div className=\"w-full py-6\">\n      {/* 1. Sección de búsqueda y filtros - exactamente igual al HTML existente */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-md p-3 sm:p-4 mb-4 sm:mb-6\">\n        <div className=\"mb-3 sm:mb-4\">\n          <h2 className=\"text-base sm:text-lg font-medium text-gray-900 dark:text-white mb-2 sm:mb-3\">\n            {currentLang === 'ca' ? 'Cerca i Filtres' : 'Búsqueda y Filtros'}\n          </h2>\n          <p className=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300 mb-3 sm:mb-4\">\n            {currentLang === 'ca' \n              ? 'Utilitza els filtres per trobar explotacions específiques. Pots cercar per codi d\\'explotació.'\n              : 'Utiliza los filtros para encontrar explotaciones específicas. Puedes buscar por código de explotación.'\n            }\n          </p>\n        </div>\n        \n        {/* Buscador con botones */}\n        <div>\n          <div className=\"mb-3\">\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              {currentLang === 'ca' ? 'Cercar' : 'Buscar'}\n            </label>\n            <div className=\"relative\">\n              <input \n                type=\"text\" \n                id=\"search-explotacion\" \n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder={currentLang === 'ca' ? \"Cercar per codi d'explotació...\" : \"Buscar por código de explotación...\"} \n                className=\"w-full px-3 py-2 pl-9 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary dark:bg-gray-700 dark:text-white\" \n              />\n              <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                <svg className=\"w-4 h-4 text-gray-500 dark:text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            <button \n              onClick={handleSearch}\n              className=\"btn btn-primary\"\n            >\n              {currentLang === 'ca' ? 'Cercar' : 'Buscar'}\n            </button>\n            <button \n              onClick={handleClear}\n              className=\"btn btn-secondary\"\n            >\n              {currentLang === 'ca' ? 'Netejar' : 'Limpiar'}\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Mostrar spinner durante la carga */}\n      {loading && (\n        <div className=\"flex justify-center items-center py-10\">\n          <div className=\"spinner\"></div>\n        </div>\n      )}\n      \n      {/* Mostrar error si ocurre */}\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-md mb-4\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {/* 2. Lista de explotaciones (cards) - inicialmente visible */}\n      {!loading && !error && (\n        <>\n          {/* Vista de tarjetas de explotaciones */}\n          <div \n            id=\"explotacionCards\" \n            className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 mb-6\"\n            style={{ display: currentExplotacion ? 'none' : 'grid' }}\n          >\n            {displayExplotaciones.map((exp) => (\n              <div \n                key={exp.explotacio} \n                className=\"explotacion-card bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 overflow-hidden w-full border border-gray-100 mb-4\"\n                onClick={() => showExplotacionDetail(exp.explotacio)}\n              >\n                {/* Cabecera con el nombre de la explotación */}\n                <div className=\"card-header bg-primary text-white p-3\">\n                  <h3 className=\"text-lg font-bold text-center\">{exp.explotacio}</h3>\n                </div>\n                \n                {/* Cuerpo de la tarjeta */}\n                <div className=\"card-body p-4\">\n                  {/* Primera fila: Animales totales y activos */}\n                  <div className=\"grid grid-cols-2 mb-4 pb-3 border-b border-gray-100\">\n                    {/* Columna izquierda: Total Animales */}\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-bold text-gray-700 mb-2\">{currentLang === 'ca' ? \"Total Animals\" : \"Total Animales\"}</div>\n                      <div className=\"stat-value total font-bold text-2xl text-primary-dark\">\n                        {(exp.toros || 0) + (exp.vacas || 0) + (exp.terneros || 0)}\n                      </div>\n                    </div>\n                    {/* Columna derecha: Animales Activos */}\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-bold text-gray-700 mb-2\">{currentLang === 'ca' ? \"Animals Actius\" : \"Animales Activos\"}</div>\n                      <div className=\"stat-value total font-bold text-2xl text-green-600\">\n                        {/* Filtrar solo los animales con estado=OK */}\n                        {((exp.toros_activos !== undefined ? exp.toros_activos : exp.toros) || 0) + \n                         ((exp.vacas_activas !== undefined ? exp.vacas_activas : exp.vacas) || 0) + \n                         (exp.terneros || 0)}\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Segunda fila: Toros, Vacas, Terneros (solo activos) */}\n                  <div className=\"animal-stats grid grid-cols-3 gap-1 text-center mb-3\">\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Toros Actius\" : \"Toros Activos\"}</div>\n                      <div className=\"stat-value toros font-bold text-primary\">\n                        {exp.toros_activos !== undefined ? exp.toros_activos : exp.toros || 0}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Vaques Actives\" : \"Vacas Activas\"}</div>\n                      <div className=\"stat-value vacas font-bold text-pink-500\">\n                        {exp.vacas_activas !== undefined ? exp.vacas_activas : exp.vacas || 0}\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Vedells\" : \"Terneros\"}</div>\n                      <div className=\"stat-value terneros font-bold text-orange-500\">{exp.terneros || 0}</div>\n                    </div>\n                  </div>\n                  \n                  {/* Tercera fila: Amamantando */}\n                  <div className=\"card-footer grid grid-cols-3 gap-1 text-center pt-2 border-t border-gray-100\">\n                    <div className=\"text-center\">\n                      <div className=\"stat-label font-medium\">{currentLang === 'ca' ? \"Alletant\" : \"Amamantando\"}</div>\n                      <div className=\"font-bold text-blue-600\">{exp.amamantando || 0}</div>\n                    </div>\n                    <div className=\"col-span-2 text-center flex flex-col justify-center items-center\">\n                      <div className=\"stat-label font-medium\">&nbsp;</div>\n                      <div>\n                        <button \n                          className=\"details-link text-green-600 font-medium hover:text-green-700 transition-colors\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            showExplotacionDetail(exp.explotacio);\n                          }}\n                        >\n                          {currentLang === 'ca' ? \"Veure detalls\" : \"Ver detalles\"} &rarr;\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 3. Vista detallada de explotación - inicialmente oculta */}\n          <div \n            id=\"explotacion-detail\" \n            className=\"hidden mb-6 bg-white dark:bg-gray-800 rounded-lg shadow p-4\"\n            style={{ display: currentExplotacion ? 'block' : 'none' }}\n          >\n            <div className=\"flex items-center justify-between mb-4 text-lg font-medium\">\n              <h3 className=\"text-gray-900 dark:text-white\">\n                {currentLang === 'ca' ? \"Animals de\" : \"Animales de\"} <span id=\"explotacion-code\">{currentExplotacion}</span>\n              </h3>\n              \n              <div className=\"flex gap-2\">\n                <button \n                  id=\"export-csv\" \n                  className=\"btn btn-primary text-sm flex items-center\"\n                  onClick={exportToPDF}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  {currentLang === 'ca' ? \"Exportar PDF\" : \"Exportar PDF\"}\n                </button>\n                \n                <button \n                  id=\"back-button\" \n                  className=\"btn btn-secondary text-sm flex items-center\"\n                  onClick={handleBack}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 17l-5-5m0 0l5-5m-5 5h12\" />\n                  </svg>\n                  {currentLang === 'ca' ? \"Tornar\" : \"Volver\"}\n                </button>\n              </div>\n            </div>\n            \n            {/* Tabs para filtrar por categoría */}\n            <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center\">\n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'todos' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"todos\"\n                  onClick={() => filterAnimalsByCategory('todos')}\n                >\n                  {currentLang === 'ca' ? \"Tots els animals\" : \"Todos los animales\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.length}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'toros' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"toros\"\n                  onClick={() => filterAnimalsByCategory('toros')}\n                >\n                  {currentLang === 'ca' ? \"Toros\" : \"Toros\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{stats.toros}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'vacas-amam' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"vacas-amam\"\n                  onClick={() => filterAnimalsByCategory('vacas-amam')}\n                >\n                  {currentLang === 'ca' ? \"Vaques alletant\" : \"Vacas amamantando\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.filter(a => a.genere === 'F' && ['1', 1, '2', 2].includes(a.alletar as any)).length}</span>\n                </button>\n              </li>\n              \n              <li className=\"mr-2\">\n                <button \n                  className={`animal-tab inline-block p-2 border-b-2 ${activeCategory === 'vacas-no-amam' ? 'border-primary text-primary dark:text-primary-light' : 'border-transparent hover:border-primary hover:text-primary dark:hover:text-primary-light'}`}\n                  data-category=\"vacas-no-amam\"\n                  onClick={() => filterAnimalsByCategory('vacas-no-amam')}\n                >\n                  {currentLang === 'ca' ? \"Vaques sense alletar\" : \"Vacas no amamantando\"} <span className=\"tab-count ml-1 bg-primary-light/20 px-1.5 py-0.5 rounded-full text-xs\">{allAnimals.filter(a => a.genere === 'F' && (['0', 0].includes(a.alletar as any) || a.alletar === null)).length}</span>\n                </button>\n              </li>\n            </ul>\n            \n            {/* Área para la tabla de animales */}\n            <div className=\"mt-4\">\n              {renderAnimalTable()}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExplotacionesPage;\n"],"file":"_astro/ExplotacionesPage.CjlCDm9n.js"}