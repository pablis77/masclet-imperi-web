{"version":3,"file":"hoisted.C9pjk730.js","sources":["../../../src/pages/animals/[id].astro?astro&type=script&index=0&lang.ts","../../../src/pages/animals/[id].astro?astro&type=script&index=1&lang.ts","../../../src/pages/animals/[id].astro?astro&type=script&index=2&lang.ts"],"sourcesContent":["  // Importar el script que maneja la carga del historial de cambios\r\n  const scriptHistorial = document.createElement('script');\r\n  scriptHistorial.src = '/scripts/animal-history.js';\r\n  scriptHistorial.type = 'text/javascript';\r\n  document.head.appendChild(scriptHistorial);\r\n  \r\n  // Escribir directamente al console log para verificar que el script se ejecuta\r\n  console.log('🔍 VERIFICACIÓN: Script interno ejecutándose correctamente');\r\n  \r\n  // Agregar función para detectar cuando se hace clic en la pestaña de historial\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    const tabChanges = document.getElementById('tab-changes');\r\n    if (tabChanges) {\r\n      console.log('🔍 Encontrada pestaña de historial, agregando event listener');\r\n      tabChanges.addEventListener('click', function() {\r\n        console.log('🔄 REGISTRADO: Clic en pestaña de historial desde script principal');\r\n      });\r\n    } else {\r\n      console.warn('⚠️ No se encontró la pestaña de historial');\r\n    }\r\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","  // Importar el script de edición de partos (versión 4 - usando PATCH en lugar de PUT)\r\n  const scriptPartos = document.createElement('script');\r\n  scriptPartos.src = '/scripts/editar-parto-v4.js';\r\n  scriptPartos.type = 'text/javascript';\r\n  document.head.appendChild(scriptPartos);\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","  // Script para manejar interacciones de la página y traducciones\n  document.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM completamente cargado y analizado');\n    \n    // Configurar botones de exportar PDF para todas las pestañas\n    const exportPdfBtn = document.getElementById('export-animal-pdf');\n    const exportPartosPdfBtn = document.getElementById('export-partos-pdf');\n    const exportChangesPdfBtn = document.getElementById('export-changes-pdf');\n    \n    if (exportPdfBtn) {\n      exportPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportPartosPdfBtn) {\n      exportPartosPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    if (exportChangesPdfBtn) {\n      exportChangesPdfBtn.addEventListener('click', exportAnimalToPDF);\n    }\n    \n    // Función para exportar ficha del animal a PDF - estructura idéntica a ExplotacionesPage.tsx\n    function exportAnimalToPDF() {\n      try {\n        // Obtener los datos del animal\n        const animalName = document.querySelector('h2.text-2xl').textContent;\n        const animalId = document.getElementById('animal-id-text').textContent.split(':')[1].trim();\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\n        \n        // Crear el documento PDF - igual que en ExplotacionesPage.tsx\n        const { jsPDF } = window.jspdf;\n        const doc = new jsPDF();\n        \n        // Configurar título del documento\n        const title = currentLang === 'ca' ? `Fitxa d'Animal - ${animalName}` : `Ficha de Animal - ${animalName}`;\n        \n        // Añadir fecha en la esquina superior derecha\n        doc.setFontSize(10);\n        doc.setTextColor(100, 100, 100);\n        const date = new Date().toLocaleDateString(currentLang === 'ca' ? 'ca-ES' : 'es-ES');\n        doc.text(\n          currentLang === 'ca' ? `Data: ${date}` : `Fecha: ${date}`, \n          195, 15, { align: 'right' }\n        );\n        \n        // Definimos la posición inicial para el resumen (usada en todo el documento)\n        const logoY = 10; // Valor predeterminado por si falla la carga del logo\n        const logoHeight = 35; // Valor predeterminado por si falla la carga del logo\n        let contentStartY = logoY + logoHeight + 20; // Posición inicial del contenido\n        \n        // Añadir logo oficial de Masclet Imperi\n        try {\n          // Intentamos cargar el logo oficial desde una imagen base64\n          // La ruta es relativa a la ubicación desde donde se sirve la aplicación\n          const logoUrl = '/images/logo_masclet.png';\n          \n          // Tamaño y posicionamiento del logo (centrado arriba)\n          const logoWidth = 45;\n          const logoHeight = 35;\n          const pageWidth = doc.internal.pageSize.getWidth();\n          const logoX = (pageWidth / 2) - (logoWidth / 2); // Centrado horizontalmente\n          \n          // Añadir la imagen al PDF\n          doc.addImage(logoUrl, 'PNG', logoX, logoY, logoWidth, logoHeight);\n          \n          // Añadir el título debajo del logo\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, logoY + logoHeight + 10, { align: 'center' });\n          \n          // Actualizamos la posición inicial del contenido con los valores reales del logo\n          contentStartY = logoY + logoHeight + 25;\n        } catch (error) {\n          console.error('Error al cargar el logo:', error);\n          \n          // Si hay error, usamos un título simple centrado sin logo\n          const pageWidth = doc.internal.pageSize.getWidth();\n          doc.setFontSize(20);\n          doc.setTextColor(40, 40, 40);\n          doc.text(title, pageWidth / 2, 30, { align: 'center' });\n          \n          // Ajustamos la posición inicial del contenido sin logo\n          contentStartY = 45;\n        }\n        \n        // Añadir datos básicos del animal\n        doc.setFontSize(14);\n        doc.setTextColor(50, 50, 50);\n        doc.text(currentLang === 'ca' ? 'Dades de l\\'animal:' : 'Datos del animal:', 20, contentStartY);\n        \n        // Recopilar datos del animal\n        const datos = [];\n        document.querySelectorAll('#content-info .space-y-3').forEach(section => {\n          section.querySelectorAll('div').forEach(item => {\n            const label = item.querySelector('p.text-sm')?.textContent;\n            const value = item.querySelector('p.font-medium')?.textContent;\n            if (label && value) {\n              datos.push([label, value]);\n            }\n          });\n        });\n        \n        // Añadir tabla con datos del animal - usando autoTable como en ExplotacionesPage\n        window.autoTable(doc, {\n          startY: contentStartY + 10,\n          head: [[currentLang === 'ca' ? 'Camp' : 'Campo', currentLang === 'ca' ? 'Valor' : 'Valor']],\n          body: datos,\n          theme: 'grid',\n          styles: { \n            fontSize: 9, \n            cellPadding: 2,\n            lineWidth: 0.1,\n            lineColor: [200, 200, 200],\n            minCellHeight: 8,\n            valign: 'middle'\n          },\n          headStyles: { \n            fillColor: [126, 211, 33], // Color verde lima corporativo\n            textColor: 255,\n            fontStyle: 'bold',\n            minCellHeight: 10\n          },\n          alternateRowStyles: {\n            fillColor: [245, 245, 245]\n          },\n          columnStyles: {\n            0: { cellWidth: 40, halign: 'left' }, // Columna de \"Campo\" más estrecha\n            1: { cellWidth: 'auto', halign: 'left' } // Columna de \"Valor\" usa el resto del espacio\n          }\n        });\n        \n        // Verificar si es una vaca (género F) para añadir tabla de partos\n        const generoAnimal = datos.find(d => d[0].includes('Sexo') || d[0].includes('Género'));\n        const esVaca = generoAnimal && (generoAnimal[1] === 'Hembra' || generoAnimal[1] === 'Femella' || generoAnimal[1] === 'F');\n        \n        // Posición para el siguiente elemento (observaciones o tabla de partos)\n        let nextY = doc.previousAutoTable.finalY + 15;\n        \n        // Si es una vaca, verificamos si tiene partos y añadimos la tabla\n        if (esVaca) {\n          // Obtener los datos de partos\n          const partosRows = [];\n          const partosContainer = document.querySelector('#content-partos table tbody');\n          \n          if (partosContainer) {\n            const partosFilas = partosContainer.querySelectorAll('tr');\n            let hayPartos = false;\n            \n            partosFilas.forEach(fila => {\n              // Verificar si es una fila de datos (no de mensaje \"no hay partos\")\n              const celdas = fila.querySelectorAll('td');\n              if (celdas.length >= 3 && !fila.textContent.includes('No hay registros')) {\n                hayPartos = true;\n                // Extraer información de las celdas: fecha, género, estado, observaciones\n                const fecha = celdas[0]?.textContent?.trim() || 'N/A';\n                const genero = celdas[1]?.textContent?.trim() || 'N/A';\n                const estado = celdas[2]?.querySelector('span')?.textContent?.trim() || 'N/A';\n                const obs = celdas[3]?.textContent?.trim() || 'N/A';\n                \n                // Añadir a los datos de la tabla\n                partosRows.push([fecha, genero, estado, obs]);\n              }\n            });\n            \n            // Si hay partos, añadir la tabla\n            if (hayPartos && partosRows.length > 0) {\n              // Título de la sección de partos\n              doc.setFontSize(14);\n              doc.setTextColor(50, 50, 50);\n              doc.text(currentLang === 'ca' ? 'Historial de Parts:' : 'Historial de Partos:', 20, nextY);\n              \n              // Cabecera de la tabla de partos\n              const partosHead = [\n                currentLang === 'ca' ? 'Data' : 'Fecha', \n                currentLang === 'ca' ? 'Gènere' : 'Género', \n                currentLang === 'ca' ? 'Estat' : 'Estado', \n                currentLang === 'ca' ? 'Observacions' : 'Observaciones'\n              ];\n              \n              // Añadir tabla de partos\n              window.autoTable(doc, {\n                startY: nextY + 5,\n                head: [partosHead],\n                body: partosRows,\n                theme: 'grid',\n                styles: { \n                  fontSize: 8, \n                  cellPadding: 2,\n                  lineWidth: 0.1,\n                  lineColor: [200, 200, 200],\n                  minCellHeight: 6,\n                  valign: 'middle'\n                },\n                headStyles: { \n                  fillColor: [126, 211, 33], // Color verde lima corporativo\n                  textColor: 255,\n                  fontStyle: 'bold',\n                  minCellHeight: 8\n                },\n                alternateRowStyles: {\n                  fillColor: [245, 245, 245]\n                },\n                columnStyles: {\n                  0: { cellWidth: 25, halign: 'center' }, // Fecha\n                  1: { cellWidth: 30, halign: 'center' }, // Género\n                  2: { cellWidth: 25, halign: 'center' }, // Estado\n                  3: { cellWidth: 'auto', halign: 'left' } // Observaciones\n                }\n              });\n              \n              // Actualizar la posición para las observaciones\n              nextY = doc.previousAutoTable.finalY + 15;\n            }\n          }\n        }\n        \n        // Añadir observaciones si existen\n        const observaciones = document.querySelector('.p-4.bg-gray-50 p')?.textContent;\n        \n        if (observaciones && observaciones !== (currentLang === 'ca' ? 'No hi ha observacions' : 'No hay observaciones')) {\n          doc.setFontSize(14);\n          doc.setTextColor(50, 50, 50);\n          doc.text(currentLang === 'ca' ? 'Observacions:' : 'Observaciones:', 20, nextY);\n          \n          doc.setFontSize(10);\n          doc.setTextColor(80, 80, 80);\n          const observacionesText = doc.splitTextToSize(observaciones, 170);\n          doc.text(observacionesText, 20, nextY + 10);\n        }\n        \n        // Pie de página\n        const pageCount = doc.internal.getNumberOfPages();\n        for(let i = 1; i <= pageCount; i++) {\n          doc.setPage(i);\n          doc.setFontSize(8);\n          doc.setTextColor(100, 100, 100);\n          doc.text('Masclet Imperi - Sistema de Gestión Ganadera', 105, doc.internal.pageSize.height - 10, { align: 'center' });\n          doc.text(`Página ${i} de ${pageCount}`, 195, doc.internal.pageSize.height - 10, { align: 'right' });\n        }\n        \n        // Guardar el PDF\n        doc.save(`${animalName}_ficha_${date.replace(/\\//g, '')}.pdf`);\n        \n      } catch (error) {\n        console.error('Error al generar PDF:', error);\n        alert(localStorage.getItem('userLanguage') === 'ca' ? 'Error en generar el PDF' : 'Error al generar el PDF');\n      }\n    }\n    \n    // Traducciones del lado del cliente\n    const translations = {\n      es: {\n        title: \"Ficha de Animal\",\n        back_to_list: \"Volver al listado\",\n        animal_id: \"ID Animal\",\n        loading: \"Cargando datos del animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Activo\",\n        inactive: \"Baja\",\n        dead: \"Fallecido\",\n        update: \"Actualizar\",\n        code: \"Código\",\n        name: \"Nombre\",\n        serial_number: \"Número de Serie\",\n        gender: \"Sexo\",\n        male: \"Macho\",\n        female: \"Hembra\",\n        birth_date: \"Fecha de nacimiento\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Fecha incorrecta\",\n        status: \"Estado\",\n        exploitation: \"Explotación\",\n        stable: \"Origen\",\n        not_assigned: \"No asignada\",\n        father: \"Padre\",\n        mother: \"Madre\",\n        nursing_status: \"Estado de amamantamiento\",\n        not_nursing: \"No amamanta\",\n        nursing_one: \"Amamanta a un ternero\",\n        nursing_two: \"Amamanta a dos terneros\",\n        back_to_animal_list: \"Volver al listado de animales\",\n        complete_info_tab: \"Información Completa\",\n        birth_history_tab: \"Historial de Partos\",\n        changes_history_tab: \"Historial de Cambios\",\n        identification_data: \"Datos de Identificación\",\n        general_data: \"Datos Generales\",\n        birth_history: \"Historial de Partos\",\n        birth_registry: \"Registro de todos los partos del animal\",\n        no_births: \"Este animal no tiene partos registrados\",\n        date: \"Fecha\",\n        gender_label: \"Género\",\n        observations: \"Observaciones\",\n        changes_history: \"Historial de Cambios\",\n        changes_registry: \"Registro de cambios realizados al animal\",\n        no_changes: \"No hay cambios registrados para este animal\",\n        changes_date: \"Fecha\",\n        changes_user: \"Usuario\",\n        changes_field: \"Campo\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nuevo\"\n      },\n      ca: {\n        title: \"Fitxa d'Animal\",\n        back_to_list: \"Tornar al llistat\",\n        animal_id: \"ID Animal\",\n        loading: \"Carregant dades de l'animal...\",\n        error_title: \"Error\",\n        retry: \"Reintentar\",\n        active: \"Actiu\",\n        inactive: \"Baixa\",\n        dead: \"Mort\",\n        update: \"Actualitzar\",\n        code: \"Codi\",\n        name: \"Nom\",\n        serial_number: \"Número de Sèrie\",\n        gender: \"Sexe\",\n        male: \"Mascle\",\n        female: \"Femella\",\n        birth_date: \"Data de naixement\",\n        not_available: \"No disponible\",\n        incorrect_date: \"Data incorrecta\",\n        status: \"Estat\",\n        exploitation: \"Explotació\",\n        stable: \"Origen\",\n        not_assigned: \"No assignada\",\n        father: \"Pare\",\n        mother: \"Mare\",\n        nursing_status: \"Estat d'alletament\",\n        not_nursing: \"No alleta\",\n        nursing_one: \"Alleta un vedell\",\n        nursing_two: \"Alleta dos vedells\",\n        back_to_animal_list: \"Tornar al llistat d'animals\",\n        complete_info_tab: \"Informació Completa\",\n        birth_history_tab: \"Historial de Parts\",\n        changes_history_tab: \"Historial de Canvis\",\n        identification_data: \"Dades d'Identificació\",\n        general_data: \"Dades Generals\",\n        birth_history: \"Historial de Parts\",\n        birth_registry: \"Registre de tots els parts de l'animal\",\n        no_births: \"Aquest animal no té parts registrats\",\n        date: \"Data\",\n        gender_label: \"Gènere\",\n        observations: \"Observacions\",\n        changes_history: \"Historial de Canvis\",\n        changes_registry: \"Registre de canvis realitzats a l'animal\",\n        no_changes: \"No hi ha canvis registrats per a aquest animal\",\n        changes_date: \"Data\",\n        changes_user: \"Usuari\",\n        changes_field: \"Camp\",\n        changes_old_value: \"Valor anterior\",\n        changes_new_value: \"Valor nou\"\n      }\n    };\n\n    // Función para obtener traducción\n    function t(key, lang) {\n      return translations[lang]?.[key] || key;\n    }\n\n    // Función para traducir la ficha de animal\n    function translateAnimalFile() {\n      const currentLang = localStorage.getItem('userLanguage') || 'es';\n      \n      // Traducir título y encabezados principales\n      document.querySelector('h1.text-3xl').textContent = t('title', currentLang);\n      \n      // Mantener el texto completo \"Volver al listado de animales\" en el botón superior\n      // Comentamos esta parte para que no sobrescriba el texto que ya establecimos\n      /* \n      const backLink = document.getElementById('back-to-list-link');\n      if (backLink) {\n        backLink.innerHTML = `<span class=\"mr-1\">←</span> ${t('back_to_list', currentLang)}`;\n      }\n      */\n      \n      // Corregir problema de ID duplicado\n      const idElement = document.getElementById('animal-id-text');\n      if (idElement) {\n        // Obtener el ID de animal (desde la URL)\n        const animalIdFromUrl = window.location.pathname.split('/').pop();\n        // Actualizar el texto con el formato e ID correcto\n        idElement.textContent = `${t('animal_id', currentLang)}: ${animalIdFromUrl}`;\n      }\n      \n      // Traducir elementos básicos\n      const elements = [\n        { selector: '.text-gray-600.dark\\\\:text-gray-300', key: 'animal_id', prefix: true },\n        { selector: '.animate-spin + p', key: 'loading', prefix: false },\n        { selector: '.text-lg.font-medium.text-red-800', key: 'error_title', prefix: false },\n        { selector: '#retry-button', key: 'retry', prefix: true },\n        { selector: 'a[href^=\"/animals/update\"]', key: 'update', prefix: true },\n      ];\n      \n      elements.forEach(el => {\n        const element = document.querySelector(el.selector);\n        if (element) {\n          if (el.prefix) {\n            // Si tiene un prefijo (como un ícono), preservarlo\n            const text = element.innerHTML;\n            const iconPrefix = text.match(/.*?[^\\w\\s]/); // Captura todo hasta el primer no alfanumérico\n            if (iconPrefix) {\n              element.innerHTML = iconPrefix[0] + ' ' + t(el.key, currentLang);\n            } else {\n              element.textContent = t(el.key, currentLang);\n            }\n          } else {\n            element.textContent = t(el.key, currentLang);\n          }\n        }\n      });\n\n      // Traducir estado del animal\n      const estadoElement = document.querySelector('.px-3.py-1.rounded-full');\n      if (estadoElement) {\n        // Determinar si está activo o inactivo basado en la clase CSS\n        const isActive = estadoElement.classList.contains('bg-green-100') || \n                         estadoElement.classList.contains('text-green-800');\n        estadoElement.textContent = isActive ? t('active', currentLang) : t('inactive', currentLang);\n      }\n      \n      // Traducir información del animal (resumen y detalle)\n      document.querySelectorAll('.text-sm.text-gray-500').forEach(label => {\n        const labelText = label.textContent.trim();\n        \n        // Mapear etiquetas a claves de traducción\n        let translationKey = '';\n        if (labelText.includes('Código') || labelText.includes('Codi')) translationKey = 'code';\n        else if (labelText.includes('Nombre') || labelText.includes('Nom')) translationKey = 'name';\n        else if (labelText.includes('Número de Serie') || labelText.includes('Número de Sèrie')) translationKey = 'serial_number';\n        else if (labelText.includes('Sexo') || labelText.includes('Sexe')) translationKey = 'gender';\n        else if (labelText.includes('Fecha de nacimiento') || labelText.includes('Data de naixement')) translationKey = 'birth_date';\n        else if (labelText.includes('Estado') || labelText.includes('Estat')) translationKey = 'status';\n        else if (labelText.includes('Explotación') || labelText.includes('Explotació')) translationKey = 'exploitation';\n        else if (labelText.includes('Origen') || labelText.includes('Origen')) translationKey = 'stable';\n        else if (labelText.includes('Padre') || labelText.includes('Pare')) translationKey = 'father';\n        else if (labelText.includes('Madre') || labelText.includes('Mare')) translationKey = 'mother';\n        else if (labelText.includes('amamantamiento') || labelText.includes('alletament')) translationKey = 'nursing_status';\n        \n        if (translationKey) {\n          label.textContent = t(translationKey, currentLang);\n        }\n      });\n      \n      // Traducir pestañas de navegación\n      document.querySelectorAll('button[id^=\"tab-\"]').forEach(tab => {\n        if (tab.id === 'tab-info') {\n          tab.textContent = t('complete_info_tab', currentLang);\n        } else if (tab.id === 'tab-partos') {\n          tab.textContent = t('birth_history_tab', currentLang);\n        } else if (tab.id === 'tab-changes') {\r\n          tab.textContent = t('changes_history_tab', currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de secciones\r\n      document.querySelectorAll('h3.text-lg.font-medium').forEach(header => {\r\n        const headerText = header.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (headerText.includes('Datos de Identificación') || headerText.includes('Dades d\\'Identificació')) {\r\n          translationKey = 'identification_data';\r\n        } else if (headerText.includes('Datos Generales') || headerText.includes('Dades Generals')) {\r\n          translationKey = 'general_data';\r\n        } else if (headerText.includes('Historial de Partos') || headerText.includes('Historial de Parts')) {\r\n          translationKey = 'birth_history';\r\n        } else if (headerText.includes('Historial de Cambios') || headerText.includes('Historial de Canvis')) {\r\n          translationKey = 'changes_history';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          header.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir descripciones de secciones\r\n      document.querySelectorAll('.mb-4 p.text-gray-500, .p-6.text-center p').forEach(desc => {\r\n        const descText = desc.textContent.trim();\r\n        \r\n        let translationKey = '';\r\n        if (descText.includes('Registro de todos los partos') || descText.includes('Registre de tots els parts')) {\r\n          translationKey = 'birth_registry';\r\n        } else if (descText.includes('No tiene partos registrados') || descText.includes('no té parts registrats')) {\r\n          translationKey = 'no_births';\r\n        } else if (descText.includes('Registro de cambios') || descText.includes('Registre de canvis')) {\r\n          translationKey = 'changes_registry';\r\n        } else if (descText.includes('No hay cambios registrados') || descText.includes('No hi ha canvis registrats')) {\r\n          translationKey = 'no_changes';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          desc.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir encabezados de tablas\r\n      document.querySelectorAll('th.px-6.py-3').forEach(th => {\r\n        const headerText = th.textContent.trim();\r\n        let translationKey = '';\r\n        \r\n        if (headerText.includes('Fecha') || headerText.includes('Data')) {\r\n          translationKey = 'date';\r\n          // Conservar el indicador de ordenación\r\n          const sortIndicator = th.querySelector('.sort-indicator');\r\n          if (sortIndicator) {\r\n            th.innerHTML = t(translationKey, currentLang) + ' <span class=\"ml-1 sort-indicator\">' + sortIndicator.innerHTML + '</span>';\r\n            return;\r\n          }\r\n        } else if (headerText.includes('Género') || headerText.includes('Gènere')) {\r\n          translationKey = 'gender_label';\r\n        } else if (headerText.includes('Estado') || headerText.includes('Estat')) {\r\n          translationKey = 'status';\r\n        } else if (headerText.includes('Observaciones') || headerText.includes('Observacions')) {\r\n          translationKey = 'observations';\r\n        }\r\n        \r\n        if (translationKey) {\r\n          th.textContent = t(translationKey, currentLang);\r\n        }\r\n      });\r\n      \r\n      // Traducir botones de volver al listado\r\n      document.querySelectorAll('a[href=\"/animals\"].inline-flex').forEach(button => {\r\n        // Preservar el icono de flecha\r\n        const arrowSpan = button.querySelector('span.mr-2');\r\n        if (arrowSpan) {\r\n          button.innerHTML = `<span class=\"mr-2\">←</span> ${t('back_to_animal_list', currentLang)}`;\r\n        }\r\n      });\r\n      \r\n      // Traducir textos en el contenido dinámico\r\n      document.querySelectorAll('.font-medium').forEach(value => {\r\n        const valueText = value.textContent.trim();\r\n        \r\n        // Solo traducir valores específicos que sabemos que necesitan traducción\r\n        if (valueText === 'No disponible') {\r\n          value.textContent = t('not_available', currentLang);\r\n        } else if (valueText === 'No asignada') {\r\n          value.textContent = t('not_assigned', currentLang);\r\n        } else if (valueText === 'Fecha incorrecta') {\r\n          value.textContent = t('incorrect_date', currentLang);\r\n        } else if (valueText === 'Macho') {\r\n          value.textContent = t('male', currentLang);\r\n        } else if (valueText === 'Hembra') {\r\n          value.textContent = t('female', currentLang);\r\n        } else if (valueText === 'Activo') {\r\n          value.textContent = t('active', currentLang);\r\n        } else if (valueText === 'Fallecido') {\r\n          value.textContent = t('dead', currentLang);\r\n        } else if (valueText === 'No amamanta') {\r\n          value.textContent = t('not_nursing', currentLang);\r\n        } else if (valueText.includes('Amamanta un ternero')) {\r\n          value.textContent = t('nursing_one', currentLang);\r\n        } else if (valueText.includes('Amamanta dos terneros')) {\r\n          value.textContent = t('nursing_two', currentLang);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Ejecutar traducción inicial\r\n    translateAnimalFile();\r\n    \r\n    // Retraducir cuando cambie el idioma\r\n    window.addEventListener('storage', function(e) {\r\n      if (e.key === 'userLanguage') {\r\n        translateAnimalFile();\r\n        translateTableButtons();\r\n      }\r\n    });\r\n\r\n    // SOLUCIÓN AGRESIVA PARA FORZAR LAS TRADUCCIONES\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // Función de fuerza bruta para traducir todo, con selección directa de elementos\r\n      function traducirTodoForzado() {\r\n        const currentLang = localStorage.getItem('userLanguage') || 'es';\r\n        console.log('[DEBUG] Aplicando traducción forzada, idioma: ' + currentLang);\r\n        \r\n        // Botones de eliminar\r\n        document.querySelectorAll('button').forEach(btn => {\r\n          if (btn.textContent.trim() === 'Eliminar') {\r\n            if (currentLang === 'ca') {\r\n              btn.title = 'Eliminar part';\r\n            } else {\r\n              btn.title = 'Eliminar parto';\r\n            }\r\n          }\r\n        });\r\n        \r\n        // Textos de género\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Macho') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Mascle' : 'Macho';\r\n            console.log('[DEBUG] Traducido Macho→Mascle');\r\n          } \r\n          if (texto === 'Hembra') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Femella' : 'Hembra';\r\n            console.log('[DEBUG] Traducido Hembra→Femella');\r\n          }\r\n        });\r\n        \r\n        // Sin observaciones\r\n        document.querySelectorAll('td').forEach(celda => {\r\n          const texto = celda.textContent.trim();\r\n          if (texto === 'Sin observaciones' || texto === 'animals.no_observations') {\r\n            celda.innerHTML = currentLang === 'ca' ? 'Sense observacions' : 'Sin observaciones';\n            console.log('[DEBUG] Traducido observaciones');\n          }\n        });\n        \n        // Estados (Vivo/Fallecido)\n        document.querySelectorAll('span.inline-flex').forEach(span => {\n          const texto = span.textContent.trim();\n          if (texto === 'Vivo') {\n            span.innerHTML = currentLang === 'ca' ? 'Viu' : 'Vivo';\n            console.log('[DEBUG] Traducido Vivo→Viu');\n          }\n          if (texto === 'Fallecido') {\n            span.innerHTML = currentLang === 'ca' ? 'Mort' : 'Fallecido';\n            console.log('[DEBUG] Traducido Fallecido→Mort');\n          }\n        });\n      }\n      \n      // Ejecutar inmediatamente\n      traducirTodoForzado();\n      \n      // Repetir cada 500ms durante los primeros 10 segundos\n      for (let i = 1; i <= 20; i++) {\n        setTimeout(traducirTodoForzado, i * 500);\n      }\n      \n      // Establecer un intervalo permanente para seguir traduciéndolo\n      setInterval(traducirTodoForzado, 2000);\n      \n      // Cuando cambie el idioma\n      window.addEventListener('storage', function(e) {\n        if (e.key === 'userLanguage') {\n          console.log('[DEBUG] Cambio de idioma detectado');\n          // Aplicar inmediatamente y luego con retrasos\n          traducirTodoForzado();\n          for (let i = 1; i <= 10; i++) {\n            setTimeout(traducirTodoForzado, i * 200);\n          }\n        }\n      });\n    });\n    \n    // Botón de reintentar carga\n    const retryButton = document.getElementById('retry-button');\n    if (retryButton) {\n      retryButton.addEventListener('click', () => {\n        window.location.reload();\n      });\n    }\n    \n    // Obtener todas las pestañas y contenidos\n    const tabs = document.querySelectorAll('#tab-info, #tab-partos, #tab-changes');\n    const contents = document.querySelectorAll('#content-info, #content-partos, #content-changes');\n    \n    console.log('Pestañas encontradas:', tabs.length);\n    console.log('Contenidos encontrados:', contents.length);\n    \n    // Función para mostrar pestaña y ocultar las demás\n    const showTab = (tabId) => {\n      console.log('Cambiando a pestaña:', tabId);\n      \n      // Ocultar todos los contenidos\n      contents.forEach(content => {\n        content.classList.add('hidden');\n      });\n      \n      // Resetear estilos de todas las pestañas\n      tabs.forEach(tab => {\n        tab.classList.remove('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n        tab.classList.add('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n      });\n      \n      // Activar pestaña seleccionada\n      const selectedTab = document.getElementById(tabId);\n      if (selectedTab) {\n        selectedTab.classList.remove('text-gray-500', 'dark:text-gray-400', 'hover:text-gray-700', 'dark:hover:text-gray-300');\n        selectedTab.classList.add('text-primary', 'border-b-2', 'border-primary', 'font-medium');\n      }\n      \n      // Mostrar contenido correspondiente\n      const contentId = tabId.replace('tab-', 'content-');\n      const selectedContent = document.getElementById(contentId);\n      if (selectedContent) {\n        selectedContent.classList.remove('hidden');\n      }\n    };\n    \n    // Inicializar con la pestaña de información abierta\n    showTab('tab-info');\n    \n    // Eventos de clic para pestañas\n    tabs.forEach(tab => {\n      tab.addEventListener('click', () => {\n        showTab(tab.id);\n        console.log('Clic en pestaña:', tab.id);\n      });\n    });\n\n    // Ordenación de la tabla de partos\n    const sortColumns = document.querySelectorAll('#sort-fecha, #sort-genero, #sort-estado');\n    let currentSortColumn = 'sort-fecha';\n    let currentSortDirection = 'asc';\n\n    // Función para ordenar la tabla\n    const sortTable = (columnId, direction) => {\n      const table = document.getElementById('tabla-partos');\n      if (!table) return;\n\n      const tbody = table.querySelector('tbody');\n      if (!tbody) return;\n\n      const rows = Array.from(tbody.querySelectorAll('tr'));\n      const sortedRows = [...rows];\n\n      // Obtener el índice de la columna según el ID del encabezado\n      let columnIndex = 0;\n      if (columnId === 'sort-genero') columnIndex = 1;\n      if (columnId === 'sort-estado') columnIndex = 2;\n\n      // Ordenar filas\n      sortedRows.sort((a, b) => {\n        const cellA = a.querySelectorAll('td')[columnIndex].textContent.trim();\n        const cellB = b.querySelectorAll('td')[columnIndex].textContent.trim();\n        \n        if (columnId === 'sort-fecha') {\n          // Para fechas, intentar convertir a objetos Date para comparación\n          const dateA = parseDate(cellA);\n          const dateB = parseDate(cellB);\n          \n          if (direction === 'asc') {\n            return dateA - dateB;\n          } else {\n            return dateB - dateA;\n          }\n        } else {\n          // Para texto, comparar strings\n          if (direction === 'asc') {\n            return cellA.localeCompare(cellB, 'es');\n          } else {\n            return cellB.localeCompare(cellA, 'es');\n          }\n        }\n      });\n\n      // Limpiar y reconstruir la tabla\n      while (tbody.firstChild) {\n        tbody.removeChild(tbody.firstChild);\n      }\n\n      sortedRows.forEach(row => tbody.appendChild(row));\n\n      // Actualizar indicadores de ordenación\n      sortColumns.forEach(col => {\n        const indicator = col.querySelector('.sort-indicator');\n        if (indicator) {\n          indicator.textContent = '';\n        }\n      });\n\n      const activeHeader = document.getElementById(columnId);\n      const indicator = activeHeader.querySelector('.sort-indicator');\n      if (indicator) {\n        indicator.textContent = direction === 'asc' ? '↑' : '↓';\n      }\n    };\n\n    // Ayudante para convertir texto de fecha a objeto Date\n    const parseDate = (dateStr) => {\n      if (dateStr === 'N/A' || dateStr === 'Fecha incorrecta') {\n        return new Date(0); // Para valores no fechas, usar una fecha muy antigua\n      }\n      \n      // Intenta analizar la fecha en formato DD/MM/YYYY\n      const parts = dateStr.split(/[\\/\\-]/);\n      if (parts.length === 3) {\n        // Asumir formato DD/MM/YYYY\n        return new Date(parts[2], parts[1] - 1, parts[0]);\n      }\n      \n      // Como último recurso, intentar crear fecha directamente\n      return new Date(dateStr);\n    };\n\n    // Agregar eventos de clic a las columnas\n    sortColumns.forEach(col => {\n      col.addEventListener('click', () => {\n        // Si es la misma columna, cambiar dirección\n        if (col.id === currentSortColumn) {\n          currentSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n          // Si es una nueva columna, establecer como ascendente\n          currentSortColumn = col.id;\n          currentSortDirection = 'asc';\n        }\n        \n        sortTable(currentSortColumn, currentSortDirection);\n      });\n    });\n\n    // Ordenar por fecha ascendente al cargar la página\n    sortTable('sort-fecha', 'asc');\n    \n\n  });\n  // Crear un modal personalizado para interacciones con el usuario\n  function crearModalPersonalizado() {\n    // Comprobar si ya existe un modal\n    let modal = document.getElementById('modal-personalizado');\n    if (modal) return modal;\n    \n    // Crear el modal\n    modal = document.createElement('div');\n    modal.id = 'modal-personalizado';\n    modal.className = 'fixed inset-0 flex items-center justify-center z-50 hidden';\n    modal.innerHTML = `\n      <div class=\"fixed inset-0 bg-black bg-opacity-25\" onclick=\"document.getElementById('modal-personalizado').classList.add('hidden')\"></div>\n      <div class=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-auto z-50 relative shadow-lg\">\n        <h3 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\" id=\"modal-titulo\"></h3>\n        <p class=\"text-gray-600 dark:text-gray-300 mb-6\" id=\"modal-mensaje\"></p>\n        <div class=\"flex justify-end space-x-4\">\n          <button id=\"modal-btn-cancelar\" class=\"px-4 py-2 bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-gray-200 rounded hover:bg-gray-300 dark:hover:bg-gray-600 focus:outline-none\">Cancelar</button>\n          <button id=\"modal-btn-confirmar\" class=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 focus:outline-none\">Confirmar</button>\n        </div>\n      </div>\n    `;\n    document.body.appendChild(modal);\n    \n    // Configurar el botón Cancelar\n    const btnCancelar = modal.querySelector('#modal-btn-cancelar');\n    btnCancelar.addEventListener('click', function() {\n      modal.classList.add('hidden');\n    });\n    \n    return modal;\n  }\n  \n  // Función para mostrar una notificación\n  function mostrarNotificacion(mensaje, tipo = 'success') {\n    // Crear elemento de notificación\n    const notificacion = document.createElement('div');\n    notificacion.className = `fixed bottom-4 right-4 p-4 rounded-lg shadow-lg text-white ${tipo === 'success' ? 'bg-green-500' : 'bg-red-500'} z-50 animate-fadeIn`;\n    notificacion.textContent = mensaje;\n    document.body.appendChild(notificacion);\n    \n    // Eliminar después de 3 segundos\n    setTimeout(() => {\n      notificacion.classList.add('animate-fadeOut');\n      setTimeout(() => {\n        notificacion.remove();\n      }, 500);\n    }, 3000);\n  }\n  \n  // Añadir botones de acciones a la tabla de partos\n  document.addEventListener('DOMContentLoaded', function() {\n    console.log('DOM cargado: Inicializando funcionalidades de animal...');\n    \n    // Agregar estilos para animaciones\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      @keyframes fadeOut {\n        from { opacity: 1; transform: translateY(0); }\n        to { opacity: 0; transform: translateY(10px); }\n      }\n      .animate-fadeIn {\n        animation: fadeIn 0.3s ease-out forwards;\n      }\n      .animate-fadeOut {\n        animation: fadeOut 0.3s ease-in forwards;\n      }\n    `;\n    document.head.appendChild(style);\n    \n    // Crear modal personalizado\n    const modal = crearModalPersonalizado();\n    \n    const tablaPartos = document.getElementById('tabla-partos');\n    if (!tablaPartos) return;\n    \n    const tbody = tablaPartos.querySelector('tbody');\n    if (!tbody) return;\n    \n    // No añadir botones si no hay partos (solo hay mensaje de 'no hay registros')\n    const filasVacias = tbody.querySelectorAll('tr[data-empty=\"true\"]');\n    if (filasVacias.length > 0) return;\n    \n    // Añadir columna de acciones al encabezado\n    const thead = tablaPartos.querySelector('thead tr');\n    if (thead) {\n      const thAcciones = document.createElement('th');\n      thAcciones.scope = 'col';\n      thAcciones.className = 'px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider';\n      thAcciones.textContent = 'Acciones';\n      thead.appendChild(thAcciones);\n    }\n    \n    // Añadir botones a cada fila\n    const filas = tbody.querySelectorAll('tr');\n    filas.forEach(function(fila) {\n      // Si es una fila vacía, no añadir botones\n      if (fila.getAttribute('data-empty') === 'true') return;\n      \n      // Extraer el ID del parto - intentaremos obtenerlo de un atributo data-id\n      // Si no está disponible, usaremos un ID generado\n      const partoId = fila.getAttribute('data-id') || `parto-${Math.floor(Math.random() * 1000000)}`;\n      \n      // Crear celda para botones\n      const tdAcciones = document.createElement('td');\n      tdAcciones.className = 'px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400';\n      \n      // Botón editar\n      const btnEditar = document.createElement('button');\n      btnEditar.className = 'bg-gray-100 text-blue-600 py-1 px-3 rounded-md mr-2 text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-blue-400 dark:hover:bg-gray-600';\n      btnEditar.title = 'Editar información del parto';\n      btnEditar.textContent = 'Editar';\n      btnEditar.setAttribute('data-id', partoId);\n      \n      // Botón eliminar\n      const btnEliminar = document.createElement('button');\n      btnEliminar.className = 'bg-gray-100 text-red-600 py-1 px-3 rounded-md text-xs font-medium hover:bg-gray-200 dark:bg-gray-700 dark:text-red-400 dark:hover:bg-gray-600';\n      btnEliminar.textContent = 'Eliminar';\n      btnEliminar.setAttribute('data-id', partoId);\n      btnEliminar.title = 'Eliminar parto';\n      \n      // Añadir botones a la celda\n      tdAcciones.appendChild(btnEditar);\n      tdAcciones.appendChild(btnEliminar);\n      \n      // Añadir celda a la fila\n      fila.appendChild(tdAcciones);\n      \n      // Evento para editar parto\n      btnEditar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        console.log('Editando parto:', partoId);\n        \n        // Usar la función del script editar-parto-v4.js\n        if (window.editarPartoV4 && window.editarPartoV4.mostrarModal) {\n          window.editarPartoV4.mostrarModal(partoId, fila);\n        } else {\n          console.error('No se ha cargado correctamente el script de edición de partos v4');\n          mostrarNotificacion('Error al cargar el editor de partos', 'error');\n        }\n      });\n      \n      // Evento para eliminar parto\n      btnEliminar.addEventListener('click', function(event) {\n        const partoId = this.getAttribute('data-id');\n        const fila = this.closest('tr');\n        const rect = this.getBoundingClientRect();\n        \n        // Configurar el modal\n        document.getElementById('modal-titulo').textContent = 'Eliminar parto';\n        document.getElementById('modal-mensaje').textContent = '¿Seguro que desea eliminar este parto? Esta acción no se puede deshacer.';\n        \n        // Mostrar el modal\n        modal.classList.remove('hidden');\n        \n        // Configurar el botón Confirmar\n        const btnConfirmar = modal.querySelector('#modal-btn-confirmar');\n        btnConfirmar.onclick = function() {\n          modal.classList.add('hidden');\n          console.log('Eliminando parto:', partoId);\n          \n          const token = localStorage.getItem('token');\n          if (!token) {\n            mostrarNotificacion('Error: No se ha encontrado el token de autenticación', 'error');\n            return;\n          }\n          \n          // Obtener el ID del animal de la URL\n          const animalIdMatch = window.location.pathname.match(/\\/animals\\/([0-9]+)/);\n          const animalId = animalIdMatch ? animalIdMatch[1] : null;\n          \n          if (!animalId) {\n            alert('Error: No se pudo determinar el ID del animal');\n            return;\n          }\n          \n          // Vamos a intentar diferentes rutas de API en orden de prioridad\n          const apiUrls = [\n            `http://localhost:8000/api/v1/animals/${animalId}/partos/${partoId}`, // Ruta preferida con ID de animal\n            `http://localhost:8000/api/v1/partos/${partoId}` // Ruta alternativa\n          ];\n          \n          // Probar con el endpoint principal (animal_id/partos/parto_id)\n          console.log(`Intentando eliminar parto ${partoId} del animal ${animalId}`);\n          fetch(apiUrls[0], {\n            method: 'DELETE',\n            headers: {\n              'Authorization': `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(function(response) {\n            if (!response.ok) {\n              // Si el primer endpoint falla, probar con el endpoint alternativo\n              console.log(`Endpoint principal falló con ${response.status}, intentando endpoint alternativo...`);\n              return fetch(apiUrls[1], {\r\n                method: 'DELETE',\r\n                headers: {\r\n                  'Authorization': `Bearer ${token}`,\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              });\r\n            }\r\n            \r\n            // Algunos endpoints no devuelven JSON válido\r\n            return response.json().catch(() => ({ success: true }));\r\n          })\r\n          .then(function(responseOrData) {\r\n            // Si es una respuesta HTTP de la segunda petición\r\n            if (responseOrData instanceof Response) {\r\n              const response = responseOrData;\r\n              if (!response.ok) {\r\n                throw new Error(`Error en la API: ${response.status}`);\r\n              }\r\n              \r\n              // Algunos endpoints no devuelven JSON válido\r\n              return response.json().catch(() => ({ success: true }));\r\n            }\r\n            \r\n            // Si son datos de una petición exitosa anterior\r\n            return responseOrData;\r\n          })\r\n          .then(function(data) {\r\n            console.log('Parto eliminado correctamente:', data);\r\n            \r\n            // Eliminar la fila de la tabla\r\n            if (fila) {\r\n              fila.remove();\r\n              \r\n              // Si no quedan filas, mostrar mensaje\r\n              const filas = tablaPartos.querySelectorAll('tbody tr');\r\n              if (filas.length === 0) {\r\n                const tbody = tablaPartos.querySelector('tbody');\r\n                if (tbody) {\r\n                  const tr = document.createElement('tr');\r\n                  tr.setAttribute('data-empty', 'true');\r\n                  tr.innerHTML = `\r\n                    <td colspan=\"5\" class=\"px-6 py-4 text-center text-sm text-gray-500 dark:text-gray-400\">\r\n                      No hay registros de partos para este animal\r\n                    </td>\r\n                  `;\r\n                  tbody.appendChild(tr);\r\n                }\r\n              }\r\n            }\r\n            \r\n            mostrarNotificacion('Parto eliminado correctamente', 'success');\r\n          })\r\n          .catch(function(error) {\r\n            console.error('Error al eliminar parto:', error);\r\n            \r\n            // Intentar mostrar un mensaje más descriptivo basado en el error\r\n            let mensajeError = error.message || 'Error desconocido';\r\n            \r\n            // Si es un error específico de API, intentar extraer más información\r\n            if (mensajeError.includes('500')) {\r\n              mensajeError = 'Error interno del servidor. Posible problema con la base de datos.';\r\n            } else if (mensajeError.includes('404')) {\r\n              mensajeError = 'No se encontró el recurso. Es posible que el parto ya haya sido eliminado.';\r\n            } else if (mensajeError.includes('403')) {\r\n              mensajeError = 'No tiene permisos para eliminar este parto.';\r\n            } else if (mensajeError.includes('401')) {\r\n              mensajeError = 'Su sesión ha expirado. Por favor, inicie sesión nuevamente.';\r\n            }\r\n            \r\n            mostrarNotificacion(`Error al eliminar parto: ${mensajeError}`, 'error');\r\n          });\r\n        }\r\n      });\r\n    });\r\n  });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyAidmVyc2lvbiI6IDMsICJzb3VyY2VzIjogWyIvY29kZWJ1aWxkL291dHB1dC9zcmMxMjEyNjM1MjMxL3NyYy9tYXNjbGV0LWltcGVyaS13ZWIvZnJvbnRlbmQvc3JjL3BhZ2VzL2FuaW1hbHMvW2lkXS5hc3RybyJdLCAic291cmNlc0NvbnRlbnQiOiBbIi0tLVxyXG4vLyBJbXBvcnRhciBlbCBsYXlvdXQgeSBjb21wb25lbnRlc1xyXG5pbXBvcnQgTWFpbkxheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL2xheW91dC9NYWluTGF5b3V0LmFzdHJvJztcclxuaW1wb3J0IGFuaW1hbFNlcnZpY2UgZnJvbSAnLi4vLi4vc2VydmljZXMvYW5pbWFsU2VydmljZSc7XHJcbmltcG9ydCB7IGdldEN1cnJlbnRMYW5ndWFnZSB9IGZyb20gJy4uLy4uL2kxOG4vY29uZmlnJztcclxuaW1wb3J0IEVkaXRhclBhcnRvTW9kYWwgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9hbmltYWxzL0VkaXRhclBhcnRvTW9kYWwnO1xyXG5cclxuLy8gT2J0ZW5lciBlbCBJRCBkZWwgYW5pbWFsIGRlIGxvcyBwYXLDoW1ldHJvcyBkZSBsYSBVUkxcclxuY29uc3QgeyBpZCB9ID0gQXN0cm8ucGFyYW1zO1xyXG5cclxuLy8gT2J0ZW5lciBlbCBpZGlvbWEgYWN0dWFsIHBhcmEgcmVuZGVyaXphZG8gZW4gc2Vydmlkb3JcclxuY29uc3Qgc2VydmVyTGFuZyA9IGdldEN1cnJlbnRMYW5ndWFnZSgpO1xyXG5cclxuLy8gVmFyaWFibGVzIGRlIHRyYWR1Y2Npw7NuIGRpcmVjdGFzIFxyXG5jb25zdCB0eHRNYWNobyA9IHNlcnZlckxhbmcgPT09ICdjYScgPyAnTWFzY2xlJyA6ICdNYWNobyc7XHJcbmNvbnN0IHR4dEhlbWJyYSA9IHNlcnZlckxhbmcgPT09ICdjYScgPyAnRmVtZWxsYScgOiAnSGVtYnJhJztcclxuY29uc3QgdHh0Tm9EaXNwb25pYmxlID0gc2VydmVyTGFuZyA9PT0gJ2NhJyA/ICdObyBkaXNwb25pYmxlJyA6ICdObyBkaXNwb25pYmxlJztcclxuY29uc3QgdHh0T2JzZXJ2YWNpb25lcyA9IHNlcnZlckxhbmcgPT09ICdjYScgPyAnU2Vuc2Ugb2JzZXJ2YWNpb25zJyA6ICdTaW4gb2JzZXJ2YWNpb25lcyc7XHJcbmNvbnN0IHR4dFZpdm8gPSBzZXJ2ZXJMYW5nID09PSAnY2EnID8gJ1ZpdScgOiAnVml2byc7XHJcbmNvbnN0IHR4dE11ZXJ0byA9IHNlcnZlckxhbmcgPT09ICdjYScgPyAnTW9ydCcgOiAnRmFsbGVjaWRvJztcclxuXHJcbi8vIFRyYWR1Y2Npb25lcyBwYXJhIGxhIGZpY2hhIGRlIGFuaW1hbFxyXG5jb25zdCB0cmFuc2xhdGlvbnMgPSB7XHJcbiAgZXM6IHtcclxuICAgIHRpdGxlOiBcIkZpY2hhIGRlIEFuaW1hbFwiLFxyXG4gICAgYmFja190b19saXN0OiBcIlZvbHZlciBhbCBsaXN0YWRvXCIsXHJcbiAgICBhbmltYWxfaWQ6IFwiSUQgQW5pbWFsXCIsXHJcbiAgICBsb2FkaW5nOiBcIkNhcmdhbmRvIGRhdG9zIGRlbCBhbmltYWwuLi5cIixcclxuICAgIGVycm9yX3RpdGxlOiBcIkVycm9yXCIsXHJcbiAgICByZXRyeTogXCJSZWludGVudGFyXCIsXHJcbiAgICBhY3RpdmU6IFwiQWN0aXZvXCIsXHJcbiAgICBpbmFjdGl2ZTogXCJCYWphXCIsXHJcbiAgICBkZWFkOiBcIkZhbGxlY2lkb1wiLFxyXG4gICAgdXBkYXRlOiBcIkFjdHVhbGl6YXJcIixcclxuICAgIGNvZGU6IFwiQ8OzZGlnb1wiLFxyXG4gICAgbmFtZTogXCJOb21icmVcIixcclxuICAgIHNlcmlhbF9udW1iZXI6IFwiTsO6bWVybyBkZSBTZXJpZVwiLFxyXG4gICAgZ2VuZGVyOiBcIlNleG9cIixcclxuICAgIG1hbGU6IFwiTWFjaG9cIixcclxuICAgIGZlbWFsZTogXCJIZW1icmFcIixcclxuICAgIGJpcnRoX2RhdGU6IFwiRmVjaGEgZGUgbmFjaW1pZW50b1wiLFxyXG4gICAgbm90X2F2YWlsYWJsZTogXCJObyBkaXNwb25pYmxlXCIsXHJcbiAgICBpbmNvcnJlY3RfZGF0ZTogXCJGZWNoYSBpbmNvcnJlY3RhXCIsXHJcbiAgICBzdGF0dXM6IFwiRXN0YWRvXCIsXHJcbiAgICBleHBsb2l0YXRpb246IFwiRXhwbG90YWNpw7NuXCIsXHJcbiAgICBzdGFibGU6IFwiT3JpZ2VuXCIsXHJcbiAgICBub3RfYXNzaWduZWQ6IFwiTm8gYXNpZ25hZGFcIixcclxuICAgIGZhdGhlcjogXCJQYWRyZVwiLFxyXG4gICAgbW90aGVyOiBcIk1hZHJlXCIsXHJcbiAgICBudXJzaW5nX3N0YXR1czogXCJFc3RhZG8gZGUgYW1hbWFudGFtaWVudG9cIixcclxuICAgIG5vdF9udXJzaW5nOiBcIk5vIGFtYW1hbnRhXCIsXHJcbiAgICBudXJzaW5nX29uZTogXCJBbWFtYW50YSBhIHVuIHRlcm5lcm9cIixcclxuICAgIG51cnNpbmdfdHdvOiBcIkFtYW1hbnRhIGEgZG9zIHRlcm5lcm9zXCIsXHJcbiAgICBiYWNrX3RvX2FuaW1hbF9saXN0OiBcIlZvbHZlciBhbCBsaXN0YWRvIGRlIGFuaW1hbGVzXCIsXHJcbiAgICBjb21wbGV0ZV9pbmZvX3RhYjogXCJJbmZvcm1hY2nDs24gQ29tcGxldGFcIixcclxuICAgIGJpcnRoX2hpc3RvcnlfdGFiOiBcIkhpc3RvcmlhbCBkZSBQYXJ0b3NcIixcclxuICAgIGNoYW5nZXNfaGlzdG9yeV90YWI6IFwiSGlzdG9yaWFsIGRlIENhbWJpb3NcIixcclxuICAgIGlkZW50aWZpY2F0aW9uX2RhdGE6IFwiRGF0b3MgZGUgSWRlbnRpZmljYWNpw7NuXCIsXHJcbiAgICBnZW5lcmFsX2RhdGE6IFwiRGF0b3MgR2VuZXJhbGVzXCIsXHJcbiAgICBiaXJ0aF9oaXN0b3J5OiBcIkhpc3RvcmlhbCBkZSBQYXJ0b3NcIixcclxuICAgIGJpcnRoX3JlZ2lzdHJ5OiBcIlJlZ2lzdHJvIGRlIHRvZG9zIGxvcyBwYXJ0b3MgZGVsIGFuaW1hbFwiLFxyXG4gICAgbm9fYmlydGhzOiBcIkVzdGUgYW5pbWFsIG5vIHRpZW5lIHBhcnRvcyByZWdpc3RyYWRvc1wiLFxyXG4gICAgZGF0ZTogXCJGZWNoYVwiLFxyXG4gICAgZ2VuZGVyX2xhYmVsOiBcIkfDqW5lcm9cIixcclxuICAgIG9ic2VydmF0aW9uczogXCJPYnNlcnZhY2lvbmVzXCIsXHJcbiAgICBjaGFuZ2VzX2hpc3Rvcnk6IFwiSGlzdG9yaWFsIGRlIENhbWJpb3NcIixcclxuICAgIGNoYW5nZXNfcmVnaXN0cnk6IFwiUmVnaXN0cm8gZGUgY2FtYmlvcyByZWFsaXphZG9zIGFsIGFuaW1hbFwiLFxyXG4gICAgbm9fY2hhbmdlczogXCJObyBoYXkgY2FtYmlvcyByZWdpc3RyYWRvcyBwYXJhIGVzdGUgYW5pbWFsXCIsXHJcbiAgICBjaGFuZ2VzX2RhdGU6IFwiRmVjaGFcIixcclxuICAgIGNoYW5nZXNfdXNlcjogXCJVc3VhcmlvXCIsXHJcbiAgICBjaGFuZ2VzX2ZpZWxkOiBcIkNhbXBvXCIsXHJcbiAgICBjaGFuZ2VzX29sZF92YWx1ZTogXCJWYWxvciBhbnRlcmlvclwiLFxyXG4gICAgY2hhbmdlc19uZXdfdmFsdWU6IFwiVmFsb3IgbnVldm9cIlxyXG4gIH0sXHJcbiAgY2E6IHtcclxuICAgIHRpdGxlOiBcIkZpdHhhIGQnQW5pbWFsXCIsXHJcbiAgICBiYWNrX3RvX2xpc3Q6IFwiVG9ybmFyIGFsIGxsaXN0YXRcIixcclxuICAgIGFuaW1hbF9pZDogXCJJRCBBbmltYWxcIixcclxuICAgIGxvYWRpbmc6IFwiQ2FycmVnYW50IGRhZGVzIGRlIGwnYW5pbWFsLi4uXCIsXHJcbiAgICBlcnJvcl90aXRsZTogXCJFcnJvclwiLFxyXG4gICAgcmV0cnk6IFwiUmVpbnRlbnRhclwiLFxyXG4gICAgYWN0aXZlOiBcIkFjdGl1XCIsXHJcbiAgICBpbmFjdGl2ZTogXCJCYWl4YVwiLFxyXG4gICAgZGVhZDogXCJNb3J0XCIsXHJcbiAgICB1cGRhdGU6IFwiQWN0dWFsaXR6YXJcIixcclxuICAgIGNvZGU6IFwiQ29kaVwiLFxyXG4gICAgbmFtZTogXCJOb21cIixcclxuICAgIHNlcmlhbF9udW1iZXI6IFwiTsO6bWVybyBkZSBTw6hyaWVcIixcclxuICAgIGdlbmRlcjogXCJTZXhlXCIsXHJcbiAgICBtYWxlOiBcIk1hc2NsZVwiLFxyXG4gICAgZmVtYWxlOiBcIkZlbWVsbGFcIixcclxuICAgIGJpcnRoX2RhdGU6IFwiRGF0YSBkZSBuYWl4ZW1lbnRcIixcclxuICAgIG5vdF9hdmFpbGFibGU6IFwiTm8gZGlzcG9uaWJsZVwiLFxyXG4gICAgaW5jb3JyZWN0X2RhdGU6IFwiRGF0YSBpbmNvcnJlY3RhXCIsXHJcbiAgICBzdGF0dXM6IFwiRXN0YXRcIixcclxuICAgIGV4cGxvaXRhdGlvbjogXCJFeHBsb3RhY2nDs1wiLFxyXG4gICAgc3RhYmxlOiBcIk9yaWdlblwiLFxyXG4gICAgbm90X2Fzc2lnbmVkOiBcIk5vIGFzc2lnbmFkYVwiLFxyXG4gICAgZmF0aGVyOiBcIlBhcmVcIixcclxuICAgIG1vdGhlcjogXCJNYXJlXCIsXHJcbiAgICBudXJzaW5nX3N0YXR1czogXCJFc3RhdCBkJ2FsbGV0YW1lbnRcIixcclxuICAgIG5vdF9udXJzaW5nOiBcIk5vIGFsbGV0YVwiLFxyXG4gICAgbnVyc2luZ19vbmU6IFwiQWxsZXRhIHVuIHZlZGVsbFwiLFxyXG4gICAgbnVyc2luZ190d286IFwiQWxsZXRhIGRvcyB2ZWRlbGxzXCIsXHJcbiAgICBiYWNrX3RvX2FuaW1hbF9saXN0OiBcIlRvcm5hciBhbCBsbGlzdGF0IGQnYW5pbWFsc1wiLFxyXG4gICAgY29tcGxldGVfaW5mb190YWI6IFwiSW5mb3JtYWNpw7MgQ29tcGxldGFcIixcclxuICAgIGJpcnRoX2hpc3RvcnlfdGFiOiBcIkhpc3RvcmlhbCBkZSBQYXJ0c1wiLFxyXG4gICAgY2hhbmdlc19oaXN0b3J5X3RhYjogXCJIaXN0b3JpYWwgZGUgQ2FudmlzXCIsXHJcbiAgICBpZGVudGlmaWNhdGlvbl9kYXRhOiBcIkRhZGVzIGQnSWRlbnRpZmljYWNpw7NcIixcclxuICAgIGdlbmVyYWxfZGF0YTogXCJEYWRlcyBHZW5lcmFsc1wiLFxyXG4gICAgYmlydGhfaGlzdG9yeTogXCJIaXN0b3JpYWwgZGUgUGFydHNcIixcclxuICAgIGJpcnRoX3JlZ2lzdHJ5OiBcIlJlZ2lzdHJlIGRlIHRvdHMgZWxzIHBhcnRzIGRlIGwnYW5pbWFsXCIsXHJcbiAgICBub19iaXJ0aHM6IFwiQXF1ZXN0IGFuaW1hbCBubyB0w6kgcGFydHMgcmVnaXN0cmF0c1wiLFxyXG4gICAgZGF0ZTogXCJEYXRhXCIsXHJcbiAgICBnZW5kZXJfbGFiZWw6IFwiR8OobmVyZVwiLFxyXG4gICAgb2JzZXJ2YXRpb25zOiBcIk9ic2VydmFjaW9uc1wiLFxyXG4gICAgY2hhbmdlc19oaXN0b3J5OiBcIkhpc3RvcmlhbCBkZSBDYW52aXNcIixcclxuICAgIGNoYW5nZXNfcmVnaXN0cnk6IFwiUmVnaXN0cmUgZGUgY2FudmlzIHJlYWxpdHphdHMgYSBsJ2FuaW1hbFwiLFxyXG4gICAgbm9fY2hhbmdlczogXCJObyBoaSBoYSBjYW52aXMgcmVnaXN0cmF0cyBwZXIgYSBhcXVlc3QgYW5pbWFsXCIsXHJcbiAgICBjaGFuZ2VzX2RhdGU6IFwiRGF0YVwiLFxyXG4gICAgY2hhbmdlc191c2VyOiBcIlVzdWFyaVwiLFxyXG4gICAgY2hhbmdlc19maWVsZDogXCJDYW1wXCIsXHJcbiAgICBjaGFuZ2VzX29sZF92YWx1ZTogXCJWYWxvciBhbnRlcmlvclwiLFxyXG4gICAgY2hhbmdlc19uZXdfdmFsdWU6IFwiVmFsb3Igbm91XCJcclxuICB9XG59O1xuXG4vLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgdHJhZHVjY2nDs24gc2Vnw7puIGlkaW9tYVxuZnVuY3Rpb24gdChrZXkpIHtcbiAgcmV0dXJuIHRyYW5zbGF0aW9uc1tzZXJ2ZXJMYW5nIGFzICdlcycgfCAnY2EnXT8uW2tleV0gfHwga2V5O1xufVxuXG4vLyBEZWZpbmlyIHTDrXR1bG8geSByb2wgZGUgdXN1YXJpb1xuY29uc3QgdGl0bGUgPSB0KCd0aXRsZScpO1xuY29uc3QgdXNlclJvbGUgPSBcImFkbWluaXN0cmFkb3JcIjsgLy8gU2ltdWxhY2nDs24gZGUgcm9sXG5cbi8vIFZhcmlhYmxlcyBwYXJhIGFsbWFjZW5hciBkYXRvcyB5IGVzdGFkb1xubGV0IGFuaW1hbCA9IG51bGw7XG5sZXQgZXJyb3IgPSBudWxsO1xubGV0IGxvYWRpbmcgPSB0cnVlO1xuXG50cnkge1xuICBpZiAoIWlkIHx8IGlzTmFOKHBhcnNlSW50KGlkKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0lEIGRlIGFuaW1hbCBubyB2w6FsaWRvJyk7XG4gIH1cblxuICAvLyBJbnRlbnRhciBjYXJnYXIgbG9zIGRhdG9zIGRlbCBhbmltYWxcbiAgY29uc29sZS5sb2coYEludGVudGFuZG8gY2FyZ2FyIGFuaW1hbCBjb24gSUQ6ICR7aWR9YCk7XG4gIGFuaW1hbCA9IGF3YWl0IGFuaW1hbFNlcnZpY2UuZ2V0QW5pbWFsQnlJZChwYXJzZUludChpZCkpO1xuICBjb25zb2xlLmxvZygnQW5pbWFsIGNhcmdhZG86JywgYW5pbWFsKTtcbiAgXG4gIGlmICghYW5pbWFsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdObyBzZSBwdWRvIGVuY29udHJhciBlbCBhbmltYWwnKTtcbiAgfVxuICBcbiAgbG9hZGluZyA9IGZhbHNlO1xufSBjYXRjaCAoZSkge1xuICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBjYXJnYXIgZGF0b3MgZGVsIGFuaW1hbDonLCBlKTtcbiAgZXJyb3IgPSBlLm1lc3NhZ2UgfHwgJ0Vycm9yIGFsIGNhcmdhciBsb3MgZGF0b3MgZGVsIGFuaW1hbCc7XG4gIGxvYWRpbmcgPSBmYWxzZTtcbn1cblxuLy8gVmFyaWFibGVzIHBhcmEgY29udHJvbGFyIHBlc3Rhw7Fhc1xuY29uc3Qgc2hvd1BhcnRvc1RhYiA9IGFuaW1hbCBcdTAwMjZcdTAwMjYgYW5pbWFsLmdlbmVyZSA9PT0gJ0YnOyAvLyBTb2xvIG1vc3RyYXIgcGVzdGHDsWEgZGUgcGFydG9zIHBhcmEgaGVtYnJhc1xuXG4vLyBPYnRlbmVyIGVsIGljb25vIGRlbCBhbmltYWwgXG4vLyBFbiBsdWdhciBkZSB1c2FyIGVtb2ppcywgdXRpbGl6YXJlbW9zIHJ1dGFzIGEgaW3DoWdlbmVzIFBOR1xubGV0IGljb25QYXRoID0gJy9pbWFnZXMvdG9yb19zaW5fYm9yZGVfMi5wbmcnOyAvLyBWYWxvciBwb3IgZGVmZWN0b1xuXG5pZiAoYW5pbWFsKSB7XG4gIGlmIChhbmltYWwuZ2VuZXJlID09PSAnTScpIHtcbiAgICBpY29uUGF0aCA9ICcvaW1hZ2VzL3Rvcm9fc2luX2JvcmRlXzIucG5nJztcbiAgfSBlbHNlIHtcbiAgICBpY29uUGF0aCA9IGFuaW1hbC5hbGxldGFyICE9PSAnMCcgPyAnL2ltYWdlcy92YWNhIGF6dWwucG5nJyA6ICcvaW1hZ2VzL3ZhY2EgYmxhbmNhLnBuZyc7XG4gIH1cbn1cblxuLy8gTWFudGVuZW1vcyBlbCBpY29ubyBlbW9qaSBwYXJhIGNvbXBhdGliaWxpZGFkIGNvbiBvdHJhcyBwYXJ0ZXMgZGVsIGPDs2RpZ29cbmNvbnN0IGljb24gPSBhbmltYWwgPyBhbmltYWxTZXJ2aWNlLmdldEFuaW1hbEljb24oYW5pbWFsKSA6ICfwn5CCJztcblxuLy8gT2J0ZW5lciBsYSBjbGFzZSBDU1MgcGFyYSBlbCBlc3RhZG8gZGVsIGFuaW1hbFxuY29uc3QgZXN0YWRvQ2xhc3MgPSBhbmltYWwgPyBhbmltYWxTZXJ2aWNlLmdldEFuaW1hbFN0YXR1c0NsYXNzKGFuaW1hbC5lc3RhZG8pIDogJ2JnLWdyYXktMTAwIHRleHQtZ3JheS04MDAnO1xuXG4tLS1cblxuXHUwMDNjTWFpbkxheW91dCB0aXRsZT17dGl0bGV9IHVzZXJSb2xlPXt1c2VyUm9sZX0gY3VycmVudFBhdGg9XCIvYW5pbWFsc1wiXHUwMDNlXG4gIFx1MDAzY2RpdiBjbGFzcz1cIm1iLTZcIlx1MDAzZVxuICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIGdhcC0yIG1iLTIgbXQtNFwiXHUwMDNlXG4gICAgICBcdTAwM2NhIGhyZWY9XCIvYW5pbWFsc1wiIGlkPVwiYmFjay10by1saXN0LWxpbmtcIiBjbGFzcz1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC00IHB5LTIgYmctcHJpbWFyeSB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctcHJpbWFyeS84MCB0cmFuc2l0aW9uLWNvbG9yc1wiXHUwMDNlXG4gICAgICAgIFx1MDAzY3NwYW4gY2xhc3M9XCJtci0yXCJcdTAwM2XihpBcdTAwM2Mvc3Bhblx1MDAzZSBWb2x2ZXIgYWwgbGlzdGFkbyBkZSBhbmltYWxlc1xuICAgICAgXHUwMDNjL2FcdTAwM2VcbiAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgXHUwMDNjaDEgY2xhc3M9XCJ0ZXh0LTN4bCBmb250LWJvbGQgdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtd2hpdGUgbWItMlwiXHUwMDNle3RpdGxlfVx1MDAzYy9oMVx1MDAzZVxuICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LWdyYXktNjAwIGRhcms6dGV4dC1ncmF5LTMwMFwiIGlkPVwiYW5pbWFsLWlkLXRleHRcIlx1MDAzZXt0KCdhbmltYWxfaWQnKX06IHtpZH1cdTAwM2MvcFx1MDAzZVxuICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAge2xvYWRpbmcgXHUwMDI2XHUwMDI2IChcbiAgICBcdTAwM2NkaXYgY2xhc3M9XCJiZy13aGl0ZSBkYXJrOmJnLWdyYXktODAwIHJvdW5kZWQtbGcgc2hhZG93IGJvcmRlciBib3JkZXItZ3JheS0xMDAgZGFyazpib3JkZXItZ3JheS03MDAgcC02IG1iLTYgZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXJcIlx1MDAzZVxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCJcdTAwM2VcbiAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiYW5pbWF0ZS1zcGluIHJvdW5kZWQtZnVsbCBoLTYgdy02IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnlcIlx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgXHUwMDNjcFx1MDAzZXt0KCdsb2FkaW5nJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICl9XG5cbiAge2Vycm9yIFx1MDAyNlx1MDAyNiAoXG4gICAgXHUwMDNjZGl2IGNsYXNzPVwiYmctcmVkLTUwIGRhcms6YmctcmVkLTkwMC8yMCBib3JkZXIgYm9yZGVyLXJlZC0yMDAgZGFyazpib3JkZXItcmVkLTgwMCByb3VuZGVkLWxnIHAtNiBtYi02XCJcdTAwM2VcbiAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXggaXRlbXMtc3RhcnRcIlx1MDAzZVxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LXNocmluay0wXCJcdTAwM2VcbiAgICAgICAgICDimqDvuI9cbiAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJtbC0zXCJcdTAwM2VcbiAgICAgICAgICBcdTAwM2NoMyBjbGFzcz1cInRleHQtbGcgZm9udC1tZWRpdW0gdGV4dC1yZWQtODAwIGRhcms6dGV4dC1yZWQtMzAwXCJcdTAwM2V7dCgnZXJyb3JfdGl0bGUnKX1cdTAwM2MvaDNcdTAwM2VcbiAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJtdC0yIHRleHQtcmVkLTcwMCBkYXJrOnRleHQtcmVkLTIwMFwiXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NwXHUwMDNle2Vycm9yfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cIm10LTRcIlx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjYnV0dG9uIFxuICAgICAgICAgICAgICBpZD1cInJldHJ5LWJ1dHRvblwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHB4LTQgcHktMiBib3JkZXIgYm9yZGVyLXRyYW5zcGFyZW50IHRleHQtc20gZm9udC1tZWRpdW0gcm91bmRlZC1tZCBzaGFkb3ctc20gdGV4dC13aGl0ZSBiZy1yZWQtNjAwIGhvdmVyOmJnLXJlZC03MDAgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLW9mZnNldC0yIGZvY3VzOnJpbmctcmVkLTUwMFwiXG4gICAgICAgICAgICBcdTAwM2VcbiAgICAgICAgICAgICAg4oa7IHt0KCdyZXRyeScpfVxuICAgICAgICAgICAgXHUwMDNjL2J1dHRvblx1MDAzZVxuICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgKX1cblxuICB7YW5pbWFsIFx1MDAyNlx1MDAyNiAoXG4gICAgXHUwMDNjXHUwMDNlXG4gICAgICBcdTAwM2MhLS0gRWxlbWVudG8gb2N1bHRvIGNvbiBkYXRvcyBkZWwgYW5pbWFsIHBhcmEgZWwgc2NyaXB0IC0tXHUwMDNlXG4gICAgICBcdTAwM2NkaXYgaWQ9XCJhbmltYWwtZGF0YVwiIGNsYXNzPVwiaGlkZGVuXCIgXG4gICAgICAgIGRhdGEtZ2VuZXJlPXthbmltYWwuZ2VuZXJlfVxuICAgICAgICBkYXRhLXRpZW5lLXBhcnRvcz17XG4gICAgICAgICAgKGFuaW1hbC5wYXJ0b3MgXHUwMDI2XHUwMDI2IGFuaW1hbC5wYXJ0b3MuaXRlbXMgXHUwMDI2XHUwMDI2IGFuaW1hbC5wYXJ0b3MuaXRlbXMubGVuZ3RoIFx1MDAzZSAwKSB8fCBcbiAgICAgICAgICAoYW5pbWFsLnBhcnRvcyBcdTAwMjZcdTAwMjYgQXJyYXkuaXNBcnJheShhbmltYWwucGFydG9zKSBcdTAwMjZcdTAwMjYgYW5pbWFsLnBhcnRvcy5sZW5ndGggXHUwMDNlIDApIHx8IFxuICAgICAgICAgIChhbmltYWwucGFydHMgXHUwMDI2XHUwMDI2IEFycmF5LmlzQXJyYXkoYW5pbWFsLnBhcnRzKSBcdTAwMjZcdTAwMjYgYW5pbWFsLnBhcnRzLmxlbmd0aCBcdTAwM2UgMCkgPyAndHJ1ZScgOiAnZmFsc2UnXG4gICAgICAgIH1cbiAgICAgIFx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcbiAgICAgIFx1MDAzYyEtLSBSZXN1bWVuIGRlbCBhbmltYWwgLS1cdTAwM2VcbiAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImJnLXdoaXRlIGRhcms6YmctZ3JheS04MDAgcm91bmRlZC1sZyBzaGFkb3cgYm9yZGVyIGJvcmRlci1ncmF5LTEwMCBkYXJrOmJvcmRlci1ncmF5LTcwMCBwLTYgbWItNlwiXHUwMDNlXG4gICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTZcIlx1MDAzZVxuICAgICAgICAgIFx1MDAzYyEtLSBJY29ubyB5IGVzdGFkbyAtLVx1MDAzZVxuICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIG1kOml0ZW1zLXN0YXJ0XCJcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzYyEtLSBVc2Ftb3MgaW1hZ2VuIGVuIGx1Z2FyIGRlIGVtb2ppIHBhcmEgbWVqb3IgdmlzdWFsaXphY2nDs24gLS1cdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cIm1iLTNcIlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2NpbWcgc3JjPXtpY29uUGF0aH0gYWx0PVwiSWNvbm8gQW5pbWFsXCIgY2xhc3M9XCJ3LTI0IGgtMjQgb2JqZWN0LWNvbnRhaW5cIiAvXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICB7YW5pbWFsLmVzdGFkbyA9PT0gJ0RFRicgXHUwMDI2XHUwMDI2IChcbiAgICAgICAgICAgICAgXHUwMDNjc3BhbiBjbGFzcz1cInB4LTMgcHktMSByb3VuZGVkLWZ1bGwgYmctcmVkLTEwMCB0ZXh0LXJlZC04MDAgZGFyazpiZy1yZWQtOTAwIGRhcms6dGV4dC1yZWQtMjAwIHRleHQtc20gZm9udC1tZWRpdW1cIlx1MDAzZVxuICAgICAgICAgICAgICAgIEJhamFcbiAgICAgICAgICAgICAgXHUwMDNjL3NwYW5cdTAwM2VcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgIFxuICAgICAgICAgIFx1MDAzYyEtLSBJbmZvcm1hY2nDs24gYsOhc2ljYSAtLVx1MDAzZVxuICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXgtZ3Jvd1wiXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NoMiBjbGFzcz1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC13aGl0ZSBtYi0yXCJcdTAwM2V7YW5pbWFsLm5vbX1cdTAwM2MvaDJcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImdyaWQgZ3JpZC1jb2xzLTEgbWQ6Z3JpZC1jb2xzLTIgZ2FwLTRcIlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ2NvZGUnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJmb250LW1lZGl1bVwiXHUwMDNle2FuaW1hbC5jb2QgfHwgdCgnbm90X2F2YWlsYWJsZScpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdnZW5kZXInKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJmb250LW1lZGl1bVwiXHUwMDNle2FuaW1hbC5nZW5lcmUgPT09ICdNJyA/IHQoJ21hbGUnKSA6IHQoJ2ZlbWFsZScpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdiaXJ0aF9kYXRlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZVxuICAgICAgICAgICAgICAgICAge2FuaW1hbC5kb2IgPyBcbiAgICAgICAgICAgICAgICAgICAgKCgpID1cdTAwM2Uge1xuICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmltZXJvIHZlcmlmaWNhciBzaSB5YSB2aWVuZSBlbiBmb3JtYXRvIGVzcGHDsW9sIEREL01NL1lZWVlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYW5pbWFsLmRvYiA9PT0gJ3N0cmluZycgXHUwMDI2XHUwMDI2IG5ldyBSZWdFeHAoJ15cXFxcZHsxLDJ9Wy9cXFxcLV1cXFxcZHsxLDJ9Wy9cXFxcLV1cXFxcZHs0fSQnKS50ZXN0KGFuaW1hbC5kb2IpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEludGVycHJldGFyIGNvbW8gREQvTU0vWVlZWSAoZm9ybWF0byBlc3Bhw7FvbClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFydGVzID0gYW5pbWFsLmRvYi5zcGxpdCgvW1xcL1xcLV0vKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRlcy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBBc2VndXJhciBxdWUgc2UgaW50ZXJwcmV0ZSBjb21vIGTDrWEvbWVzL2HDsW9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmZWNoYSA9IG5ldyBEYXRlKHBhcnNlSW50KHBhcnRlc1syXSksIHBhcnNlSW50KHBhcnRlc1sxXSktMSwgcGFyc2VJbnQocGFydGVzWzBdKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc05hTihmZWNoYS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7cGFydGVzWzBdLnBhZFN0YXJ0KDIsICcwJyl9LyR7cGFydGVzWzFdLnBhZFN0YXJ0KDIsICcwJyl9LyR7cGFydGVzWzJdfWA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNpIG5vIHB1ZGltb3MgcHJvY2VzYXIgcGVybyB0aWVuZSBlbCBmb3JtYXRvIGFkZWN1YWRvLCBsbyBtb3N0cmFtb3MgY29tbyBlc3TDoVxuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5pbWFsLmRvYjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW50ZW50YXIgcHJvY2VzYXIgb3Ryb3MgZm9ybWF0b3MgZGUgZmVjaGFcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZlY2hhID0gbmV3IERhdGUoYW5pbWFsLmRvYik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTmFOKGZlY2hhLmdldFRpbWUoKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZlY2hhLnRvTG9jYWxlRGF0ZVN0cmluZygnZXMtRVMnLCB7ZGF5OiAnMi1kaWdpdCcsIG1vbnRoOiAnMi1kaWdpdCcsIHllYXI6ICdudW1lcmljJ30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKGFuaW1hbC5kb2IpO1xuICAgICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0KCdpbmNvcnJlY3RfZGF0ZScpO1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSkoKSBcbiAgICAgICAgICAgICAgICAgICAgOiB0KCdub3RfYXZhaWxhYmxlJylcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCJcdTAwM2V7dCgnZXhwbG9pdGF0aW9uJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZXthbmltYWwuZXhwbG90YWNpbyB8fCB0KCdub3RfYXZhaWxhYmxlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ3N0YWJsZScpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2V7YW5pbWFsLm9yaWdlbiB8fCB0KCdub3RfYXNzaWduZWQnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIHthbmltYWwuZ2VuZXJlID09PSAnRicgXHUwMDI2XHUwMDI2IChcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCJcdTAwM2V7dCgnbnVyc2luZ19zdGF0dXMnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAge2FuaW1hbC5hbGxldGFyID09PSAnMCcgPyB0KCdub3RfbnVyc2luZycpIDogXG4gICAgICAgICAgICAgICAgICAgICBhbmltYWwuYWxsZXRhciA9PT0gJzEnID8gdCgnbnVyc2luZ19vbmUnKSA6IFxuICAgICAgICAgICAgICAgICAgICAgYW5pbWFsLmFsbGV0YXIgPT09ICcyJyA/IHQoJ251cnNpbmdfdHdvJykgOiB0KCdub3RfYXZhaWxhYmxlJyl9XG4gICAgICAgICAgICAgICAgICBcdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgXG4gICAgICAgICAgXHUwMDNjIS0tIEFjY2lvbmVzIC0tXHUwMDNlXG4gICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleCBmbGV4LWNvbCBnYXAtMlwiXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NhIGhyZWY9e2AvYW5pbWFscy91cGRhdGUvJHtpZH1gfSBjbGFzcz1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHB4LTQgcHktMiBiZy1wcmltYXJ5IHRleHQtd2hpdGUgcm91bmRlZC1tZCBob3ZlcjpiZy1wcmltYXJ5LzgwIHRyYW5zaXRpb24tY29sb3JzXCJcdTAwM2VcbiAgICAgICAgICAgICAg4oa7IEFjdHVhbGl6YXJcbiAgICAgICAgICAgIFx1MDAzYy9hXHUwMDNlXG4gICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgICAgIFx1MDAzYyEtLSBQZXN0YcOxYXMgZGUgaW5mb3JtYWNpw7NuIGRldGFsbGFkYSAtLVx1MDAzZVxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiYmctd2hpdGUgZGFyazpiZy1ncmF5LTgwMCByb3VuZGVkLWxnIHNoYWRvdyBib3JkZXIgYm9yZGVyLWdyYXktMTAwIGRhcms6Ym9yZGVyLWdyYXktNzAwIG92ZXJmbG93LWhpZGRlblwiXHUwMDNlXG4gICAgICAgIFx1MDAzYyEtLSBQZXN0YcOxYXMgZGUgbmF2ZWdhY2nDs24gLS1cdTAwM2VcbiAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleCBib3JkZXItYiBib3JkZXItZ3JheS0yMDAgZGFyazpib3JkZXItZ3JheS03MDBcIlx1MDAzZVxuICAgICAgICAgIFx1MDAzY2J1dHRvbiBpZD1cInRhYi1pbmZvXCIgY2xhc3M9XCJweC02IHB5LTMgdGV4dC1wcmltYXJ5IGJvcmRlci1iLTIgYm9yZGVyLXByaW1hcnkgZm9udC1tZWRpdW1cIlx1MDAzZVxuICAgICAgICAgICAge3QoJ2NvbXBsZXRlX2luZm9fdGFiJyl9XG4gICAgICAgICAgXHUwMDNjL2J1dHRvblx1MDAzZVxuICAgICAgICAgIHtzaG93UGFydG9zVGFiIFx1MDAyNlx1MDAyNiAoXG4gICAgICAgICAgICBcdTAwM2NidXR0b24gaWQ9XCJ0YWItcGFydG9zXCIgY2xhc3M9XCJweC02IHB5LTMgdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDAgaG92ZXI6dGV4dC1ncmF5LTcwMCBkYXJrOmhvdmVyOnRleHQtZ3JheS0zMDBcIlx1MDAzZVxuICAgICAgICAgICAgICB7dCgnYmlydGhfaGlzdG9yeV90YWInKX1cbiAgICAgICAgICAgIFx1MDAzYy9idXR0b25cdTAwM2VcbiAgICAgICAgICApfVxuICAgICAgICAgIFx1MDAzY2J1dHRvbiBpZD1cInRhYi1jaGFuZ2VzXCIgY2xhc3M9XCJweC02IHB5LTMgdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDAgaG92ZXI6dGV4dC1ncmF5LTcwMCBkYXJrOmhvdmVyOnRleHQtZ3JheS0zMDBcIlx1MDAzZVxuICAgICAgICAgICAge3QoJ2NoYW5nZXNfaGlzdG9yeV90YWInKX1cbiAgICAgICAgICBcdTAwM2MvYnV0dG9uXHUwMDNlXG4gICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICAgICAgICBcdTAwM2MhLS0gQ29udGVuaWRvIGRlIHBlc3Rhw7FhcyAtLVx1MDAzZVxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJwLTZcIlx1MDAzZVxuICAgICAgICAgIFx1MDAzYyEtLSBQZXN0YcOxYSAxOiBJbmZvcm1hY2nDs24gQ29tcGxldGEgLS1cdTAwM2VcbiAgICAgICAgICBcdTAwM2NkaXYgaWQ9XCJjb250ZW50LWluZm9cIlx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZ3JpZCBncmlkLWNvbHMtMSBtZDpncmlkLWNvbHMtMiBnYXAtNlwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2gzIGNsYXNzPVwidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC13aGl0ZSBtYi00XCJcdTAwM2V7dCgnaWRlbnRpZmljYXRpb25fZGF0YScpfVx1MDAzYy9oM1x1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cInNwYWNlLXktM1wiXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdjb2RlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2V7YW5pbWFsLmNvZCB8fCB0KCdub3RfYXZhaWxhYmxlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ25hbWUnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZXthbmltYWwubm9tfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdzZXJpYWxfbnVtYmVyJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2V7YW5pbWFsLm51bV9zZXJpZSB8fCB0KCdub3RfYXZhaWxhYmxlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2gzIGNsYXNzPVwidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC13aGl0ZSBtYi00XCJcdTAwM2V7dCgnZ2VuZXJhbF9kYXRhJyl9XHUwMDNjL2gzXHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwic3BhY2UteS0zXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ2dlbmRlcicpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJmb250LW1lZGl1bVwiXHUwMDNle2FuaW1hbC5nZW5lcmUgPT09ICdNJyA/IHQoJ21hbGUnKSA6IHQoJ2ZlbWFsZScpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdiaXJ0aF9kYXRlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICB7YW5pbWFsLmRvYiA/IFxuICAgICAgICAgICAgICAgICAgICAgICAgKCgpID1cdTAwM2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFByaW1lcm8gdmVyaWZpY2FyIHNpIHlhIHZpZW5lIGVuIGZvcm1hdG8gZXNwYcOxb2wgREQvTU0vWVlZWVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgYW5pbWFsLmRvYiA9PT0gJ3N0cmluZycgXHUwMDI2XHUwMDI2IG5ldyBSZWdFeHAoJ15cXFxcZHsxLDJ9W1xcL1xcXFwtXVxcXFxkezEsMn1bXFwvXFxcXC1dXFxcXGR7NH0kJykudGVzdChhbmltYWwuZG9iKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW50ZXJwcmV0YXIgY29tbyBERC9NTS9ZWVlZIChmb3JtYXRvIGVzcGHDsW9sKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFydGVzID0gYW5pbWFsLmRvYi5zcGxpdCgvW1xcL1xcLV0vKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0ZXMubGVuZ3RoID09PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFzZWd1cmFyIHF1ZSBzZSBpbnRlcnByZXRlIGNvbW8gZMOtYS9tZXMvYcOxb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmZWNoYSA9IG5ldyBEYXRlKHBhcnNlSW50KHBhcnRlc1syXSksIHBhcnNlSW50KHBhcnRlc1sxXSktMSwgcGFyc2VJbnQocGFydGVzWzBdKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNOYU4oZmVjaGEuZ2V0VGltZSgpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBgJHtwYXJ0ZXNbMF0ucGFkU3RhcnQoMiwgJzAnKX0vJHtwYXJ0ZXNbMV0ucGFkU3RhcnQoMiwgJzAnKX0vJHtwYXJ0ZXNbMl19YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2kgbm8gcHVkaW1vcyBwcm9jZXNhciBwZXJvIHRpZW5lIGVsIGZvcm1hdG8gYWRlY3VhZG8sIGxvIG1vc3RyYW1vcyBjb21vIGVzdMOhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYW5pbWFsLmRvYjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW50ZW50YXIgcHJvY2VzYXIgb3Ryb3MgZm9ybWF0b3MgZGUgZmVjaGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmZWNoYSA9IG5ldyBEYXRlKGFuaW1hbC5kb2IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNOYU4oZmVjaGEuZ2V0VGltZSgpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZlY2hhLnRvTG9jYWxlRGF0ZVN0cmluZygnZXMtRVMnLCB7ZGF5OiAnMi1kaWdpdCcsIG1vbnRoOiAnMi1kaWdpdCcsIHllYXI6ICdudW1lcmljJ30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKGFuaW1hbC5kb2IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHQoJ2luY29ycmVjdF9kYXRlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKCkgXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHQoJ25vdF9hdmFpbGFibGUnKVxuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ3N0YXR1cycpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJmb250LW1lZGl1bVwiXHUwMDNle2FuaW1hbC5lc3RhZG8gPT09ICdPSycgPyB0KCdhY3RpdmUnKSA6IHQoJ2RlYWQnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNjZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjIS0tIEVsaW1pbmFkbyBlbmNhYmV6YWRvIGRlIFViaWNhY2nDs24gLS1cdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJzcGFjZS15LTNcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCJcdTAwM2V7dCgnZXhwbG9pdGF0aW9uJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cImZvbnQtbWVkaXVtXCJcdTAwM2V7YW5pbWFsLmV4cGxvdGFjaW8gfHwgdCgnbm90X2F2YWlsYWJsZScpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdzdGFibGUnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZXthbmltYWwub3JpZ2VuIHx8IHQoJ25vdF9hc3NpZ25lZCcpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2MhLS0gRWxpbWluYWRvIGVuY2FiZXphZG8gZGUgUGFyZW50ZXNjbyAtLVx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cInNwYWNlLXktM1wiXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdmYXRoZXInKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZXthbmltYWwucGFyZSB8fCB0KCdub3RfYXZhaWxhYmxlJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ21vdGhlcicpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJmb250LW1lZGl1bVwiXHUwMDNle2FuaW1hbC5tYXJlIHx8IHQoJ25vdF9hdmFpbGFibGUnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICAgICAge2FuaW1hbC5nZW5lcmUgPT09ICdGJyBcdTAwMjZcdTAwMjYgKFxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NkaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1zbSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ251cnNpbmdfc3RhdHVzJyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwiZm9udC1tZWRpdW1cIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAge2FuaW1hbC5hbGxldGFyID09PSAnMCcgPyB0KCdub3RfbnVyc2luZycpIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgYW5pbWFsLmFsbGV0YXIgPT09ICcxJyA/IHQoJ251cnNpbmdfb25lJykgOiBcbiAgICAgICAgICAgICAgICAgICAgICAgICBhbmltYWwuYWxsZXRhciA9PT0gJzInID8gdCgnbnVyc2luZ190d28nKSA6IHQoJ25vdF9hdmFpbGFibGUnKX1cbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgXHUwMDNjIS0tIFNlY2Npw7NuIGRlIE9ic2VydmFjaW9uZXMgLS1cdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwibWQ6Y29sLXNwYW4tMiBtdC00XCJcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NoMyBjbGFzcz1cInRleHQtbGcgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtd2hpdGUgbWItNFwiXHUwMDNle3QoJ29ic2VydmF0aW9ucycpfVx1MDAzYy9oM1x1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cInAtNCBiZy1ncmF5LTUwIGRhcms6YmctZ3JheS03MDAgcm91bmRlZC1tZFwiXHUwMDNlXG4gICAgICAgICAgICAgICAgICB7YW5pbWFsLm9ic2VydmFjaW9uZXMgPyAoXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LWdyYXktODAwIGRhcms6dGV4dC1ncmF5LTIwMCB3aGl0ZXNwYWNlLXByZS13cmFwXCJcdTAwM2V7YW5pbWFsLm9ic2VydmFjaW9uZXN9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMCBpdGFsaWNcIlx1MDAzZXt0KCdub19vYnNlcnZhdGlvbnMnKX1cdTAwM2MvcFx1MDAzZVxuICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzYyEtLSBCYXJyYSBkZSBhbmNobyBjb21wbGV0byBwYXJhIGxvcyBib3RvbmVzIGFsIGZpbmFsIGRlIGxhIHBlc3Rhw7FhIEluZm9ybWFjacOzbiBDb21wbGV0YSAtLVx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwidy1mdWxsIGNvbC1zcGFuLTEgbWQ6Y29sLXNwYW4tMiBtdC0xMCBweS00IGJvcmRlci10IGJvcmRlci1ncmF5LTEwMCBkYXJrOmJvcmRlci1ncmF5LTcwMFwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImNvbnRhaW5lciBteC1hdXRvIHB4LTQgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyXCJcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2MhLS0gQm90w7NuIFZvbHZlciBhbCBjZW50cm8gLS1cdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LTEgdGV4dC1jZW50ZXJcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjYSBocmVmPVwiL2FuaW1hbHNcIiBjbGFzcz1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC01IHB5LTIuNSBiZy1saW1lLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctbGltZS02MDAgdHJhbnNpdGlvbi1jb2xvcnMgc2hhZG93LW1kXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjc3BhbiBjbGFzcz1cIm1yLTJcIlx1MDAzZeKGkFx1MDAzYy9zcGFuXHUwMDNlIFZvbHZlciBhbCBsaXN0YWRvIGRlIGFuaW1hbGVzXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvYVx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM2MhLS0gQm90w7NuIEV4cG9ydGFyIFBERiBhIGxhIGRlcmVjaGEgLS1cdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LW5vbmVcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjYnV0dG9uIGlkPVwiZXhwb3J0LWFuaW1hbC1wZGZcIiBjbGFzcz1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC01IHB5LTIuNSBiZy1saW1lLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctbGltZS02MDAgdHJhbnNpdGlvbi1jb2xvcnMgc2hhZG93LW1kXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjc3ZnIGNsYXNzPVwidy01IGgtNSBtci0yXCIgZmlsbD1cIm5vbmVcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjcGF0aCBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIyXCIgZD1cIk0xMiAxMHY2bTAgMGwtMy0zbTMgM2wzLTNtMiA4SDdhMiAyIDAgMDEtMi0yVjVhMiAyIDAgMDEyLTJoNS41ODZhMSAxIDAgMDEuNzA3LjI5M2w1LjQxNCA1LjQxNGExIDEgMCAwMS4yOTMuNzA3VjE5YTIgMiAwIDAxLTIgMnpcIlx1MDAzZVx1MDAzYy9wYXRoXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzYy9zdmdcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgRXhwb3J0YXIgUERGXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvYnV0dG9uXHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICBcbiAgICAgICAgICBcdTAwM2MhLS0gRWxpbWluYWRvcyBsb3MgYm90b25lcyBkZSBsYSBwYXJ0ZSBzdXBlcmlvciAtLVx1MDAzZVxuXG4gICAgICAgICAgXHUwMDNjIS0tIFBlc3Rhw7FhIDI6IEhpc3RvcmlhbCBkZSBQYXJ0b3MgKG9jdWx0YSBwb3IgZGVmZWN0bykgLS1cdTAwM2VcbiAgICAgICAgICBcdTAwM2NkaXYgaWQ9XCJjb250ZW50LXBhcnRvc1wiIGNsYXNzPVwiaGlkZGVuXCJcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cIm1iLTRcIlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2NoMyBjbGFzcz1cInRleHQtbGcgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtd2hpdGVcIlx1MDAzZXt0KCdiaXJ0aF9oaXN0b3J5Jyl9XHUwMDNjL2gzXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY3AgY2xhc3M9XCJ0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNle3QoJ2JpcnRoX3JlZ2lzdHJ5Jyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgIHtzaG93UGFydG9zVGFiIFx1MDAyNlx1MDAyNiAoXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJvdmVyZmxvdy14LWF1dG9cIlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY3RhYmxlIGlkPVwidGFibGEtcGFydG9zXCIgY2xhc3M9XCJtaW4tdy1mdWxsIGRpdmlkZS15IGRpdmlkZS1ncmF5LTIwMCBkYXJrOmRpdmlkZS1ncmF5LTcwMFwiXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2N0aGVhZCBjbGFzcz1cImJnLWdyYXktNTAgZGFyazpiZy1ncmF5LTcwMFwiXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3RyXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjdGggc2NvcGU9XCJjb2xcIiBjbGFzcz1cInB4LTYgcHktMyB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTMwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXIgY3Vyc29yLXBvaW50ZXJcIiBpZD1cInNvcnQtZmVjaGFcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAge3QoJ2RhdGUnKX0gXHUwMDNjc3BhbiBjbGFzcz1cIm1sLTEgc29ydC1pbmRpY2F0b3JcIlx1MDAzZeKGkVx1MDAzYy9zcGFuXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3RoXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjdGggc2NvcGU9XCJjb2xcIiBjbGFzcz1cInB4LTYgcHktMyB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTMwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXIgY3Vyc29yLXBvaW50ZXJcIiBpZD1cInNvcnQtZ2VuZXJvXCJcdTAwM2V7dCgnZ2VuZGVyX2xhYmVsJyl9XHUwMDNjL3RoXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjdGggc2NvcGU9XCJjb2xcIiBjbGFzcz1cInB4LTYgcHktMyB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTMwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXIgY3Vyc29yLXBvaW50ZXJcIiBpZD1cInNvcnQtZXN0YWRvXCJcdTAwM2V7dCgnc3RhdHVzJyl9XHUwMDNjL3RoXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjdGggc2NvcGU9XCJjb2xcIiBjbGFzcz1cInB4LTYgcHktMyB0ZXh0LWxlZnQgdGV4dC14cyBmb250LW1lZGl1bSB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTMwMCB1cHBlcmNhc2UgdHJhY2tpbmctd2lkZXJcIlx1MDAzZXt0KCdvYnNlcnZhdGlvbnMnKX1cdTAwM2MvdGhcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3RyXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvdGhlYWRcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzY3Rib2R5IGNsYXNzPVwiYmctd2hpdGUgZGFyazpiZy1ncmF5LTgwMCBkaXZpZGUteSBkaXZpZGUtZ3JheS0yMDAgZGFyazpkaXZpZGUtZ3JheS03MDBcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICB7YW5pbWFsIFx1MDAyNlx1MDAyNiAoKCkgPVx1MDAzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgLy8gTWFuZWphciBkaWZlcmVudGVzIGVzdHJ1Y3R1cmFzIHBvc2libGVzIGRlIHBhcnRvc1xuICAgICAgICAgICAgICAgICAgICAgIGxldCBwYXJ0b3NBcnJheSA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIGlmIChhbmltYWwucGFydG9zIFx1MDAyNlx1MDAyNiBhbmltYWwucGFydG9zLml0ZW1zIFx1MDAyNlx1MDAyNiBhbmltYWwucGFydG9zLml0ZW1zLmxlbmd0aCBcdTAwM2UgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXN0cnVjdHVyYSBlc3BlcmFkYTogYW5pbWFsLnBhcnRvcy5pdGVtc1tdXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJ0b3NBcnJheSA9IGFuaW1hbC5wYXJ0b3MuaXRlbXM7XG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhbmltYWwucGFydG9zIFx1MDAyNlx1MDAyNiBBcnJheS5pc0FycmF5KGFuaW1hbC5wYXJ0b3MpIFx1MDAyNlx1MDAyNiBhbmltYWwucGFydG9zLmxlbmd0aCBcdTAwM2UgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXN0cnVjdHVyYSBhbHRlcm5hdGl2YTogYW5pbWFsLnBhcnRvc1tdXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJ0b3NBcnJheSA9IGFuaW1hbC5wYXJ0b3M7XG4gICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhbmltYWwucGFydHMgXHUwMDI2XHUwMDI2IEFycmF5LmlzQXJyYXkoYW5pbWFsLnBhcnRzKSBcdTAwMjZcdTAwMjYgYW5pbWFsLnBhcnRzLmxlbmd0aCBcdTAwM2UgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gRXN0cnVjdHVyYSBhbnRpZ3VhOiBhbmltYWwucGFydHNbXVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFydG9zQXJyYXkgPSBhbmltYWwucGFydHM7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJ0b3NBcnJheS5sZW5ndGggXHUwMDNlIDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE9yZGVuYXIgcGFydG9zIHBvciBmZWNoYSAoZGUgbcOhcyBhbnRpZ3VvIGEgbcOhcyByZWNpZW50ZSBwb3IgZGVmZWN0bylcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRvc0FycmF5LnNvcnQoKGEsIGIpID1cdTAwM2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmZWNoYUEgPSBhLnBhcnQgPyBuZXcgRGF0ZShhLnBhcnQpIDogbmV3IERhdGUoMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZlY2hhQiA9IGIucGFydCA/IG5ldyBEYXRlKGIucGFydCkgOiBuZXcgRGF0ZSgwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZlY2hhQSAtIGZlY2hhQjsgLy8gT3JkZW4gYXNjZW5kZW50ZSAobcOhcyBhbnRpZ3VvIHByaW1lcm8pXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnRvc0FycmF5Lm1hcCgocGFydG8pID1cdTAwM2UgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2N0ciBkYXRhLWlkPXtwYXJ0by5pZH1cdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2N0ZCBjbGFzcz1cInB4LTYgcHktNCB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIHRleHQtZ3JheS05MDAgZGFyazp0ZXh0LXdoaXRlXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwYXJ0by5wYXJ0ID8gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgoKSA9XHUwMDNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJ0by5wYXJ0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBQcmltZXJvIHZlcmlmaWNhciBzaSB5YSB2aWVuZSBlbiBmb3JtYXRvIGVzcGHDsW9sIEREL01NL1lZWVlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5ldyBSZWdFeHAoJ15cXFxcZHsxLDJ9Wy9cXFxcLV1cXFxcZHsxLDJ9Wy9cXFxcLV1cXFxcZHs0fSQnKS50ZXN0KHBhcnRvLnBhcnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW50ZXJwcmV0YXIgY29tbyBERC9NTS9ZWVlZIChmb3JtYXRvIGVzcGHDsW9sKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnRlcyA9IHBhcnRvLnBhcnQuc3BsaXQoL1tcXC9cXC1dLyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnRlcy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEFzZWd1cmFyIHF1ZSBzZSBpbnRlcnByZXRlIGNvbW8gZMOtYS9tZXMvYcOxb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmVjaGEgPSBuZXcgRGF0ZShwYXJzZUludChwYXJ0ZXNbMl0pLCBwYXJzZUludChwYXJ0ZXNbMV0pLTEsIHBhcnNlSW50KHBhcnRlc1swXSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFpc05hTihmZWNoYS5nZXRUaW1lKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBgJHtwYXJ0ZXNbMF0ucGFkU3RhcnQoMiwgJzAnKX0vJHtwYXJ0ZXNbMV0ucGFkU3RhcnQoMiwgJzAnKX0vJHtwYXJ0ZXNbMl19YDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2kgbm8gcHVkaW1vcyBwcm9jZXNhciBwZXJvIHRpZW5lIGVsIGZvcm1hdG8gYWRlY3VhZG8sIGxvIG1vc3RyYW1vcyBjb21vIGVzdMOhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnRvLnBhcnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW50ZW50YXIgcHJvY2VzYXIgb3Ryb3MgZm9ybWF0b3MgZGUgZmVjaGFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmZWNoYSA9IG5ldyBEYXRlKHBhcnRvLnBhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNOYU4oZmVjaGEuZ2V0VGltZSgpKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZlY2hhLnRvTG9jYWxlRGF0ZVN0cmluZygnZXMtRVMnLCB7ZGF5OiAnMi1kaWdpdCcsIG1vbnRoOiAnMi1kaWdpdCcsIHllYXI6ICdudW1lcmljJ30pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFN0cmluZyhwYXJ0by5wYXJ0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ0ZlY2hhIGluY29ycmVjdGEnO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkoKSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnTi9BJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzYy90ZFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzY3RkIGNsYXNzPVwicHgtNiBweS00IHdoaXRlc3BhY2Utbm93cmFwIHRleHQtc20gdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtd2hpdGVcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3BhcnRvLkdlbmVyZVQgPT09ICdNJyA/IHR4dE1hY2hvIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFydG8uR2VuZXJlVCA9PT0gJ0YnID8gdHh0SGVtYnJhIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFydG8uR2VuZXJlVCA9PT0gJ2VzZm9ycmFkYScgPyAnRXNmb3Jyw6EnIDogdHh0Tm9EaXNwb25pYmxlfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzYy90ZFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzY3RkIGNsYXNzPVwicHgtNiBweS00IHdoaXRlc3BhY2Utbm93cmFwXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzY3NwYW4gY2xhc3M9e2BweC0yIGlubGluZS1mbGV4IHRleHQteHMgbGVhZGluZy01IGZvbnQtc2VtaWJvbGQgcm91bmRlZC1mdWxsICR7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRvLkVzdGFkb1QgPT09ICdPSycgPyAnYmctZ3JlZW4tMTAwIHRleHQtZ3JlZW4tODAwIGRhcms6YmctZ3JlZW4tODAwIGRhcms6dGV4dC1ncmVlbi0xMDAnIDogXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdiZy1yZWQtMTAwIHRleHQtcmVkLTgwMCBkYXJrOmJnLXJlZC04MDAgZGFyazp0ZXh0LXJlZC0xMDAnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9YH1cdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3BhcnRvLkVzdGFkb1QgPT09ICdPSycgPyB0eHRWaXZvIDogdHh0TXVlcnRvfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3NwYW5cdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2MvdGRcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2N0ZCBjbGFzcz1cInB4LTYgcHktNCB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwYXJ0by5vYnNlcnZhY2lvbnMgfHwgcGFydG8ub2JzZXJ2YWNpb25lcyB8fCBwYXJ0by5vYnMgfHwgdHh0T2JzZXJ2YWNpb25lc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2MvdGRcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3RyXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNjdHJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2N0ZCBjb2xzcGFuPVwiNFwiIGNsYXNzPVwicHgtNiBweS00IHRleHQtY2VudGVyIHRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm8gaGF5IHJlZ2lzdHJvcyBkZSBwYXJ0b3MgcGFyYSBlc3RlIGFuaW1hbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFx1MDAzYy90ZFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICBcdTAwM2MvdHJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KSgpfVxuICAgICAgICAgICAgICAgICAgXHUwMDNjL3Rib2R5XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjL3RhYmxlXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJwLTYgdGV4dC1jZW50ZXIgdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZVxuICAgICAgICAgICAgICB7IXNob3dQYXJ0b3NUYWIgXHUwMDI2XHUwMDI2IChcbiAgICAgICAgICAgICAgICBcdTAwM2NwXHUwMDNle3QoJ25vX2JpcnRocycpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBcdTAwM2MhLS0gQmFycmEgZGUgYW5jaG8gY29tcGxldG8gcGFyYSBsb3MgYm90b25lcyBhbCBmaW5hbCBkZSBsYSBwZXN0YcOxYSBQYXJ0b3MgLS1cdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwidy1mdWxsIG10LTYgcHktNCBib3JkZXItdCBib3JkZXItZ3JheS0xMDAgZGFyazpib3JkZXItZ3JheS03MDBcIlx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImNvbnRhaW5lciBteC1hdXRvIHB4LTQgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYyEtLSBCb3TDs24gVm9sdmVyIGFsIGNlbnRybyAtLVx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZmxleC0xIHRleHQtY2VudGVyXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjYSBocmVmPVwiL2FuaW1hbHNcIiBjbGFzcz1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC01IHB5LTIuNSBiZy1saW1lLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctbGltZS02MDAgdHJhbnNpdGlvbi1jb2xvcnMgc2hhZG93LW1kXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgICBcdTAwM2NzcGFuIGNsYXNzPVwibXItMlwiXHUwMDNl4oaQXHUwMDNjL3NwYW5cdTAwM2UgVm9sdmVyIGFsIGxpc3RhZG8gZGUgYW5pbWFsZXNcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjL2FcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgXHUwMDNjIS0tIEJvdMOzbiBFeHBvcnRhciBQREYgYSBsYSBkZXJlY2hhIC0tXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LW5vbmVcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2NidXR0b24gaWQ9XCJleHBvcnQtcGFydG9zLXBkZlwiIGNsYXNzPVwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHB4LTUgcHktMi41IGJnLWxpbWUtNTAwIHRleHQtd2hpdGUgcm91bmRlZC1tZCBob3ZlcjpiZy1saW1lLTYwMCB0cmFuc2l0aW9uLWNvbG9ycyBzaGFkb3ctbWRcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzY3N2ZyBjbGFzcz1cInctNSBoLTUgbXItMlwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgICAgXHUwMDNjcGF0aCBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIiBzdHJva2Utd2lkdGg9XCIyXCIgZD1cIk0xMiAxMHY2bTAgMGwtMy0zbTMgM2wzLTNtMiA4SDdhMiAyIDAgMDEtMi0yVjVhMiAyIDAgMDEyLTJoNS41ODZhMSAxIDAgMDEuNzA3LjI5M2w1LjQxNCA1LjQxNGExIDEgMCAwMS4yOTMuNzA3VjE5YTIgMiAwIDAxLTIgMnpcIlx1MDAzZVx1MDAzYy9wYXRoXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgICAgXHUwMDNjL3N2Z1x1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgIEV4cG9ydGFyIFBERlxuICAgICAgICAgICAgICAgICAgICBcdTAwM2MvYnV0dG9uXHUwMDNlXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuXG4gICAgICAgICAgXHUwMDNjIS0tIFBlc3Rhw7FhIDM6IEhpc3RvcmlhbCBkZSBDYW1iaW9zIChvY3VsdGEgcG9yIGRlZmVjdG8pIC0tXHUwMDNlXG4gICAgICAgICAgXHUwMDNjZGl2IGlkPVwiY29udGVudC1jaGFuZ2VzXCIgY2xhc3M9XCJoaWRkZW5cIlx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwibWItNFwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY2gzIGNsYXNzPVwidGV4dC1sZyBmb250LW1lZGl1bSB0ZXh0LWdyYXktOTAwIGRhcms6dGV4dC13aGl0ZVwiXHUwMDNle3QoJ2NoYW5nZXNfaGlzdG9yeScpfVx1MDAzYy9oM1x1MDAzZVxuICAgICAgICAgICAgICBcdTAwM2NwIGNsYXNzPVwidGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZXt0KCdjaGFuZ2VzX3JlZ2lzdHJ5Jyl9XHUwMDNjL3BcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cInAtNiB0ZXh0LWNlbnRlciB0ZXh0LWdyYXktNTAwIGRhcms6dGV4dC1ncmF5LTQwMFwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY3BcdTAwM2V7dCgnbm9fY2hhbmdlcycpfVx1MDAzYy9wXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFx1MDAzYyEtLSBCYXJyYSBkZSBhbmNobyBjb21wbGV0byBwYXJhIGxvcyBib3RvbmVzIGFsIGZpbmFsIGRlIGxhIHBlc3Rhw7FhIEhpc3RvcmlhbCBkZSBDYW1iaW9zIC0tXHUwMDNlXG4gICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJ3LWZ1bGwgbXQtNiBweS00IGJvcmRlci10IGJvcmRlci1ncmF5LTEwMCBkYXJrOmJvcmRlci1ncmF5LTcwMFwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImNvbnRhaW5lciBteC1hdXRvIHB4LTQgZmxleCBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtY2VudGVyXCJcdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2MhLS0gQm90w7NuIFZvbHZlciBhbCBjZW50cm8gLS1cdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LTEgdGV4dC1jZW50ZXJcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjYSBocmVmPVwiL2FuaW1hbHNcIiBjbGFzcz1cImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBweC01IHB5LTIuNSBiZy1saW1lLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgaG92ZXI6YmctbGltZS02MDAgdHJhbnNpdGlvbi1jb2xvcnMgc2hhZG93LW1kXCJcdTAwM2VcbiAgICAgICAgICAgICAgICAgICAgXHUwMDNjc3BhbiBjbGFzcz1cIm1yLTJcIlx1MDAzZeKGkFx1MDAzYy9zcGFuXHUwMDNlIFZvbHZlciBhbCBsaXN0YWRvIGRlIGFuaW1hbGVzXG4gICAgICAgICAgICAgICAgICBcdTAwM2MvYVx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcdTAwM2MhLS0gQm90w7NuIEV4cG9ydGFyIFBERiBhIGxhIGRlcmVjaGEgLS1cdTAwM2VcbiAgICAgICAgICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJmbGV4LW5vbmVcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgXHUwMDNjYnV0dG9uIGlkPVwiZXhwb3J0LWNoYW5nZXMtcGRmXCIgY2xhc3M9XCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgcHgtNSBweS0yLjUgYmctbGltZS01MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kIGhvdmVyOmJnLWxpbWUtNjAwIHRyYW5zaXRpb24tY29sb3JzIHNoYWRvdy1tZFwiXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzY3N2ZyBjbGFzcz1cInctNSBoLTUgbXItMlwiIGZpbGw9XCJub25lXCIgc3Ryb2tlPVwiY3VycmVudENvbG9yXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlx1MDAzZVxuICAgICAgICAgICAgICAgICAgICAgIFx1MDAzY3BhdGggc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgc3Ryb2tlLXdpZHRoPVwiMlwiIGQ9XCJNMTIgMTB2Nm0wIDBsLTMtM20zIDNsMy0zbTIgOEg3YTIgMiAwIDAxLTItMlY1YTIgMiAwIDAxMi0yaDUuNTg2YTEgMSAwIDAxLjcwNy4yOTNsNS40MTQgNS40MTRhMSAxIDAgMDEuMjkzLjcwN1YxOWEyIDIgMCAwMS0yIDJ6XCJcdTAwM2VcdTAwM2MvcGF0aFx1MDAzZVxuICAgICAgICAgICAgICAgICAgICBcdTAwM2Mvc3ZnXHUwMDNlXG4gICAgICAgICAgICAgICAgICAgIEV4cG9ydGFyIFBERlxuICAgICAgICAgICAgICAgICAgXHUwMDNjL2J1dHRvblx1MDAzZVxuICAgICAgICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgICAgIFx1MDAzYy9kaXZcdTAwM2VcbiAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuICAgICAgXG4gICAgICBcdTAwM2MhLS0gQm90w7NuIGZsb3RhbnRlIHBhcmEgdm9sdmVyIGFsIGxpc3RhZG8gLS1cdTAwM2VcbiAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZpeGVkIGJvdHRvbS02IHJpZ2h0LTYgei0xMFwiXHUwMDNlXG4gICAgICAgIFx1MDAzY2EgaHJlZj1cIi9hbmltYWxzXCIgY2xhc3M9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB3LTEyIGgtMTIgcm91bmRlZC1mdWxsIGJnLXByaW1hcnkgdGV4dC13aGl0ZSBzaGFkb3ctbGcgaG92ZXI6YmctcHJpbWFyeS84MCB0cmFuc2l0aW9uLWNvbG9yc1wiXHUwMDNlXG4gICAgICAgICAgXHUwMDNjc3BhbiBjbGFzcz1cInRleHQteGxcIlx1MDAzZeKGkFx1MDAzYy9zcGFuXHUwMDNlXG4gICAgICAgIFx1MDAzYy9hXHUwMDNlXG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICBcblxuICAgIFx1MDAzYy9cdTAwM2VcbiAgKX1cblx1MDAzYy9NYWluTGF5b3V0XHUwMDNlXG5cblx1MDAzYyEtLSBJbXBvcnRhY2lvbmVzIHBhcmEgUERGIChtaXNtYSBlc3RydWN0dXJhIHF1ZSBlbiBFeHBsb3RhY2lvbmVzUGFnZS50c3gpIC0tXHUwMDNlXG5cdTAwM2NzY3JpcHQgaXM6aW5saW5lIHNyYz1cImh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2pzcGRmLzIuNS4xL2pzcGRmLnVtZC5taW4uanNcIlx1MDAzZVx1MDAzYy9zY3JpcHRcdTAwM2Vcblx1MDAzY3NjcmlwdCBpczppbmxpbmUgc3JjPVwiaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvanNwZGYtYXV0b3RhYmxlLzMuNS4yOC9qc3BkZi5wbHVnaW4uYXV0b3RhYmxlLm1pbi5qc1wiXHUwMDNlXHUwMDNjL3NjcmlwdFx1MDAzZVxuXG5cdTAwM2MhLS0gU2NyaXB0IHBhcmEgYmxvcXVlYXIgZWwgYm90w7NuIGRlIGVsaW1pbmFyIGFuaW1hbGVzIHBhcmEgZWRpdG9yZXMgLS1cdTAwM2Vcblx1MDAzY3NjcmlwdCBpczppbmxpbmUgc3JjPVwiL3NjcmlwdHMvYmxvY2stZGVsZXRlLWJ1dHRvbi5qc1wiXHUwMDNlXHUwMDNjL3NjcmlwdFx1MDAzZVxuXHUwMDNjc2NyaXB0IGlzOmlubGluZVx1MDAzZVxuICAvLyBBc2VndXJhbW9zIHF1ZSBhdXRvVGFibGUgZXN0w6kgZGlzcG9uaWJsZSBnbG9iYWxtZW50ZVxuICB3aW5kb3cuanNQREYgPSB3aW5kb3cuanNwZGYuanNQREY7XG4gIHdpbmRvdy5hdXRvVGFibGUgPSBmdW5jdGlvbigpIHtcbiAgICBjb25zdCBkb2MgPSBhcmd1bWVudHNbMF07XG4gICAgaWYgKHR5cGVvZiBkb2MuYXV0b1RhYmxlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBkb2MuYXV0b1RhYmxlLmFwcGx5KGRvYywgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7XG4gICAgfSBlbHNlIGlmICh3aW5kb3cuanNwZGYgXHUwMDI2XHUwMDI2IHdpbmRvdy5qc3BkZi5qc3BkZiBcdTAwMjZcdTAwMjYgdHlwZW9mIHdpbmRvdy5qc3BkZi5qc3BkZi5hdXRvVGFibGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHdpbmRvdy5qc3BkZi5qc3BkZi5hdXRvVGFibGUuYXBwbHkoZG9jLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcignYXV0b1RhYmxlIGZ1bmN0aW9uIG5vdCBmb3VuZCcpO1xuICAgIH1cbiAgfTtcblx1MDAzYy9zY3JpcHRcdTAwM2VcblxuXHUwMDNjc2NyaXB0XHUwMDNlXG4gIC8vIFNjcmlwdCBwYXJhIG1hbmVqYXIgaW50ZXJhY2Npb25lcyBkZSBsYSBww6FnaW5hIHkgdHJhZHVjY2lvbmVzXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9XHUwMDNlIHtcbiAgICBjb25zb2xlLmxvZygnRE9NIGNvbXBsZXRhbWVudGUgY2FyZ2FkbyB5IGFuYWxpemFkbycpO1xuICAgIFxuICAgIC8vIENvbmZpZ3VyYXIgYm90b25lcyBkZSBleHBvcnRhciBQREYgcGFyYSB0b2RhcyBsYXMgcGVzdGHDsWFzXG4gICAgY29uc3QgZXhwb3J0UGRmQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4cG9ydC1hbmltYWwtcGRmJyk7XG4gICAgY29uc3QgZXhwb3J0UGFydG9zUGRmQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4cG9ydC1wYXJ0b3MtcGRmJyk7XG4gICAgY29uc3QgZXhwb3J0Q2hhbmdlc1BkZkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleHBvcnQtY2hhbmdlcy1wZGYnKTtcbiAgICBcbiAgICBpZiAoZXhwb3J0UGRmQnRuKSB7XG4gICAgICBleHBvcnRQZGZCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBleHBvcnRBbmltYWxUb1BERik7XG4gICAgfVxuICAgIFxuICAgIGlmIChleHBvcnRQYXJ0b3NQZGZCdG4pIHtcbiAgICAgIGV4cG9ydFBhcnRvc1BkZkJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGV4cG9ydEFuaW1hbFRvUERGKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKGV4cG9ydENoYW5nZXNQZGZCdG4pIHtcbiAgICAgIGV4cG9ydENoYW5nZXNQZGZCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBleHBvcnRBbmltYWxUb1BERik7XG4gICAgfVxuICAgIFxuICAgIC8vIEZ1bmNpw7NuIHBhcmEgZXhwb3J0YXIgZmljaGEgZGVsIGFuaW1hbCBhIFBERiAtIGVzdHJ1Y3R1cmEgaWTDqW50aWNhIGEgRXhwbG90YWNpb25lc1BhZ2UudHN4XG4gICAgZnVuY3Rpb24gZXhwb3J0QW5pbWFsVG9QREYoKSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBPYnRlbmVyIGxvcyBkYXRvcyBkZWwgYW5pbWFsXG4gICAgICAgIGNvbnN0IGFuaW1hbE5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMi50ZXh0LTJ4bCcpLnRleHRDb250ZW50O1xuICAgICAgICBjb25zdCBhbmltYWxJZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbmltYWwtaWQtdGV4dCcpLnRleHRDb250ZW50LnNwbGl0KCc6JylbMV0udHJpbSgpO1xuICAgICAgICBjb25zdCBjdXJyZW50TGFuZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyTGFuZ3VhZ2UnKSB8fCAnZXMnO1xuICAgICAgICBcbiAgICAgICAgLy8gQ3JlYXIgZWwgZG9jdW1lbnRvIFBERiAtIGlndWFsIHF1ZSBlbiBFeHBsb3RhY2lvbmVzUGFnZS50c3hcbiAgICAgICAgY29uc3QgeyBqc1BERiB9ID0gd2luZG93LmpzcGRmO1xuICAgICAgICBjb25zdCBkb2MgPSBuZXcganNQREYoKTtcbiAgICAgICAgXG4gICAgICAgIC8vIENvbmZpZ3VyYXIgdMOtdHVsbyBkZWwgZG9jdW1lbnRvXG4gICAgICAgIGNvbnN0IHRpdGxlID0gY3VycmVudExhbmcgPT09ICdjYScgPyBgRml0eGEgZCdBbmltYWwgLSAke2FuaW1hbE5hbWV9YCA6IGBGaWNoYSBkZSBBbmltYWwgLSAke2FuaW1hbE5hbWV9YDtcbiAgICAgICAgXG4gICAgICAgIC8vIEHDsWFkaXIgZmVjaGEgZW4gbGEgZXNxdWluYSBzdXBlcmlvciBkZXJlY2hhXG4gICAgICAgIGRvYy5zZXRGb250U2l6ZSgxMCk7XG4gICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoMTAwLCAxMDAsIDEwMCk7XG4gICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpLnRvTG9jYWxlRGF0ZVN0cmluZyhjdXJyZW50TGFuZyA9PT0gJ2NhJyA/ICdjYS1FUycgOiAnZXMtRVMnKTtcbiAgICAgICAgZG9jLnRleHQoXG4gICAgICAgICAgY3VycmVudExhbmcgPT09ICdjYScgPyBgRGF0YTogJHtkYXRlfWAgOiBgRmVjaGE6ICR7ZGF0ZX1gLCBcbiAgICAgICAgICAxOTUsIDE1LCB7IGFsaWduOiAncmlnaHQnIH1cbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIERlZmluaW1vcyBsYSBwb3NpY2nDs24gaW5pY2lhbCBwYXJhIGVsIHJlc3VtZW4gKHVzYWRhIGVuIHRvZG8gZWwgZG9jdW1lbnRvKVxuICAgICAgICBjb25zdCBsb2dvWSA9IDEwOyAvLyBWYWxvciBwcmVkZXRlcm1pbmFkbyBwb3Igc2kgZmFsbGEgbGEgY2FyZ2EgZGVsIGxvZ29cbiAgICAgICAgY29uc3QgbG9nb0hlaWdodCA9IDM1OyAvLyBWYWxvciBwcmVkZXRlcm1pbmFkbyBwb3Igc2kgZmFsbGEgbGEgY2FyZ2EgZGVsIGxvZ29cbiAgICAgICAgbGV0IGNvbnRlbnRTdGFydFkgPSBsb2dvWSArIGxvZ29IZWlnaHQgKyAyMDsgLy8gUG9zaWNpw7NuIGluaWNpYWwgZGVsIGNvbnRlbmlkb1xuICAgICAgICBcbiAgICAgICAgLy8gQcOxYWRpciBsb2dvIG9maWNpYWwgZGUgTWFzY2xldCBJbXBlcmlcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBJbnRlbnRhbW9zIGNhcmdhciBlbCBsb2dvIG9maWNpYWwgZGVzZGUgdW5hIGltYWdlbiBiYXNlNjRcbiAgICAgICAgICAvLyBMYSBydXRhIGVzIHJlbGF0aXZhIGEgbGEgdWJpY2FjacOzbiBkZXNkZSBkb25kZSBzZSBzaXJ2ZSBsYSBhcGxpY2FjacOzblxuICAgICAgICAgIGNvbnN0IGxvZ29VcmwgPSAnL2ltYWdlcy9sb2dvX21hc2NsZXQucG5nJztcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBUYW1hw7FvIHkgcG9zaWNpb25hbWllbnRvIGRlbCBsb2dvIChjZW50cmFkbyBhcnJpYmEpXG4gICAgICAgICAgY29uc3QgbG9nb1dpZHRoID0gNDU7XG4gICAgICAgICAgY29uc3QgbG9nb0hlaWdodCA9IDM1O1xuICAgICAgICAgIGNvbnN0IHBhZ2VXaWR0aCA9IGRvYy5pbnRlcm5hbC5wYWdlU2l6ZS5nZXRXaWR0aCgpO1xuICAgICAgICAgIGNvbnN0IGxvZ29YID0gKHBhZ2VXaWR0aCAvIDIpIC0gKGxvZ29XaWR0aCAvIDIpOyAvLyBDZW50cmFkbyBob3Jpem9udGFsbWVudGVcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBBw7FhZGlyIGxhIGltYWdlbiBhbCBQREZcbiAgICAgICAgICBkb2MuYWRkSW1hZ2UobG9nb1VybCwgJ1BORycsIGxvZ29YLCBsb2dvWSwgbG9nb1dpZHRoLCBsb2dvSGVpZ2h0KTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBBw7FhZGlyIGVsIHTDrXR1bG8gZGViYWpvIGRlbCBsb2dvXG4gICAgICAgICAgZG9jLnNldEZvbnRTaXplKDIwKTtcbiAgICAgICAgICBkb2Muc2V0VGV4dENvbG9yKDQwLCA0MCwgNDApO1xuICAgICAgICAgIGRvYy50ZXh0KHRpdGxlLCBwYWdlV2lkdGggLyAyLCBsb2dvWSArIGxvZ29IZWlnaHQgKyAxMCwgeyBhbGlnbjogJ2NlbnRlcicgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gQWN0dWFsaXphbW9zIGxhIHBvc2ljacOzbiBpbmljaWFsIGRlbCBjb250ZW5pZG8gY29uIGxvcyB2YWxvcmVzIHJlYWxlcyBkZWwgbG9nb1xuICAgICAgICAgIGNvbnRlbnRTdGFydFkgPSBsb2dvWSArIGxvZ29IZWlnaHQgKyAyNTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBjYXJnYXIgZWwgbG9nbzonLCBlcnJvcik7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gU2kgaGF5IGVycm9yLCB1c2Ftb3MgdW4gdMOtdHVsbyBzaW1wbGUgY2VudHJhZG8gc2luIGxvZ29cbiAgICAgICAgICBjb25zdCBwYWdlV2lkdGggPSBkb2MuaW50ZXJuYWwucGFnZVNpemUuZ2V0V2lkdGgoKTtcbiAgICAgICAgICBkb2Muc2V0Rm9udFNpemUoMjApO1xuICAgICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoNDAsIDQwLCA0MCk7XG4gICAgICAgICAgZG9jLnRleHQodGl0bGUsIHBhZ2VXaWR0aCAvIDIsIDMwLCB7IGFsaWduOiAnY2VudGVyJyB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBBanVzdGFtb3MgbGEgcG9zaWNpw7NuIGluaWNpYWwgZGVsIGNvbnRlbmlkbyBzaW4gbG9nb1xuICAgICAgICAgIGNvbnRlbnRTdGFydFkgPSA0NTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gQcOxYWRpciBkYXRvcyBiw6FzaWNvcyBkZWwgYW5pbWFsXG4gICAgICAgIGRvYy5zZXRGb250U2l6ZSgxNCk7XG4gICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoNTAsIDUwLCA1MCk7XG4gICAgICAgIGRvYy50ZXh0KGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ0RhZGVzIGRlIGxcXCdhbmltYWw6JyA6ICdEYXRvcyBkZWwgYW5pbWFsOicsIDIwLCBjb250ZW50U3RhcnRZKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFJlY29waWxhciBkYXRvcyBkZWwgYW5pbWFsXG4gICAgICAgIGNvbnN0IGRhdG9zID0gW107XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNjb250ZW50LWluZm8gLnNwYWNlLXktMycpLmZvckVhY2goc2VjdGlvbiA9XHUwMDNlIHtcbiAgICAgICAgICBzZWN0aW9uLnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpLmZvckVhY2goaXRlbSA9XHUwMDNlIHtcbiAgICAgICAgICAgIGNvbnN0IGxhYmVsID0gaXRlbS5xdWVyeVNlbGVjdG9yKCdwLnRleHQtc20nKT8udGV4dENvbnRlbnQ7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGl0ZW0ucXVlcnlTZWxlY3RvcigncC5mb250LW1lZGl1bScpPy50ZXh0Q29udGVudDtcbiAgICAgICAgICAgIGlmIChsYWJlbCBcdTAwMjZcdTAwMjYgdmFsdWUpIHtcbiAgICAgICAgICAgICAgZGF0b3MucHVzaChbbGFiZWwsIHZhbHVlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gQcOxYWRpciB0YWJsYSBjb24gZGF0b3MgZGVsIGFuaW1hbCAtIHVzYW5kbyBhdXRvVGFibGUgY29tbyBlbiBFeHBsb3RhY2lvbmVzUGFnZVxuICAgICAgICB3aW5kb3cuYXV0b1RhYmxlKGRvYywge1xuICAgICAgICAgIHN0YXJ0WTogY29udGVudFN0YXJ0WSArIDEwLFxuICAgICAgICAgIGhlYWQ6IFtbY3VycmVudExhbmcgPT09ICdjYScgPyAnQ2FtcCcgOiAnQ2FtcG8nLCBjdXJyZW50TGFuZyA9PT0gJ2NhJyA/ICdWYWxvcicgOiAnVmFsb3InXV0sXG4gICAgICAgICAgYm9keTogZGF0b3MsXG4gICAgICAgICAgdGhlbWU6ICdncmlkJyxcbiAgICAgICAgICBzdHlsZXM6IHsgXG4gICAgICAgICAgICBmb250U2l6ZTogOSwgXG4gICAgICAgICAgICBjZWxsUGFkZGluZzogMixcbiAgICAgICAgICAgIGxpbmVXaWR0aDogMC4xLFxuICAgICAgICAgICAgbGluZUNvbG9yOiBbMjAwLCAyMDAsIDIwMF0sXG4gICAgICAgICAgICBtaW5DZWxsSGVpZ2h0OiA4LFxuICAgICAgICAgICAgdmFsaWduOiAnbWlkZGxlJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgaGVhZFN0eWxlczogeyBcbiAgICAgICAgICAgIGZpbGxDb2xvcjogWzEyNiwgMjExLCAzM10sIC8vIENvbG9yIHZlcmRlIGxpbWEgY29ycG9yYXRpdm9cbiAgICAgICAgICAgIHRleHRDb2xvcjogMjU1LFxuICAgICAgICAgICAgZm9udFN0eWxlOiAnYm9sZCcsXG4gICAgICAgICAgICBtaW5DZWxsSGVpZ2h0OiAxMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgYWx0ZXJuYXRlUm93U3R5bGVzOiB7XG4gICAgICAgICAgICBmaWxsQ29sb3I6IFsyNDUsIDI0NSwgMjQ1XVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29sdW1uU3R5bGVzOiB7XG4gICAgICAgICAgICAwOiB7IGNlbGxXaWR0aDogNDAsIGhhbGlnbjogJ2xlZnQnIH0sIC8vIENvbHVtbmEgZGUgXCJDYW1wb1wiIG3DoXMgZXN0cmVjaGFcbiAgICAgICAgICAgIDE6IHsgY2VsbFdpZHRoOiAnYXV0bycsIGhhbGlnbjogJ2xlZnQnIH0gLy8gQ29sdW1uYSBkZSBcIlZhbG9yXCIgdXNhIGVsIHJlc3RvIGRlbCBlc3BhY2lvXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIC8vIFZlcmlmaWNhciBzaSBlcyB1bmEgdmFjYSAoZ8OpbmVybyBGKSBwYXJhIGHDsWFkaXIgdGFibGEgZGUgcGFydG9zXG4gICAgICAgIGNvbnN0IGdlbmVyb0FuaW1hbCA9IGRhdG9zLmZpbmQoZCA9XHUwMDNlIGRbMF0uaW5jbHVkZXMoJ1NleG8nKSB8fCBkWzBdLmluY2x1ZGVzKCdHw6luZXJvJykpO1xuICAgICAgICBjb25zdCBlc1ZhY2EgPSBnZW5lcm9BbmltYWwgXHUwMDI2XHUwMDI2IChnZW5lcm9BbmltYWxbMV0gPT09ICdIZW1icmEnIHx8IGdlbmVyb0FuaW1hbFsxXSA9PT0gJ0ZlbWVsbGEnIHx8IGdlbmVyb0FuaW1hbFsxXSA9PT0gJ0YnKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFBvc2ljacOzbiBwYXJhIGVsIHNpZ3VpZW50ZSBlbGVtZW50byAob2JzZXJ2YWNpb25lcyBvIHRhYmxhIGRlIHBhcnRvcylcbiAgICAgICAgbGV0IG5leHRZID0gZG9jLnByZXZpb3VzQXV0b1RhYmxlLmZpbmFsWSArIDE1O1xuICAgICAgICBcbiAgICAgICAgLy8gU2kgZXMgdW5hIHZhY2EsIHZlcmlmaWNhbW9zIHNpIHRpZW5lIHBhcnRvcyB5IGHDsWFkaW1vcyBsYSB0YWJsYVxuICAgICAgICBpZiAoZXNWYWNhKSB7XG4gICAgICAgICAgLy8gT2J0ZW5lciBsb3MgZGF0b3MgZGUgcGFydG9zXG4gICAgICAgICAgY29uc3QgcGFydG9zUm93cyA9IFtdO1xuICAgICAgICAgIGNvbnN0IHBhcnRvc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250ZW50LXBhcnRvcyB0YWJsZSB0Ym9keScpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChwYXJ0b3NDb250YWluZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcnRvc0ZpbGFzID0gcGFydG9zQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ3RyJyk7XG4gICAgICAgICAgICBsZXQgaGF5UGFydG9zID0gZmFsc2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHBhcnRvc0ZpbGFzLmZvckVhY2goZmlsYSA9XHUwMDNlIHtcbiAgICAgICAgICAgICAgLy8gVmVyaWZpY2FyIHNpIGVzIHVuYSBmaWxhIGRlIGRhdG9zIChubyBkZSBtZW5zYWplIFwibm8gaGF5IHBhcnRvc1wiKVxuICAgICAgICAgICAgICBjb25zdCBjZWxkYXMgPSBmaWxhLnF1ZXJ5U2VsZWN0b3JBbGwoJ3RkJyk7XG4gICAgICAgICAgICAgIGlmIChjZWxkYXMubGVuZ3RoIFx1MDAzZT0gMyBcdTAwMjZcdTAwMjYgIWZpbGEudGV4dENvbnRlbnQuaW5jbHVkZXMoJ05vIGhheSByZWdpc3Ryb3MnKSkge1xuICAgICAgICAgICAgICAgIGhheVBhcnRvcyA9IHRydWU7XG4gICAgICAgICAgICAgICAgLy8gRXh0cmFlciBpbmZvcm1hY2nDs24gZGUgbGFzIGNlbGRhczogZmVjaGEsIGfDqW5lcm8sIGVzdGFkbywgb2JzZXJ2YWNpb25lc1xuICAgICAgICAgICAgICAgIGNvbnN0IGZlY2hhID0gY2VsZGFzWzBdPy50ZXh0Q29udGVudD8udHJpbSgpIHx8ICdOL0EnO1xuICAgICAgICAgICAgICAgIGNvbnN0IGdlbmVybyA9IGNlbGRhc1sxXT8udGV4dENvbnRlbnQ/LnRyaW0oKSB8fCAnTi9BJztcbiAgICAgICAgICAgICAgICBjb25zdCBlc3RhZG8gPSBjZWxkYXNbMl0/LnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKT8udGV4dENvbnRlbnQ/LnRyaW0oKSB8fCAnTi9BJztcbiAgICAgICAgICAgICAgICBjb25zdCBvYnMgPSBjZWxkYXNbM10/LnRleHRDb250ZW50Py50cmltKCkgfHwgJ04vQSc7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gQcOxYWRpciBhIGxvcyBkYXRvcyBkZSBsYSB0YWJsYVxuICAgICAgICAgICAgICAgIHBhcnRvc1Jvd3MucHVzaChbZmVjaGEsIGdlbmVybywgZXN0YWRvLCBvYnNdKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFNpIGhheSBwYXJ0b3MsIGHDsWFkaXIgbGEgdGFibGFcbiAgICAgICAgICAgIGlmIChoYXlQYXJ0b3MgXHUwMDI2XHUwMDI2IHBhcnRvc1Jvd3MubGVuZ3RoIFx1MDAzZSAwKSB7XG4gICAgICAgICAgICAgIC8vIFTDrXR1bG8gZGUgbGEgc2VjY2nDs24gZGUgcGFydG9zXG4gICAgICAgICAgICAgIGRvYy5zZXRGb250U2l6ZSgxNCk7XG4gICAgICAgICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoNTAsIDUwLCA1MCk7XG4gICAgICAgICAgICAgIGRvYy50ZXh0KGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ0hpc3RvcmlhbCBkZSBQYXJ0czonIDogJ0hpc3RvcmlhbCBkZSBQYXJ0b3M6JywgMjAsIG5leHRZKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIENhYmVjZXJhIGRlIGxhIHRhYmxhIGRlIHBhcnRvc1xuICAgICAgICAgICAgICBjb25zdCBwYXJ0b3NIZWFkID0gW1xuICAgICAgICAgICAgICAgIGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ0RhdGEnIDogJ0ZlY2hhJywgXG4gICAgICAgICAgICAgICAgY3VycmVudExhbmcgPT09ICdjYScgPyAnR8OobmVyZScgOiAnR8OpbmVybycsIFxuICAgICAgICAgICAgICAgIGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ0VzdGF0JyA6ICdFc3RhZG8nLCBcbiAgICAgICAgICAgICAgICBjdXJyZW50TGFuZyA9PT0gJ2NhJyA/ICdPYnNlcnZhY2lvbnMnIDogJ09ic2VydmFjaW9uZXMnXG4gICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBBw7FhZGlyIHRhYmxhIGRlIHBhcnRvc1xuICAgICAgICAgICAgICB3aW5kb3cuYXV0b1RhYmxlKGRvYywge1xuICAgICAgICAgICAgICAgIHN0YXJ0WTogbmV4dFkgKyA1LFxuICAgICAgICAgICAgICAgIGhlYWQ6IFtwYXJ0b3NIZWFkXSxcbiAgICAgICAgICAgICAgICBib2R5OiBwYXJ0b3NSb3dzLFxuICAgICAgICAgICAgICAgIHRoZW1lOiAnZ3JpZCcsXG4gICAgICAgICAgICAgICAgc3R5bGVzOiB7IFxuICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDgsIFxuICAgICAgICAgICAgICAgICAgY2VsbFBhZGRpbmc6IDIsXG4gICAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDAuMSxcbiAgICAgICAgICAgICAgICAgIGxpbmVDb2xvcjogWzIwMCwgMjAwLCAyMDBdLFxuICAgICAgICAgICAgICAgICAgbWluQ2VsbEhlaWdodDogNixcbiAgICAgICAgICAgICAgICAgIHZhbGlnbjogJ21pZGRsZSdcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGhlYWRTdHlsZXM6IHsgXG4gICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6IFsxMjYsIDIxMSwgMzNdLCAvLyBDb2xvciB2ZXJkZSBsaW1hIGNvcnBvcmF0aXZvXG4gICAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6IDI1NSxcbiAgICAgICAgICAgICAgICAgIGZvbnRTdHlsZTogJ2JvbGQnLFxuICAgICAgICAgICAgICAgICAgbWluQ2VsbEhlaWdodDogOFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYWx0ZXJuYXRlUm93U3R5bGVzOiB7XG4gICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6IFsyNDUsIDI0NSwgMjQ1XVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29sdW1uU3R5bGVzOiB7XG4gICAgICAgICAgICAgICAgICAwOiB7IGNlbGxXaWR0aDogMjUsIGhhbGlnbjogJ2NlbnRlcicgfSwgLy8gRmVjaGFcbiAgICAgICAgICAgICAgICAgIDE6IHsgY2VsbFdpZHRoOiAzMCwgaGFsaWduOiAnY2VudGVyJyB9LCAvLyBHw6luZXJvXG4gICAgICAgICAgICAgICAgICAyOiB7IGNlbGxXaWR0aDogMjUsIGhhbGlnbjogJ2NlbnRlcicgfSwgLy8gRXN0YWRvXG4gICAgICAgICAgICAgICAgICAzOiB7IGNlbGxXaWR0aDogJ2F1dG8nLCBoYWxpZ246ICdsZWZ0JyB9IC8vIE9ic2VydmFjaW9uZXNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gQWN0dWFsaXphciBsYSBwb3NpY2nDs24gcGFyYSBsYXMgb2JzZXJ2YWNpb25lc1xuICAgICAgICAgICAgICBuZXh0WSA9IGRvYy5wcmV2aW91c0F1dG9UYWJsZS5maW5hbFkgKyAxNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIEHDsWFkaXIgb2JzZXJ2YWNpb25lcyBzaSBleGlzdGVuXG4gICAgICAgIGNvbnN0IG9ic2VydmFjaW9uZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucC00LmJnLWdyYXktNTAgcCcpPy50ZXh0Q29udGVudDtcbiAgICAgICAgXG4gICAgICAgIGlmIChvYnNlcnZhY2lvbmVzIFx1MDAyNlx1MDAyNiBvYnNlcnZhY2lvbmVzICE9PSAoY3VycmVudExhbmcgPT09ICdjYScgPyAnTm8gaGkgaGEgb2JzZXJ2YWNpb25zJyA6ICdObyBoYXkgb2JzZXJ2YWNpb25lcycpKSB7XG4gICAgICAgICAgZG9jLnNldEZvbnRTaXplKDE0KTtcbiAgICAgICAgICBkb2Muc2V0VGV4dENvbG9yKDUwLCA1MCwgNTApO1xuICAgICAgICAgIGRvYy50ZXh0KGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ09ic2VydmFjaW9uczonIDogJ09ic2VydmFjaW9uZXM6JywgMjAsIG5leHRZKTtcbiAgICAgICAgICBcbiAgICAgICAgICBkb2Muc2V0Rm9udFNpemUoMTApO1xuICAgICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoODAsIDgwLCA4MCk7XG4gICAgICAgICAgY29uc3Qgb2JzZXJ2YWNpb25lc1RleHQgPSBkb2Muc3BsaXRUZXh0VG9TaXplKG9ic2VydmFjaW9uZXMsIDE3MCk7XG4gICAgICAgICAgZG9jLnRleHQob2JzZXJ2YWNpb25lc1RleHQsIDIwLCBuZXh0WSArIDEwKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gUGllIGRlIHDDoWdpbmFcbiAgICAgICAgY29uc3QgcGFnZUNvdW50ID0gZG9jLmludGVybmFsLmdldE51bWJlck9mUGFnZXMoKTtcbiAgICAgICAgZm9yKGxldCBpID0gMTsgaSBcdTAwM2M9IHBhZ2VDb3VudDsgaSsrKSB7XG4gICAgICAgICAgZG9jLnNldFBhZ2UoaSk7XG4gICAgICAgICAgZG9jLnNldEZvbnRTaXplKDgpO1xuICAgICAgICAgIGRvYy5zZXRUZXh0Q29sb3IoMTAwLCAxMDAsIDEwMCk7XG4gICAgICAgICAgZG9jLnRleHQoJ01hc2NsZXQgSW1wZXJpIC0gU2lzdGVtYSBkZSBHZXN0acOzbiBHYW5hZGVyYScsIDEwNSwgZG9jLmludGVybmFsLnBhZ2VTaXplLmhlaWdodCAtIDEwLCB7IGFsaWduOiAnY2VudGVyJyB9KTtcbiAgICAgICAgICBkb2MudGV4dChgUMOhZ2luYSAke2l9IGRlICR7cGFnZUNvdW50fWAsIDE5NSwgZG9jLmludGVybmFsLnBhZ2VTaXplLmhlaWdodCAtIDEwLCB7IGFsaWduOiAncmlnaHQnIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBHdWFyZGFyIGVsIFBERlxuICAgICAgICBkb2Muc2F2ZShgJHthbmltYWxOYW1lfV9maWNoYV8ke2RhdGUucmVwbGFjZSgvXFwvL2csICcnKX0ucGRmYCk7XG4gICAgICAgIFxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgYWwgZ2VuZXJhciBQREY6JywgZXJyb3IpO1xuICAgICAgICBhbGVydChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlckxhbmd1YWdlJykgPT09ICdjYScgPyAnRXJyb3IgZW4gZ2VuZXJhciBlbCBQREYnIDogJ0Vycm9yIGFsIGdlbmVyYXIgZWwgUERGJyk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIFRyYWR1Y2Npb25lcyBkZWwgbGFkbyBkZWwgY2xpZW50ZVxuICAgIGNvbnN0IHRyYW5zbGF0aW9ucyA9IHtcbiAgICAgIGVzOiB7XG4gICAgICAgIHRpdGxlOiBcIkZpY2hhIGRlIEFuaW1hbFwiLFxuICAgICAgICBiYWNrX3RvX2xpc3Q6IFwiVm9sdmVyIGFsIGxpc3RhZG9cIixcbiAgICAgICAgYW5pbWFsX2lkOiBcIklEIEFuaW1hbFwiLFxuICAgICAgICBsb2FkaW5nOiBcIkNhcmdhbmRvIGRhdG9zIGRlbCBhbmltYWwuLi5cIixcbiAgICAgICAgZXJyb3JfdGl0bGU6IFwiRXJyb3JcIixcbiAgICAgICAgcmV0cnk6IFwiUmVpbnRlbnRhclwiLFxuICAgICAgICBhY3RpdmU6IFwiQWN0aXZvXCIsXG4gICAgICAgIGluYWN0aXZlOiBcIkJhamFcIixcbiAgICAgICAgZGVhZDogXCJGYWxsZWNpZG9cIixcbiAgICAgICAgdXBkYXRlOiBcIkFjdHVhbGl6YXJcIixcbiAgICAgICAgY29kZTogXCJDw7NkaWdvXCIsXG4gICAgICAgIG5hbWU6IFwiTm9tYnJlXCIsXG4gICAgICAgIHNlcmlhbF9udW1iZXI6IFwiTsO6bWVybyBkZSBTZXJpZVwiLFxuICAgICAgICBnZW5kZXI6IFwiU2V4b1wiLFxuICAgICAgICBtYWxlOiBcIk1hY2hvXCIsXG4gICAgICAgIGZlbWFsZTogXCJIZW1icmFcIixcbiAgICAgICAgYmlydGhfZGF0ZTogXCJGZWNoYSBkZSBuYWNpbWllbnRvXCIsXG4gICAgICAgIG5vdF9hdmFpbGFibGU6IFwiTm8gZGlzcG9uaWJsZVwiLFxuICAgICAgICBpbmNvcnJlY3RfZGF0ZTogXCJGZWNoYSBpbmNvcnJlY3RhXCIsXG4gICAgICAgIHN0YXR1czogXCJFc3RhZG9cIixcbiAgICAgICAgZXhwbG9pdGF0aW9uOiBcIkV4cGxvdGFjacOzblwiLFxuICAgICAgICBzdGFibGU6IFwiT3JpZ2VuXCIsXG4gICAgICAgIG5vdF9hc3NpZ25lZDogXCJObyBhc2lnbmFkYVwiLFxuICAgICAgICBmYXRoZXI6IFwiUGFkcmVcIixcbiAgICAgICAgbW90aGVyOiBcIk1hZHJlXCIsXG4gICAgICAgIG51cnNpbmdfc3RhdHVzOiBcIkVzdGFkbyBkZSBhbWFtYW50YW1pZW50b1wiLFxuICAgICAgICBub3RfbnVyc2luZzogXCJObyBhbWFtYW50YVwiLFxuICAgICAgICBudXJzaW5nX29uZTogXCJBbWFtYW50YSBhIHVuIHRlcm5lcm9cIixcbiAgICAgICAgbnVyc2luZ190d286IFwiQW1hbWFudGEgYSBkb3MgdGVybmVyb3NcIixcbiAgICAgICAgYmFja190b19hbmltYWxfbGlzdDogXCJWb2x2ZXIgYWwgbGlzdGFkbyBkZSBhbmltYWxlc1wiLFxuICAgICAgICBjb21wbGV0ZV9pbmZvX3RhYjogXCJJbmZvcm1hY2nDs24gQ29tcGxldGFcIixcbiAgICAgICAgYmlydGhfaGlzdG9yeV90YWI6IFwiSGlzdG9yaWFsIGRlIFBhcnRvc1wiLFxuICAgICAgICBjaGFuZ2VzX2hpc3RvcnlfdGFiOiBcIkhpc3RvcmlhbCBkZSBDYW1iaW9zXCIsXG4gICAgICAgIGlkZW50aWZpY2F0aW9uX2RhdGE6IFwiRGF0b3MgZGUgSWRlbnRpZmljYWNpw7NuXCIsXG4gICAgICAgIGdlbmVyYWxfZGF0YTogXCJEYXRvcyBHZW5lcmFsZXNcIixcbiAgICAgICAgYmlydGhfaGlzdG9yeTogXCJIaXN0b3JpYWwgZGUgUGFydG9zXCIsXG4gICAgICAgIGJpcnRoX3JlZ2lzdHJ5OiBcIlJlZ2lzdHJvIGRlIHRvZG9zIGxvcyBwYXJ0b3MgZGVsIGFuaW1hbFwiLFxuICAgICAgICBub19iaXJ0aHM6IFwiRXN0ZSBhbmltYWwgbm8gdGllbmUgcGFydG9zIHJlZ2lzdHJhZG9zXCIsXG4gICAgICAgIGRhdGU6IFwiRmVjaGFcIixcbiAgICAgICAgZ2VuZGVyX2xhYmVsOiBcIkfDqW5lcm9cIixcbiAgICAgICAgb2JzZXJ2YXRpb25zOiBcIk9ic2VydmFjaW9uZXNcIixcbiAgICAgICAgY2hhbmdlc19oaXN0b3J5OiBcIkhpc3RvcmlhbCBkZSBDYW1iaW9zXCIsXG4gICAgICAgIGNoYW5nZXNfcmVnaXN0cnk6IFwiUmVnaXN0cm8gZGUgY2FtYmlvcyByZWFsaXphZG9zIGFsIGFuaW1hbFwiLFxuICAgICAgICBub19jaGFuZ2VzOiBcIk5vIGhheSBjYW1iaW9zIHJlZ2lzdHJhZG9zIHBhcmEgZXN0ZSBhbmltYWxcIixcbiAgICAgICAgY2hhbmdlc19kYXRlOiBcIkZlY2hhXCIsXG4gICAgICAgIGNoYW5nZXNfdXNlcjogXCJVc3VhcmlvXCIsXG4gICAgICAgIGNoYW5nZXNfZmllbGQ6IFwiQ2FtcG9cIixcbiAgICAgICAgY2hhbmdlc19vbGRfdmFsdWU6IFwiVmFsb3IgYW50ZXJpb3JcIixcbiAgICAgICAgY2hhbmdlc19uZXdfdmFsdWU6IFwiVmFsb3IgbnVldm9cIlxuICAgICAgfSxcbiAgICAgIGNhOiB7XG4gICAgICAgIHRpdGxlOiBcIkZpdHhhIGQnQW5pbWFsXCIsXG4gICAgICAgIGJhY2tfdG9fbGlzdDogXCJUb3JuYXIgYWwgbGxpc3RhdFwiLFxuICAgICAgICBhbmltYWxfaWQ6IFwiSUQgQW5pbWFsXCIsXG4gICAgICAgIGxvYWRpbmc6IFwiQ2FycmVnYW50IGRhZGVzIGRlIGwnYW5pbWFsLi4uXCIsXG4gICAgICAgIGVycm9yX3RpdGxlOiBcIkVycm9yXCIsXG4gICAgICAgIHJldHJ5OiBcIlJlaW50ZW50YXJcIixcbiAgICAgICAgYWN0aXZlOiBcIkFjdGl1XCIsXG4gICAgICAgIGluYWN0aXZlOiBcIkJhaXhhXCIsXG4gICAgICAgIGRlYWQ6IFwiTW9ydFwiLFxuICAgICAgICB1cGRhdGU6IFwiQWN0dWFsaXR6YXJcIixcbiAgICAgICAgY29kZTogXCJDb2RpXCIsXG4gICAgICAgIG5hbWU6IFwiTm9tXCIsXG4gICAgICAgIHNlcmlhbF9udW1iZXI6IFwiTsO6bWVybyBkZSBTw6hyaWVcIixcbiAgICAgICAgZ2VuZGVyOiBcIlNleGVcIixcbiAgICAgICAgbWFsZTogXCJNYXNjbGVcIixcbiAgICAgICAgZmVtYWxlOiBcIkZlbWVsbGFcIixcbiAgICAgICAgYmlydGhfZGF0ZTogXCJEYXRhIGRlIG5haXhlbWVudFwiLFxuICAgICAgICBub3RfYXZhaWxhYmxlOiBcIk5vIGRpc3BvbmlibGVcIixcbiAgICAgICAgaW5jb3JyZWN0X2RhdGU6IFwiRGF0YSBpbmNvcnJlY3RhXCIsXG4gICAgICAgIHN0YXR1czogXCJFc3RhdFwiLFxuICAgICAgICBleHBsb2l0YXRpb246IFwiRXhwbG90YWNpw7NcIixcbiAgICAgICAgc3RhYmxlOiBcIk9yaWdlblwiLFxuICAgICAgICBub3RfYXNzaWduZWQ6IFwiTm8gYXNzaWduYWRhXCIsXG4gICAgICAgIGZhdGhlcjogXCJQYXJlXCIsXG4gICAgICAgIG1vdGhlcjogXCJNYXJlXCIsXG4gICAgICAgIG51cnNpbmdfc3RhdHVzOiBcIkVzdGF0IGQnYWxsZXRhbWVudFwiLFxuICAgICAgICBub3RfbnVyc2luZzogXCJObyBhbGxldGFcIixcbiAgICAgICAgbnVyc2luZ19vbmU6IFwiQWxsZXRhIHVuIHZlZGVsbFwiLFxuICAgICAgICBudXJzaW5nX3R3bzogXCJBbGxldGEgZG9zIHZlZGVsbHNcIixcbiAgICAgICAgYmFja190b19hbmltYWxfbGlzdDogXCJUb3JuYXIgYWwgbGxpc3RhdCBkJ2FuaW1hbHNcIixcbiAgICAgICAgY29tcGxldGVfaW5mb190YWI6IFwiSW5mb3JtYWNpw7MgQ29tcGxldGFcIixcbiAgICAgICAgYmlydGhfaGlzdG9yeV90YWI6IFwiSGlzdG9yaWFsIGRlIFBhcnRzXCIsXG4gICAgICAgIGNoYW5nZXNfaGlzdG9yeV90YWI6IFwiSGlzdG9yaWFsIGRlIENhbnZpc1wiLFxuICAgICAgICBpZGVudGlmaWNhdGlvbl9kYXRhOiBcIkRhZGVzIGQnSWRlbnRpZmljYWNpw7NcIixcbiAgICAgICAgZ2VuZXJhbF9kYXRhOiBcIkRhZGVzIEdlbmVyYWxzXCIsXG4gICAgICAgIGJpcnRoX2hpc3Rvcnk6IFwiSGlzdG9yaWFsIGRlIFBhcnRzXCIsXG4gICAgICAgIGJpcnRoX3JlZ2lzdHJ5OiBcIlJlZ2lzdHJlIGRlIHRvdHMgZWxzIHBhcnRzIGRlIGwnYW5pbWFsXCIsXG4gICAgICAgIG5vX2JpcnRoczogXCJBcXVlc3QgYW5pbWFsIG5vIHTDqSBwYXJ0cyByZWdpc3RyYXRzXCIsXG4gICAgICAgIGRhdGU6IFwiRGF0YVwiLFxuICAgICAgICBnZW5kZXJfbGFiZWw6IFwiR8OobmVyZVwiLFxuICAgICAgICBvYnNlcnZhdGlvbnM6IFwiT2JzZXJ2YWNpb25zXCIsXG4gICAgICAgIGNoYW5nZXNfaGlzdG9yeTogXCJIaXN0b3JpYWwgZGUgQ2FudmlzXCIsXG4gICAgICAgIGNoYW5nZXNfcmVnaXN0cnk6IFwiUmVnaXN0cmUgZGUgY2FudmlzIHJlYWxpdHphdHMgYSBsJ2FuaW1hbFwiLFxuICAgICAgICBub19jaGFuZ2VzOiBcIk5vIGhpIGhhIGNhbnZpcyByZWdpc3RyYXRzIHBlciBhIGFxdWVzdCBhbmltYWxcIixcbiAgICAgICAgY2hhbmdlc19kYXRlOiBcIkRhdGFcIixcbiAgICAgICAgY2hhbmdlc191c2VyOiBcIlVzdWFyaVwiLFxuICAgICAgICBjaGFuZ2VzX2ZpZWxkOiBcIkNhbXBcIixcbiAgICAgICAgY2hhbmdlc19vbGRfdmFsdWU6IFwiVmFsb3IgYW50ZXJpb3JcIixcbiAgICAgICAgY2hhbmdlc19uZXdfdmFsdWU6IFwiVmFsb3Igbm91XCJcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gRnVuY2nDs24gcGFyYSBvYnRlbmVyIHRyYWR1Y2Npw7NuXG4gICAgZnVuY3Rpb24gdChrZXksIGxhbmcpIHtcbiAgICAgIHJldHVybiB0cmFuc2xhdGlvbnNbbGFuZ10/LltrZXldIHx8IGtleTtcbiAgICB9XG5cbiAgICAvLyBGdW5jacOzbiBwYXJhIHRyYWR1Y2lyIGxhIGZpY2hhIGRlIGFuaW1hbFxuICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZUFuaW1hbEZpbGUoKSB7XG4gICAgICBjb25zdCBjdXJyZW50TGFuZyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyTGFuZ3VhZ2UnKSB8fCAnZXMnO1xuICAgICAgXG4gICAgICAvLyBUcmFkdWNpciB0w610dWxvIHkgZW5jYWJlemFkb3MgcHJpbmNpcGFsZXNcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2gxLnRleHQtM3hsJykudGV4dENvbnRlbnQgPSB0KCd0aXRsZScsIGN1cnJlbnRMYW5nKTtcbiAgICAgIFxuICAgICAgLy8gTWFudGVuZXIgZWwgdGV4dG8gY29tcGxldG8gXCJWb2x2ZXIgYWwgbGlzdGFkbyBkZSBhbmltYWxlc1wiIGVuIGVsIGJvdMOzbiBzdXBlcmlvclxuICAgICAgLy8gQ29tZW50YW1vcyBlc3RhIHBhcnRlIHBhcmEgcXVlIG5vIHNvYnJlc2NyaWJhIGVsIHRleHRvIHF1ZSB5YSBlc3RhYmxlY2ltb3NcbiAgICAgIC8qIFxuICAgICAgY29uc3QgYmFja0xpbmsgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmFjay10by1saXN0LWxpbmsnKTtcbiAgICAgIGlmIChiYWNrTGluaykge1xuICAgICAgICBiYWNrTGluay5pbm5lckhUTUwgPSBgXHUwMDNjc3BhbiBjbGFzcz1cIm1yLTFcIlx1MDAzZeKGkFx1MDAzYy9zcGFuXHUwMDNlICR7dCgnYmFja190b19saXN0JywgY3VycmVudExhbmcpfWA7XG4gICAgICB9XG4gICAgICAqL1xuICAgICAgXG4gICAgICAvLyBDb3JyZWdpciBwcm9ibGVtYSBkZSBJRCBkdXBsaWNhZG9cbiAgICAgIGNvbnN0IGlkRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhbmltYWwtaWQtdGV4dCcpO1xuICAgICAgaWYgKGlkRWxlbWVudCkge1xuICAgICAgICAvLyBPYnRlbmVyIGVsIElEIGRlIGFuaW1hbCAoZGVzZGUgbGEgVVJMKVxuICAgICAgICBjb25zdCBhbmltYWxJZEZyb21VcmwgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKS5wb3AoKTtcbiAgICAgICAgLy8gQWN0dWFsaXphciBlbCB0ZXh0byBjb24gZWwgZm9ybWF0byBlIElEIGNvcnJlY3RvXG4gICAgICAgIGlkRWxlbWVudC50ZXh0Q29udGVudCA9IGAke3QoJ2FuaW1hbF9pZCcsIGN1cnJlbnRMYW5nKX06ICR7YW5pbWFsSWRGcm9tVXJsfWA7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFRyYWR1Y2lyIGVsZW1lbnRvcyBiw6FzaWNvc1xuICAgICAgY29uc3QgZWxlbWVudHMgPSBbXG4gICAgICAgIHsgc2VsZWN0b3I6ICcudGV4dC1ncmF5LTYwMC5kYXJrXFxcXDp0ZXh0LWdyYXktMzAwJywga2V5OiAnYW5pbWFsX2lkJywgcHJlZml4OiB0cnVlIH0sXG4gICAgICAgIHsgc2VsZWN0b3I6ICcuYW5pbWF0ZS1zcGluICsgcCcsIGtleTogJ2xvYWRpbmcnLCBwcmVmaXg6IGZhbHNlIH0sXG4gICAgICAgIHsgc2VsZWN0b3I6ICcudGV4dC1sZy5mb250LW1lZGl1bS50ZXh0LXJlZC04MDAnLCBrZXk6ICdlcnJvcl90aXRsZScsIHByZWZpeDogZmFsc2UgfSxcbiAgICAgICAgeyBzZWxlY3RvcjogJyNyZXRyeS1idXR0b24nLCBrZXk6ICdyZXRyeScsIHByZWZpeDogdHJ1ZSB9LFxuICAgICAgICB7IHNlbGVjdG9yOiAnYVtocmVmXj1cIi9hbmltYWxzL3VwZGF0ZVwiXScsIGtleTogJ3VwZGF0ZScsIHByZWZpeDogdHJ1ZSB9LFxuICAgICAgXTtcbiAgICAgIFxuICAgICAgZWxlbWVudHMuZm9yRWFjaChlbCA9XHUwMDNlIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWwuc2VsZWN0b3IpO1xuICAgICAgICBpZiAoZWxlbWVudCkge1xuICAgICAgICAgIGlmIChlbC5wcmVmaXgpIHtcbiAgICAgICAgICAgIC8vIFNpIHRpZW5lIHVuIHByZWZpam8gKGNvbW8gdW4gw61jb25vKSwgcHJlc2VydmFybG9cbiAgICAgICAgICAgIGNvbnN0IHRleHQgPSBlbGVtZW50LmlubmVySFRNTDtcbiAgICAgICAgICAgIGNvbnN0IGljb25QcmVmaXggPSB0ZXh0Lm1hdGNoKC8uKj9bXlxcd1xcc10vKTsgLy8gQ2FwdHVyYSB0b2RvIGhhc3RhIGVsIHByaW1lciBubyBhbGZhbnVtw6lyaWNvXG4gICAgICAgICAgICBpZiAoaWNvblByZWZpeCkge1xuICAgICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IGljb25QcmVmaXhbMF0gKyAnICcgKyB0KGVsLmtleSwgY3VycmVudExhbmcpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHQoZWwua2V5LCBjdXJyZW50TGFuZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0KGVsLmtleSwgY3VycmVudExhbmcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vIFRyYWR1Y2lyIGVzdGFkbyBkZWwgYW5pbWFsXG4gICAgICBjb25zdCBlc3RhZG9FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnB4LTMucHktMS5yb3VuZGVkLWZ1bGwnKTtcbiAgICAgIGlmIChlc3RhZG9FbGVtZW50KSB7XG4gICAgICAgIC8vIERldGVybWluYXIgc2kgZXN0w6EgYWN0aXZvIG8gaW5hY3Rpdm8gYmFzYWRvIGVuIGxhIGNsYXNlIENTU1xuICAgICAgICBjb25zdCBpc0FjdGl2ZSA9IGVzdGFkb0VsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdiZy1ncmVlbi0xMDAnKSB8fCBcbiAgICAgICAgICAgICAgICAgICAgICAgICBlc3RhZG9FbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygndGV4dC1ncmVlbi04MDAnKTtcbiAgICAgICAgZXN0YWRvRWxlbWVudC50ZXh0Q29udGVudCA9IGlzQWN0aXZlID8gdCgnYWN0aXZlJywgY3VycmVudExhbmcpIDogdCgnaW5hY3RpdmUnLCBjdXJyZW50TGFuZyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFRyYWR1Y2lyIGluZm9ybWFjacOzbiBkZWwgYW5pbWFsIChyZXN1bWVuIHkgZGV0YWxsZSlcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50ZXh0LXNtLnRleHQtZ3JheS01MDAnKS5mb3JFYWNoKGxhYmVsID1cdTAwM2Uge1xuICAgICAgICBjb25zdCBsYWJlbFRleHQgPSBsYWJlbC50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIFxuICAgICAgICAvLyBNYXBlYXIgZXRpcXVldGFzIGEgY2xhdmVzIGRlIHRyYWR1Y2Npw7NuXG4gICAgICAgIGxldCB0cmFuc2xhdGlvbktleSA9ICcnO1xuICAgICAgICBpZiAobGFiZWxUZXh0LmluY2x1ZGVzKCdDw7NkaWdvJykgfHwgbGFiZWxUZXh0LmluY2x1ZGVzKCdDb2RpJykpIHRyYW5zbGF0aW9uS2V5ID0gJ2NvZGUnO1xuICAgICAgICBlbHNlIGlmIChsYWJlbFRleHQuaW5jbHVkZXMoJ05vbWJyZScpIHx8IGxhYmVsVGV4dC5pbmNsdWRlcygnTm9tJykpIHRyYW5zbGF0aW9uS2V5ID0gJ25hbWUnO1xuICAgICAgICBlbHNlIGlmIChsYWJlbFRleHQuaW5jbHVkZXMoJ07Dum1lcm8gZGUgU2VyaWUnKSB8fCBsYWJlbFRleHQuaW5jbHVkZXMoJ07Dum1lcm8gZGUgU8OocmllJykpIHRyYW5zbGF0aW9uS2V5ID0gJ3NlcmlhbF9udW1iZXInO1xuICAgICAgICBlbHNlIGlmIChsYWJlbFRleHQuaW5jbHVkZXMoJ1NleG8nKSB8fCBsYWJlbFRleHQuaW5jbHVkZXMoJ1NleGUnKSkgdHJhbnNsYXRpb25LZXkgPSAnZ2VuZGVyJztcbiAgICAgICAgZWxzZSBpZiAobGFiZWxUZXh0LmluY2x1ZGVzKCdGZWNoYSBkZSBuYWNpbWllbnRvJykgfHwgbGFiZWxUZXh0LmluY2x1ZGVzKCdEYXRhIGRlIG5haXhlbWVudCcpKSB0cmFuc2xhdGlvbktleSA9ICdiaXJ0aF9kYXRlJztcbiAgICAgICAgZWxzZSBpZiAobGFiZWxUZXh0LmluY2x1ZGVzKCdFc3RhZG8nKSB8fCBsYWJlbFRleHQuaW5jbHVkZXMoJ0VzdGF0JykpIHRyYW5zbGF0aW9uS2V5ID0gJ3N0YXR1cyc7XG4gICAgICAgIGVsc2UgaWYgKGxhYmVsVGV4dC5pbmNsdWRlcygnRXhwbG90YWNpw7NuJykgfHwgbGFiZWxUZXh0LmluY2x1ZGVzKCdFeHBsb3RhY2nDsycpKSB0cmFuc2xhdGlvbktleSA9ICdleHBsb2l0YXRpb24nO1xuICAgICAgICBlbHNlIGlmIChsYWJlbFRleHQuaW5jbHVkZXMoJ09yaWdlbicpIHx8IGxhYmVsVGV4dC5pbmNsdWRlcygnT3JpZ2VuJykpIHRyYW5zbGF0aW9uS2V5ID0gJ3N0YWJsZSc7XG4gICAgICAgIGVsc2UgaWYgKGxhYmVsVGV4dC5pbmNsdWRlcygnUGFkcmUnKSB8fCBsYWJlbFRleHQuaW5jbHVkZXMoJ1BhcmUnKSkgdHJhbnNsYXRpb25LZXkgPSAnZmF0aGVyJztcbiAgICAgICAgZWxzZSBpZiAobGFiZWxUZXh0LmluY2x1ZGVzKCdNYWRyZScpIHx8IGxhYmVsVGV4dC5pbmNsdWRlcygnTWFyZScpKSB0cmFuc2xhdGlvbktleSA9ICdtb3RoZXInO1xuICAgICAgICBlbHNlIGlmIChsYWJlbFRleHQuaW5jbHVkZXMoJ2FtYW1hbnRhbWllbnRvJykgfHwgbGFiZWxUZXh0LmluY2x1ZGVzKCdhbGxldGFtZW50JykpIHRyYW5zbGF0aW9uS2V5ID0gJ251cnNpbmdfc3RhdHVzJztcbiAgICAgICAgXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbktleSkge1xuICAgICAgICAgIGxhYmVsLnRleHRDb250ZW50ID0gdCh0cmFuc2xhdGlvbktleSwgY3VycmVudExhbmcpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gVHJhZHVjaXIgcGVzdGHDsWFzIGRlIG5hdmVnYWNpw7NuXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdidXR0b25baWRePVwidGFiLVwiXScpLmZvckVhY2godGFiID1cdTAwM2Uge1xuICAgICAgICBpZiAodGFiLmlkID09PSAndGFiLWluZm8nKSB7XG4gICAgICAgICAgdGFiLnRleHRDb250ZW50ID0gdCgnY29tcGxldGVfaW5mb190YWInLCBjdXJyZW50TGFuZyk7XG4gICAgICAgIH0gZWxzZSBpZiAodGFiLmlkID09PSAndGFiLXBhcnRvcycpIHtcbiAgICAgICAgICB0YWIudGV4dENvbnRlbnQgPSB0KCdiaXJ0aF9oaXN0b3J5X3RhYicsIGN1cnJlbnRMYW5nKTtcbiAgICAgICAgfSBlbHNlIGlmICh0YWIuaWQgPT09ICd0YWItY2hhbmdlcycpIHtcclxuICAgICAgICAgIHRhYi50ZXh0Q29udGVudCA9IHQoJ2NoYW5nZXNfaGlzdG9yeV90YWInLCBjdXJyZW50TGFuZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIFRyYWR1Y2lyIGVuY2FiZXphZG9zIGRlIHNlY2Npb25lc1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdoMy50ZXh0LWxnLmZvbnQtbWVkaXVtJykuZm9yRWFjaChoZWFkZXIgPVx1MDAzZSB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVyVGV4dCA9IGhlYWRlci50ZXh0Q29udGVudC50cmltKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbGV0IHRyYW5zbGF0aW9uS2V5ID0gJyc7XHJcbiAgICAgICAgaWYgKGhlYWRlclRleHQuaW5jbHVkZXMoJ0RhdG9zIGRlIElkZW50aWZpY2FjacOzbicpIHx8IGhlYWRlclRleHQuaW5jbHVkZXMoJ0RhZGVzIGRcXCdJZGVudGlmaWNhY2nDsycpKSB7XHJcbiAgICAgICAgICB0cmFuc2xhdGlvbktleSA9ICdpZGVudGlmaWNhdGlvbl9kYXRhJztcclxuICAgICAgICB9IGVsc2UgaWYgKGhlYWRlclRleHQuaW5jbHVkZXMoJ0RhdG9zIEdlbmVyYWxlcycpIHx8IGhlYWRlclRleHQuaW5jbHVkZXMoJ0RhZGVzIEdlbmVyYWxzJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ2dlbmVyYWxfZGF0YSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChoZWFkZXJUZXh0LmluY2x1ZGVzKCdIaXN0b3JpYWwgZGUgUGFydG9zJykgfHwgaGVhZGVyVGV4dC5pbmNsdWRlcygnSGlzdG9yaWFsIGRlIFBhcnRzJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ2JpcnRoX2hpc3RvcnknO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaGVhZGVyVGV4dC5pbmNsdWRlcygnSGlzdG9yaWFsIGRlIENhbWJpb3MnKSB8fCBoZWFkZXJUZXh0LmluY2x1ZGVzKCdIaXN0b3JpYWwgZGUgQ2FudmlzJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ2NoYW5nZXNfaGlzdG9yeSc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbktleSkge1xyXG4gICAgICAgICAgaGVhZGVyLnRleHRDb250ZW50ID0gdCh0cmFuc2xhdGlvbktleSwgY3VycmVudExhbmcpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBUcmFkdWNpciBkZXNjcmlwY2lvbmVzIGRlIHNlY2Npb25lc1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubWItNCBwLnRleHQtZ3JheS01MDAsIC5wLTYudGV4dC1jZW50ZXIgcCcpLmZvckVhY2goZGVzYyA9XHUwMDNlIHtcclxuICAgICAgICBjb25zdCBkZXNjVGV4dCA9IGRlc2MudGV4dENvbnRlbnQudHJpbSgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCB0cmFuc2xhdGlvbktleSA9ICcnO1xyXG4gICAgICAgIGlmIChkZXNjVGV4dC5pbmNsdWRlcygnUmVnaXN0cm8gZGUgdG9kb3MgbG9zIHBhcnRvcycpIHx8IGRlc2NUZXh0LmluY2x1ZGVzKCdSZWdpc3RyZSBkZSB0b3RzIGVscyBwYXJ0cycpKSB7XHJcbiAgICAgICAgICB0cmFuc2xhdGlvbktleSA9ICdiaXJ0aF9yZWdpc3RyeSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChkZXNjVGV4dC5pbmNsdWRlcygnTm8gdGllbmUgcGFydG9zIHJlZ2lzdHJhZG9zJykgfHwgZGVzY1RleHQuaW5jbHVkZXMoJ25vIHTDqSBwYXJ0cyByZWdpc3RyYXRzJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ25vX2JpcnRocyc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChkZXNjVGV4dC5pbmNsdWRlcygnUmVnaXN0cm8gZGUgY2FtYmlvcycpIHx8IGRlc2NUZXh0LmluY2x1ZGVzKCdSZWdpc3RyZSBkZSBjYW52aXMnKSkge1xyXG4gICAgICAgICAgdHJhbnNsYXRpb25LZXkgPSAnY2hhbmdlc19yZWdpc3RyeSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChkZXNjVGV4dC5pbmNsdWRlcygnTm8gaGF5IGNhbWJpb3MgcmVnaXN0cmFkb3MnKSB8fCBkZXNjVGV4dC5pbmNsdWRlcygnTm8gaGkgaGEgY2FudmlzIHJlZ2lzdHJhdHMnKSkge1xyXG4gICAgICAgICAgdHJhbnNsYXRpb25LZXkgPSAnbm9fY2hhbmdlcyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbktleSkge1xyXG4gICAgICAgICAgZGVzYy50ZXh0Q29udGVudCA9IHQodHJhbnNsYXRpb25LZXksIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gVHJhZHVjaXIgZW5jYWJlemFkb3MgZGUgdGFibGFzXHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RoLnB4LTYucHktMycpLmZvckVhY2godGggPVx1MDAzZSB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVyVGV4dCA9IHRoLnRleHRDb250ZW50LnRyaW0oKTtcclxuICAgICAgICBsZXQgdHJhbnNsYXRpb25LZXkgPSAnJztcclxuICAgICAgICBcclxuICAgICAgICBpZiAoaGVhZGVyVGV4dC5pbmNsdWRlcygnRmVjaGEnKSB8fCBoZWFkZXJUZXh0LmluY2x1ZGVzKCdEYXRhJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ2RhdGUnO1xyXG4gICAgICAgICAgLy8gQ29uc2VydmFyIGVsIGluZGljYWRvciBkZSBvcmRlbmFjacOzblxyXG4gICAgICAgICAgY29uc3Qgc29ydEluZGljYXRvciA9IHRoLnF1ZXJ5U2VsZWN0b3IoJy5zb3J0LWluZGljYXRvcicpO1xyXG4gICAgICAgICAgaWYgKHNvcnRJbmRpY2F0b3IpIHtcclxuICAgICAgICAgICAgdGguaW5uZXJIVE1MID0gdCh0cmFuc2xhdGlvbktleSwgY3VycmVudExhbmcpICsgJyBcdTAwM2NzcGFuIGNsYXNzPVwibWwtMSBzb3J0LWluZGljYXRvclwiXHUwMDNlJyArIHNvcnRJbmRpY2F0b3IuaW5uZXJIVE1MICsgJ1x1MDAzYy9zcGFuXHUwMDNlJztcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoaGVhZGVyVGV4dC5pbmNsdWRlcygnR8OpbmVybycpIHx8IGhlYWRlclRleHQuaW5jbHVkZXMoJ0fDqG5lcmUnKSkge1xyXG4gICAgICAgICAgdHJhbnNsYXRpb25LZXkgPSAnZ2VuZGVyX2xhYmVsJztcclxuICAgICAgICB9IGVsc2UgaWYgKGhlYWRlclRleHQuaW5jbHVkZXMoJ0VzdGFkbycpIHx8IGhlYWRlclRleHQuaW5jbHVkZXMoJ0VzdGF0JykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ3N0YXR1cyc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChoZWFkZXJUZXh0LmluY2x1ZGVzKCdPYnNlcnZhY2lvbmVzJykgfHwgaGVhZGVyVGV4dC5pbmNsdWRlcygnT2JzZXJ2YWNpb25zJykpIHtcclxuICAgICAgICAgIHRyYW5zbGF0aW9uS2V5ID0gJ29ic2VydmF0aW9ucyc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbktleSkge1xyXG4gICAgICAgICAgdGgudGV4dENvbnRlbnQgPSB0KHRyYW5zbGF0aW9uS2V5LCBjdXJyZW50TGFuZyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIFRyYWR1Y2lyIGJvdG9uZXMgZGUgdm9sdmVyIGFsIGxpc3RhZG9cclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtocmVmPVwiL2FuaW1hbHNcIl0uaW5saW5lLWZsZXgnKS5mb3JFYWNoKGJ1dHRvbiA9XHUwMDNlIHtcclxuICAgICAgICAvLyBQcmVzZXJ2YXIgZWwgaWNvbm8gZGUgZmxlY2hhXHJcbiAgICAgICAgY29uc3QgYXJyb3dTcGFuID0gYnV0dG9uLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4ubXItMicpO1xyXG4gICAgICAgIGlmIChhcnJvd1NwYW4pIHtcclxuICAgICAgICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBgXHUwMDNjc3BhbiBjbGFzcz1cIm1yLTJcIlx1MDAzZeKGkFx1MDAzYy9zcGFuXHUwMDNlICR7dCgnYmFja190b19hbmltYWxfbGlzdCcsIGN1cnJlbnRMYW5nKX1gO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBUcmFkdWNpciB0ZXh0b3MgZW4gZWwgY29udGVuaWRvIGRpbsOhbWljb1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZm9udC1tZWRpdW0nKS5mb3JFYWNoKHZhbHVlID1cdTAwM2Uge1xyXG4gICAgICAgIGNvbnN0IHZhbHVlVGV4dCA9IHZhbHVlLnRleHRDb250ZW50LnRyaW0oKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBTb2xvIHRyYWR1Y2lyIHZhbG9yZXMgZXNwZWPDrWZpY29zIHF1ZSBzYWJlbW9zIHF1ZSBuZWNlc2l0YW4gdHJhZHVjY2nDs25cclxuICAgICAgICBpZiAodmFsdWVUZXh0ID09PSAnTm8gZGlzcG9uaWJsZScpIHtcclxuICAgICAgICAgIHZhbHVlLnRleHRDb250ZW50ID0gdCgnbm90X2F2YWlsYWJsZScsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlVGV4dCA9PT0gJ05vIGFzaWduYWRhJykge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdub3RfYXNzaWduZWQnLCBjdXJyZW50TGFuZyk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZVRleHQgPT09ICdGZWNoYSBpbmNvcnJlY3RhJykge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdpbmNvcnJlY3RfZGF0ZScsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlVGV4dCA9PT0gJ01hY2hvJykge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdtYWxlJywgY3VycmVudExhbmcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWVUZXh0ID09PSAnSGVtYnJhJykge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdmZW1hbGUnLCBjdXJyZW50TGFuZyk7XHJcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZVRleHQgPT09ICdBY3Rpdm8nKSB7XHJcbiAgICAgICAgICB2YWx1ZS50ZXh0Q29udGVudCA9IHQoJ2FjdGl2ZScsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlVGV4dCA9PT0gJ0ZhbGxlY2lkbycpIHtcclxuICAgICAgICAgIHZhbHVlLnRleHRDb250ZW50ID0gdCgnZGVhZCcsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlVGV4dCA9PT0gJ05vIGFtYW1hbnRhJykge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdub3RfbnVyc2luZycsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlVGV4dC5pbmNsdWRlcygnQW1hbWFudGEgdW4gdGVybmVybycpKSB7XHJcbiAgICAgICAgICB2YWx1ZS50ZXh0Q29udGVudCA9IHQoJ251cnNpbmdfb25lJywgY3VycmVudExhbmcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWVUZXh0LmluY2x1ZGVzKCdBbWFtYW50YSBkb3MgdGVybmVyb3MnKSkge1xyXG4gICAgICAgICAgdmFsdWUudGV4dENvbnRlbnQgPSB0KCdudXJzaW5nX3R3bycsIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBFamVjdXRhciB0cmFkdWNjacOzbiBpbmljaWFsXHJcbiAgICB0cmFuc2xhdGVBbmltYWxGaWxlKCk7XHJcbiAgICBcclxuICAgIC8vIFJldHJhZHVjaXIgY3VhbmRvIGNhbWJpZSBlbCBpZGlvbWFcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgZnVuY3Rpb24oZSkge1xyXG4gICAgICBpZiAoZS5rZXkgPT09ICd1c2VyTGFuZ3VhZ2UnKSB7XHJcbiAgICAgICAgdHJhbnNsYXRlQW5pbWFsRmlsZSgpO1xyXG4gICAgICAgIHRyYW5zbGF0ZVRhYmxlQnV0dG9ucygpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBTT0xVQ0nDk04gQUdSRVNJVkEgUEFSQSBGT1JaQVIgTEFTIFRSQURVQ0NJT05FU1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAvLyBGdW5jacOzbiBkZSBmdWVyemEgYnJ1dGEgcGFyYSB0cmFkdWNpciB0b2RvLCBjb24gc2VsZWNjacOzbiBkaXJlY3RhIGRlIGVsZW1lbnRvc1xyXG4gICAgICBmdW5jdGlvbiB0cmFkdWNpclRvZG9Gb3J6YWRvKCkge1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRMYW5nID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJMYW5ndWFnZScpIHx8ICdlcyc7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gQXBsaWNhbmRvIHRyYWR1Y2Npw7NuIGZvcnphZGEsIGlkaW9tYTogJyArIGN1cnJlbnRMYW5nKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBCb3RvbmVzIGRlIGVsaW1pbmFyXHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uJykuZm9yRWFjaChidG4gPVx1MDAzZSB7XHJcbiAgICAgICAgICBpZiAoYnRuLnRleHRDb250ZW50LnRyaW0oKSA9PT0gJ0VsaW1pbmFyJykge1xyXG4gICAgICAgICAgICBpZiAoY3VycmVudExhbmcgPT09ICdjYScpIHtcclxuICAgICAgICAgICAgICBidG4udGl0bGUgPSAnRWxpbWluYXIgcGFydCc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgYnRuLnRpdGxlID0gJ0VsaW1pbmFyIHBhcnRvJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFRleHRvcyBkZSBnw6luZXJvXHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgndGQnKS5mb3JFYWNoKGNlbGRhID1cdTAwM2Uge1xyXG4gICAgICAgICAgY29uc3QgdGV4dG8gPSBjZWxkYS50ZXh0Q29udGVudC50cmltKCk7XHJcbiAgICAgICAgICBpZiAodGV4dG8gPT09ICdNYWNobycpIHtcclxuICAgICAgICAgICAgY2VsZGEuaW5uZXJIVE1MID0gY3VycmVudExhbmcgPT09ICdjYScgPyAnTWFzY2xlJyA6ICdNYWNobyc7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdbREVCVUddIFRyYWR1Y2lkbyBNYWNob+KGkk1hc2NsZScpO1xyXG4gICAgICAgICAgfSBcclxuICAgICAgICAgIGlmICh0ZXh0byA9PT0gJ0hlbWJyYScpIHtcclxuICAgICAgICAgICAgY2VsZGEuaW5uZXJIVE1MID0gY3VycmVudExhbmcgPT09ICdjYScgPyAnRmVtZWxsYScgOiAnSGVtYnJhJztcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gVHJhZHVjaWRvIEhlbWJyYeKGkkZlbWVsbGEnKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBTaW4gb2JzZXJ2YWNpb25lc1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RkJykuZm9yRWFjaChjZWxkYSA9XHUwMDNlIHtcclxuICAgICAgICAgIGNvbnN0IHRleHRvID0gY2VsZGEudGV4dENvbnRlbnQudHJpbSgpO1xyXG4gICAgICAgICAgaWYgKHRleHRvID09PSAnU2luIG9ic2VydmFjaW9uZXMnIHx8IHRleHRvID09PSAnYW5pbWFscy5ub19vYnNlcnZhdGlvbnMnKSB7XHJcbiAgICAgICAgICAgIGNlbGRhLmlubmVySFRNTCA9IGN1cnJlbnRMYW5nID09PSAnY2EnID8gJ1NlbnNlIG9ic2VydmFjaW9ucycgOiAnU2luIG9ic2VydmFjaW9uZXMnO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gVHJhZHVjaWRvIG9ic2VydmFjaW9uZXMnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gRXN0YWRvcyAoVml2by9GYWxsZWNpZG8pXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3NwYW4uaW5saW5lLWZsZXgnKS5mb3JFYWNoKHNwYW4gPVx1MDAzZSB7XG4gICAgICAgICAgY29uc3QgdGV4dG8gPSBzcGFuLnRleHRDb250ZW50LnRyaW0oKTtcbiAgICAgICAgICBpZiAodGV4dG8gPT09ICdWaXZvJykge1xuICAgICAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSBjdXJyZW50TGFuZyA9PT0gJ2NhJyA/ICdWaXUnIDogJ1Zpdm8nO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gVHJhZHVjaWRvIFZpdm/ihpJWaXUnKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHRleHRvID09PSAnRmFsbGVjaWRvJykge1xuICAgICAgICAgICAgc3Bhbi5pbm5lckhUTUwgPSBjdXJyZW50TGFuZyA9PT0gJ2NhJyA/ICdNb3J0JyA6ICdGYWxsZWNpZG8nO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gVHJhZHVjaWRvIEZhbGxlY2lkb+KGkk1vcnQnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBFamVjdXRhciBpbm1lZGlhdGFtZW50ZVxuICAgICAgdHJhZHVjaXJUb2RvRm9yemFkbygpO1xuICAgICAgXG4gICAgICAvLyBSZXBldGlyIGNhZGEgNTAwbXMgZHVyYW50ZSBsb3MgcHJpbWVyb3MgMTAgc2VndW5kb3NcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIFx1MDAzYz0gMjA7IGkrKykge1xuICAgICAgICBzZXRUaW1lb3V0KHRyYWR1Y2lyVG9kb0ZvcnphZG8sIGkgKiA1MDApO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBFc3RhYmxlY2VyIHVuIGludGVydmFsbyBwZXJtYW5lbnRlIHBhcmEgc2VndWlyIHRyYWR1Y2nDqW5kb2xvXG4gICAgICBzZXRJbnRlcnZhbCh0cmFkdWNpclRvZG9Gb3J6YWRvLCAyMDAwKTtcbiAgICAgIFxuICAgICAgLy8gQ3VhbmRvIGNhbWJpZSBlbCBpZGlvbWFcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgZnVuY3Rpb24oZSkge1xuICAgICAgICBpZiAoZS5rZXkgPT09ICd1c2VyTGFuZ3VhZ2UnKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1tERUJVR10gQ2FtYmlvIGRlIGlkaW9tYSBkZXRlY3RhZG8nKTtcbiAgICAgICAgICAvLyBBcGxpY2FyIGlubWVkaWF0YW1lbnRlIHkgbHVlZ28gY29uIHJldHJhc29zXG4gICAgICAgICAgdHJhZHVjaXJUb2RvRm9yemFkbygpO1xuICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIFx1MDAzYz0gMTA7IGkrKykge1xuICAgICAgICAgICAgc2V0VGltZW91dCh0cmFkdWNpclRvZG9Gb3J6YWRvLCBpICogMjAwKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIC8vIEJvdMOzbiBkZSByZWludGVudGFyIGNhcmdhXG4gICAgY29uc3QgcmV0cnlCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV0cnktYnV0dG9uJyk7XG4gICAgaWYgKHJldHJ5QnV0dG9uKSB7XG4gICAgICByZXRyeUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID1cdTAwM2Uge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gT2J0ZW5lciB0b2RhcyBsYXMgcGVzdGHDsWFzIHkgY29udGVuaWRvc1xuICAgIGNvbnN0IHRhYnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjdGFiLWluZm8sICN0YWItcGFydG9zLCAjdGFiLWNoYW5nZXMnKTtcbiAgICBjb25zdCBjb250ZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNjb250ZW50LWluZm8sICNjb250ZW50LXBhcnRvcywgI2NvbnRlbnQtY2hhbmdlcycpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKCdQZXN0YcOxYXMgZW5jb250cmFkYXM6JywgdGFicy5sZW5ndGgpO1xuICAgIGNvbnNvbGUubG9nKCdDb250ZW5pZG9zIGVuY29udHJhZG9zOicsIGNvbnRlbnRzLmxlbmd0aCk7XG4gICAgXG4gICAgLy8gRnVuY2nDs24gcGFyYSBtb3N0cmFyIHBlc3Rhw7FhIHkgb2N1bHRhciBsYXMgZGVtw6FzXG4gICAgY29uc3Qgc2hvd1RhYiA9ICh0YWJJZCkgPVx1MDAzZSB7XG4gICAgICBjb25zb2xlLmxvZygnQ2FtYmlhbmRvIGEgcGVzdGHDsWE6JywgdGFiSWQpO1xuICAgICAgXG4gICAgICAvLyBPY3VsdGFyIHRvZG9zIGxvcyBjb250ZW5pZG9zXG4gICAgICBjb250ZW50cy5mb3JFYWNoKGNvbnRlbnQgPVx1MDAzZSB7XG4gICAgICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gUmVzZXRlYXIgZXN0aWxvcyBkZSB0b2RhcyBsYXMgcGVzdGHDsWFzXG4gICAgICB0YWJzLmZvckVhY2godGFiID1cdTAwM2Uge1xuICAgICAgICB0YWIuY2xhc3NMaXN0LnJlbW92ZSgndGV4dC1wcmltYXJ5JywgJ2JvcmRlci1iLTInLCAnYm9yZGVyLXByaW1hcnknLCAnZm9udC1tZWRpdW0nKTtcbiAgICAgICAgdGFiLmNsYXNzTGlzdC5hZGQoJ3RleHQtZ3JheS01MDAnLCAnZGFyazp0ZXh0LWdyYXktNDAwJywgJ2hvdmVyOnRleHQtZ3JheS03MDAnLCAnZGFyazpob3Zlcjp0ZXh0LWdyYXktMzAwJyk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gQWN0aXZhciBwZXN0YcOxYSBzZWxlY2Npb25hZGFcbiAgICAgIGNvbnN0IHNlbGVjdGVkVGFiID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGFiSWQpO1xuICAgICAgaWYgKHNlbGVjdGVkVGFiKSB7XG4gICAgICAgIHNlbGVjdGVkVGFiLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtZ3JheS01MDAnLCAnZGFyazp0ZXh0LWdyYXktNDAwJywgJ2hvdmVyOnRleHQtZ3JheS03MDAnLCAnZGFyazpob3Zlcjp0ZXh0LWdyYXktMzAwJyk7XG4gICAgICAgIHNlbGVjdGVkVGFiLmNsYXNzTGlzdC5hZGQoJ3RleHQtcHJpbWFyeScsICdib3JkZXItYi0yJywgJ2JvcmRlci1wcmltYXJ5JywgJ2ZvbnQtbWVkaXVtJyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIE1vc3RyYXIgY29udGVuaWRvIGNvcnJlc3BvbmRpZW50ZVxuICAgICAgY29uc3QgY29udGVudElkID0gdGFiSWQucmVwbGFjZSgndGFiLScsICdjb250ZW50LScpO1xuICAgICAgY29uc3Qgc2VsZWN0ZWRDb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29udGVudElkKTtcbiAgICAgIGlmIChzZWxlY3RlZENvbnRlbnQpIHtcbiAgICAgICAgc2VsZWN0ZWRDb250ZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgLy8gSW5pY2lhbGl6YXIgY29uIGxhIHBlc3Rhw7FhIGRlIGluZm9ybWFjacOzbiBhYmllcnRhXG4gICAgc2hvd1RhYigndGFiLWluZm8nKTtcbiAgICBcbiAgICAvLyBFdmVudG9zIGRlIGNsaWMgcGFyYSBwZXN0YcOxYXNcbiAgICB0YWJzLmZvckVhY2godGFiID1cdTAwM2Uge1xuICAgICAgdGFiLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPVx1MDAzZSB7XG4gICAgICAgIHNob3dUYWIodGFiLmlkKTtcbiAgICAgICAgY29uc29sZS5sb2coJ0NsaWMgZW4gcGVzdGHDsWE6JywgdGFiLmlkKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gT3JkZW5hY2nDs24gZGUgbGEgdGFibGEgZGUgcGFydG9zXG4gICAgY29uc3Qgc29ydENvbHVtbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjc29ydC1mZWNoYSwgI3NvcnQtZ2VuZXJvLCAjc29ydC1lc3RhZG8nKTtcbiAgICBsZXQgY3VycmVudFNvcnRDb2x1bW4gPSAnc29ydC1mZWNoYSc7XG4gICAgbGV0IGN1cnJlbnRTb3J0RGlyZWN0aW9uID0gJ2FzYyc7XG5cbiAgICAvLyBGdW5jacOzbiBwYXJhIG9yZGVuYXIgbGEgdGFibGFcbiAgICBjb25zdCBzb3J0VGFibGUgPSAoY29sdW1uSWQsIGRpcmVjdGlvbikgPVx1MDAzZSB7XG4gICAgICBjb25zdCB0YWJsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWJsYS1wYXJ0b3MnKTtcbiAgICAgIGlmICghdGFibGUpIHJldHVybjtcblxuICAgICAgY29uc3QgdGJvZHkgPSB0YWJsZS5xdWVyeVNlbGVjdG9yKCd0Ym9keScpO1xuICAgICAgaWYgKCF0Ym9keSkgcmV0dXJuO1xuXG4gICAgICBjb25zdCByb3dzID0gQXJyYXkuZnJvbSh0Ym9keS5xdWVyeVNlbGVjdG9yQWxsKCd0cicpKTtcbiAgICAgIGNvbnN0IHNvcnRlZFJvd3MgPSBbLi4ucm93c107XG5cbiAgICAgIC8vIE9idGVuZXIgZWwgw61uZGljZSBkZSBsYSBjb2x1bW5hIHNlZ8O6biBlbCBJRCBkZWwgZW5jYWJlemFkb1xuICAgICAgbGV0IGNvbHVtbkluZGV4ID0gMDtcbiAgICAgIGlmIChjb2x1bW5JZCA9PT0gJ3NvcnQtZ2VuZXJvJykgY29sdW1uSW5kZXggPSAxO1xuICAgICAgaWYgKGNvbHVtbklkID09PSAnc29ydC1lc3RhZG8nKSBjb2x1bW5JbmRleCA9IDI7XG5cbiAgICAgIC8vIE9yZGVuYXIgZmlsYXNcbiAgICAgIHNvcnRlZFJvd3Muc29ydCgoYSwgYikgPVx1MDAzZSB7XG4gICAgICAgIGNvbnN0IGNlbGxBID0gYS5xdWVyeVNlbGVjdG9yQWxsKCd0ZCcpW2NvbHVtbkluZGV4XS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIGNvbnN0IGNlbGxCID0gYi5xdWVyeVNlbGVjdG9yQWxsKCd0ZCcpW2NvbHVtbkluZGV4XS50ZXh0Q29udGVudC50cmltKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoY29sdW1uSWQgPT09ICdzb3J0LWZlY2hhJykge1xuICAgICAgICAgIC8vIFBhcmEgZmVjaGFzLCBpbnRlbnRhciBjb252ZXJ0aXIgYSBvYmpldG9zIERhdGUgcGFyYSBjb21wYXJhY2nDs25cbiAgICAgICAgICBjb25zdCBkYXRlQSA9IHBhcnNlRGF0ZShjZWxsQSk7XG4gICAgICAgICAgY29uc3QgZGF0ZUIgPSBwYXJzZURhdGUoY2VsbEIpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT09ICdhc2MnKSB7XG4gICAgICAgICAgICByZXR1cm4gZGF0ZUEgLSBkYXRlQjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGRhdGVCIC0gZGF0ZUE7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFBhcmEgdGV4dG8sIGNvbXBhcmFyIHN0cmluZ3NcbiAgICAgICAgICBpZiAoZGlyZWN0aW9uID09PSAnYXNjJykge1xuICAgICAgICAgICAgcmV0dXJuIGNlbGxBLmxvY2FsZUNvbXBhcmUoY2VsbEIsICdlcycpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gY2VsbEIubG9jYWxlQ29tcGFyZShjZWxsQSwgJ2VzJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gTGltcGlhciB5IHJlY29uc3RydWlyIGxhIHRhYmxhXG4gICAgICB3aGlsZSAodGJvZHkuZmlyc3RDaGlsZCkge1xuICAgICAgICB0Ym9keS5yZW1vdmVDaGlsZCh0Ym9keS5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgc29ydGVkUm93cy5mb3JFYWNoKHJvdyA9XHUwMDNlIHRib2R5LmFwcGVuZENoaWxkKHJvdykpO1xuXG4gICAgICAvLyBBY3R1YWxpemFyIGluZGljYWRvcmVzIGRlIG9yZGVuYWNpw7NuXG4gICAgICBzb3J0Q29sdW1ucy5mb3JFYWNoKGNvbCA9XHUwMDNlIHtcbiAgICAgICAgY29uc3QgaW5kaWNhdG9yID0gY29sLnF1ZXJ5U2VsZWN0b3IoJy5zb3J0LWluZGljYXRvcicpO1xuICAgICAgICBpZiAoaW5kaWNhdG9yKSB7XG4gICAgICAgICAgaW5kaWNhdG9yLnRleHRDb250ZW50ID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBjb25zdCBhY3RpdmVIZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb2x1bW5JZCk7XG4gICAgICBjb25zdCBpbmRpY2F0b3IgPSBhY3RpdmVIZWFkZXIucXVlcnlTZWxlY3RvcignLnNvcnQtaW5kaWNhdG9yJyk7XG4gICAgICBpZiAoaW5kaWNhdG9yKSB7XG4gICAgICAgIGluZGljYXRvci50ZXh0Q29udGVudCA9IGRpcmVjdGlvbiA9PT0gJ2FzYycgPyAn4oaRJyA6ICfihpMnO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBBeXVkYW50ZSBwYXJhIGNvbnZlcnRpciB0ZXh0byBkZSBmZWNoYSBhIG9iamV0byBEYXRlXG4gICAgY29uc3QgcGFyc2VEYXRlID0gKGRhdGVTdHIpID1cdTAwM2Uge1xuICAgICAgaWYgKGRhdGVTdHIgPT09ICdOL0EnIHx8IGRhdGVTdHIgPT09ICdGZWNoYSBpbmNvcnJlY3RhJykge1xuICAgICAgICByZXR1cm4gbmV3IERhdGUoMCk7IC8vIFBhcmEgdmFsb3JlcyBubyBmZWNoYXMsIHVzYXIgdW5hIGZlY2hhIG11eSBhbnRpZ3VhXG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEludGVudGEgYW5hbGl6YXIgbGEgZmVjaGEgZW4gZm9ybWF0byBERC9NTS9ZWVlZXG4gICAgICBjb25zdCBwYXJ0cyA9IGRhdGVTdHIuc3BsaXQoL1tcXC9cXC1dLyk7XG4gICAgICBpZiAocGFydHMubGVuZ3RoID09PSAzKSB7XG4gICAgICAgIC8vIEFzdW1pciBmb3JtYXRvIEREL01NL1lZWVlcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHBhcnRzWzJdLCBwYXJ0c1sxXSAtIDEsIHBhcnRzWzBdKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ29tbyDDumx0aW1vIHJlY3Vyc28sIGludGVudGFyIGNyZWFyIGZlY2hhIGRpcmVjdGFtZW50ZVxuICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGVTdHIpO1xuICAgIH07XG5cbiAgICAvLyBBZ3JlZ2FyIGV2ZW50b3MgZGUgY2xpYyBhIGxhcyBjb2x1bW5hc1xuICAgIHNvcnRDb2x1bW5zLmZvckVhY2goY29sID1cdTAwM2Uge1xuICAgICAgY29sLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPVx1MDAzZSB7XG4gICAgICAgIC8vIFNpIGVzIGxhIG1pc21hIGNvbHVtbmEsIGNhbWJpYXIgZGlyZWNjacOzblxuICAgICAgICBpZiAoY29sLmlkID09PSBjdXJyZW50U29ydENvbHVtbikge1xuICAgICAgICAgIGN1cnJlbnRTb3J0RGlyZWN0aW9uID0gY3VycmVudFNvcnREaXJlY3Rpb24gPT09ICdhc2MnID8gJ2Rlc2MnIDogJ2FzYyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gU2kgZXMgdW5hIG51ZXZhIGNvbHVtbmEsIGVzdGFibGVjZXIgY29tbyBhc2NlbmRlbnRlXG4gICAgICAgICAgY3VycmVudFNvcnRDb2x1bW4gPSBjb2wuaWQ7XG4gICAgICAgICAgY3VycmVudFNvcnREaXJlY3Rpb24gPSAnYXNjJztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgc29ydFRhYmxlKGN1cnJlbnRTb3J0Q29sdW1uLCBjdXJyZW50U29ydERpcmVjdGlvbik7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIE9yZGVuYXIgcG9yIGZlY2hhIGFzY2VuZGVudGUgYWwgY2FyZ2FyIGxhIHDDoWdpbmFcbiAgICBzb3J0VGFibGUoJ3NvcnQtZmVjaGEnLCAnYXNjJyk7XG4gICAgXG5cbiAgfSk7XG4gIC8vIENyZWFyIHVuIG1vZGFsIHBlcnNvbmFsaXphZG8gcGFyYSBpbnRlcmFjY2lvbmVzIGNvbiBlbCB1c3VhcmlvXG4gIGZ1bmN0aW9uIGNyZWFyTW9kYWxQZXJzb25hbGl6YWRvKCkge1xuICAgIC8vIENvbXByb2JhciBzaSB5YSBleGlzdGUgdW4gbW9kYWxcbiAgICBsZXQgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWwtcGVyc29uYWxpemFkbycpO1xuICAgIGlmIChtb2RhbCkgcmV0dXJuIG1vZGFsO1xuICAgIFxuICAgIC8vIENyZWFyIGVsIG1vZGFsXG4gICAgbW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBtb2RhbC5pZCA9ICdtb2RhbC1wZXJzb25hbGl6YWRvJztcbiAgICBtb2RhbC5jbGFzc05hbWUgPSAnZml4ZWQgaW5zZXQtMCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB6LTUwIGhpZGRlbic7XG4gICAgbW9kYWwuaW5uZXJIVE1MID0gYFxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiZml4ZWQgaW5zZXQtMCBiZy1ibGFjayBiZy1vcGFjaXR5LTI1XCIgb25jbGljaz1cImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbC1wZXJzb25hbGl6YWRvJykuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcIlx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcbiAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImJnLXdoaXRlIGRhcms6YmctZ3JheS04MDAgcm91bmRlZC1sZyBwLTYgbWF4LXctbWQgdy1mdWxsIG14LWF1dG8gei01MCByZWxhdGl2ZSBzaGFkb3ctbGdcIlx1MDAzZVxuICAgICAgICBcdTAwM2NoMyBjbGFzcz1cInRleHQtbGcgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTkwMCBkYXJrOnRleHQtd2hpdGUgbWItNFwiIGlkPVwibW9kYWwtdGl0dWxvXCJcdTAwM2VcdTAwM2MvaDNcdTAwM2VcbiAgICAgICAgXHUwMDNjcCBjbGFzcz1cInRleHQtZ3JheS02MDAgZGFyazp0ZXh0LWdyYXktMzAwIG1iLTZcIiBpZD1cIm1vZGFsLW1lbnNhamVcIlx1MDAzZVx1MDAzYy9wXHUwMDNlXG4gICAgICAgIFx1MDAzY2RpdiBjbGFzcz1cImZsZXgganVzdGlmeS1lbmQgc3BhY2UteC00XCJcdTAwM2VcbiAgICAgICAgICBcdTAwM2NidXR0b24gaWQ9XCJtb2RhbC1idG4tY2FuY2VsYXJcIiBjbGFzcz1cInB4LTQgcHktMiBiZy1ncmF5LTIwMCB0ZXh0LWdyYXktODAwIGRhcms6YmctZ3JheS03MDAgZGFyazp0ZXh0LWdyYXktMjAwIHJvdW5kZWQgaG92ZXI6YmctZ3JheS0zMDAgZGFyazpob3ZlcjpiZy1ncmF5LTYwMCBmb2N1czpvdXRsaW5lLW5vbmVcIlx1MDAzZUNhbmNlbGFyXHUwMDNjL2J1dHRvblx1MDAzZVxuICAgICAgICAgIFx1MDAzY2J1dHRvbiBpZD1cIm1vZGFsLWJ0bi1jb25maXJtYXJcIiBjbGFzcz1cInB4LTQgcHktMiBiZy1yZWQtNjAwIHRleHQtd2hpdGUgcm91bmRlZCBob3ZlcjpiZy1yZWQtNzAwIGZvY3VzOm91dGxpbmUtbm9uZVwiXHUwMDNlQ29uZmlybWFyXHUwMDNjL2J1dHRvblx1MDAzZVxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG4gICAgYDtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1vZGFsKTtcbiAgICBcbiAgICAvLyBDb25maWd1cmFyIGVsIGJvdMOzbiBDYW5jZWxhclxuICAgIGNvbnN0IGJ0bkNhbmNlbGFyID0gbW9kYWwucXVlcnlTZWxlY3RvcignI21vZGFsLWJ0bi1jYW5jZWxhcicpO1xuICAgIGJ0bkNhbmNlbGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICBtb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gbW9kYWw7XG4gIH1cbiAgXG4gIC8vIEZ1bmNpw7NuIHBhcmEgbW9zdHJhciB1bmEgbm90aWZpY2FjacOzblxuICBmdW5jdGlvbiBtb3N0cmFyTm90aWZpY2FjaW9uKG1lbnNhamUsIHRpcG8gPSAnc3VjY2VzcycpIHtcbiAgICAvLyBDcmVhciBlbGVtZW50byBkZSBub3RpZmljYWNpw7NuXG4gICAgY29uc3Qgbm90aWZpY2FjaW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbm90aWZpY2FjaW9uLmNsYXNzTmFtZSA9IGBmaXhlZCBib3R0b20tNCByaWdodC00IHAtNCByb3VuZGVkLWxnIHNoYWRvdy1sZyB0ZXh0LXdoaXRlICR7dGlwbyA9PT0gJ3N1Y2Nlc3MnID8gJ2JnLWdyZWVuLTUwMCcgOiAnYmctcmVkLTUwMCd9IHotNTAgYW5pbWF0ZS1mYWRlSW5gO1xuICAgIG5vdGlmaWNhY2lvbi50ZXh0Q29udGVudCA9IG1lbnNhamU7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub3RpZmljYWNpb24pO1xuICAgIFxuICAgIC8vIEVsaW1pbmFyIGRlc3B1w6lzIGRlIDMgc2VndW5kb3NcbiAgICBzZXRUaW1lb3V0KCgpID1cdTAwM2Uge1xuICAgICAgbm90aWZpY2FjaW9uLmNsYXNzTGlzdC5hZGQoJ2FuaW1hdGUtZmFkZU91dCcpO1xuICAgICAgc2V0VGltZW91dCgoKSA9XHUwMDNlIHtcbiAgICAgICAgbm90aWZpY2FjaW9uLnJlbW92ZSgpO1xuICAgICAgfSwgNTAwKTtcbiAgICB9LCAzMDAwKTtcbiAgfVxuICBcbiAgLy8gQcOxYWRpciBib3RvbmVzIGRlIGFjY2lvbmVzIGEgbGEgdGFibGEgZGUgcGFydG9zXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbigpIHtcbiAgICBjb25zb2xlLmxvZygnRE9NIGNhcmdhZG86IEluaWNpYWxpemFuZG8gZnVuY2lvbmFsaWRhZGVzIGRlIGFuaW1hbC4uLicpO1xuICAgIFxuICAgIC8vIEFncmVnYXIgZXN0aWxvcyBwYXJhIGFuaW1hY2lvbmVzXG4gICAgY29uc3Qgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgIHN0eWxlLnRleHRDb250ZW50ID0gYFxuICAgICAgQGtleWZyYW1lcyBmYWRlSW4ge1xuICAgICAgICBmcm9tIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwcHgpOyB9XG4gICAgICAgIHRvIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gICAgICB9XG4gICAgICBAa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAgICAgICBmcm9tIHsgb3BhY2l0eTogMTsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApOyB9XG4gICAgICAgIHRvIHsgb3BhY2l0eTogMDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwcHgpOyB9XG4gICAgICB9XG4gICAgICAuYW5pbWF0ZS1mYWRlSW4ge1xuICAgICAgICBhbmltYXRpb246IGZhZGVJbiAwLjNzIGVhc2Utb3V0IGZvcndhcmRzO1xuICAgICAgfVxuICAgICAgLmFuaW1hdGUtZmFkZU91dCB7XG4gICAgICAgIGFuaW1hdGlvbjogZmFkZU91dCAwLjNzIGVhc2UtaW4gZm9yd2FyZHM7XG4gICAgICB9XG4gICAgYDtcbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICBcbiAgICAvLyBDcmVhciBtb2RhbCBwZXJzb25hbGl6YWRvXG4gICAgY29uc3QgbW9kYWwgPSBjcmVhck1vZGFsUGVyc29uYWxpemFkbygpO1xuICAgIFxuICAgIGNvbnN0IHRhYmxhUGFydG9zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYmxhLXBhcnRvcycpO1xuICAgIGlmICghdGFibGFQYXJ0b3MpIHJldHVybjtcbiAgICBcbiAgICBjb25zdCB0Ym9keSA9IHRhYmxhUGFydG9zLnF1ZXJ5U2VsZWN0b3IoJ3Rib2R5Jyk7XG4gICAgaWYgKCF0Ym9keSkgcmV0dXJuO1xuICAgIFxuICAgIC8vIE5vIGHDsWFkaXIgYm90b25lcyBzaSBubyBoYXkgcGFydG9zIChzb2xvIGhheSBtZW5zYWplIGRlICdubyBoYXkgcmVnaXN0cm9zJylcbiAgICBjb25zdCBmaWxhc1ZhY2lhcyA9IHRib2R5LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RyW2RhdGEtZW1wdHk9XCJ0cnVlXCJdJyk7XG4gICAgaWYgKGZpbGFzVmFjaWFzLmxlbmd0aCBcdTAwM2UgMCkgcmV0dXJuO1xuICAgIFxuICAgIC8vIEHDsWFkaXIgY29sdW1uYSBkZSBhY2Npb25lcyBhbCBlbmNhYmV6YWRvXG4gICAgY29uc3QgdGhlYWQgPSB0YWJsYVBhcnRvcy5xdWVyeVNlbGVjdG9yKCd0aGVhZCB0cicpO1xuICAgIGlmICh0aGVhZCkge1xuICAgICAgY29uc3QgdGhBY2Npb25lcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgICB0aEFjY2lvbmVzLnNjb3BlID0gJ2NvbCc7XG4gICAgICB0aEFjY2lvbmVzLmNsYXNzTmFtZSA9ICdweC02IHB5LTMgdGV4dC1sZWZ0IHRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS0zMDAgdXBwZXJjYXNlIHRyYWNraW5nLXdpZGVyJztcbiAgICAgIHRoQWNjaW9uZXMudGV4dENvbnRlbnQgPSAnQWNjaW9uZXMnO1xuICAgICAgdGhlYWQuYXBwZW5kQ2hpbGQodGhBY2Npb25lcyk7XG4gICAgfVxuICAgIFxuICAgIC8vIEHDsWFkaXIgYm90b25lcyBhIGNhZGEgZmlsYVxuICAgIGNvbnN0IGZpbGFzID0gdGJvZHkucXVlcnlTZWxlY3RvckFsbCgndHInKTtcbiAgICBmaWxhcy5mb3JFYWNoKGZ1bmN0aW9uKGZpbGEpIHtcbiAgICAgIC8vIFNpIGVzIHVuYSBmaWxhIHZhY8OtYSwgbm8gYcOxYWRpciBib3RvbmVzXG4gICAgICBpZiAoZmlsYS5nZXRBdHRyaWJ1dGUoJ2RhdGEtZW1wdHknKSA9PT0gJ3RydWUnKSByZXR1cm47XG4gICAgICBcbiAgICAgIC8vIEV4dHJhZXIgZWwgSUQgZGVsIHBhcnRvIC0gaW50ZW50YXJlbW9zIG9idGVuZXJsbyBkZSB1biBhdHJpYnV0byBkYXRhLWlkXG4gICAgICAvLyBTaSBubyBlc3TDoSBkaXNwb25pYmxlLCB1c2FyZW1vcyB1biBJRCBnZW5lcmFkb1xuICAgICAgY29uc3QgcGFydG9JZCA9IGZpbGEuZ2V0QXR0cmlidXRlKCdkYXRhLWlkJykgfHwgYHBhcnRvLSR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwMCl9YDtcbiAgICAgIFxuICAgICAgLy8gQ3JlYXIgY2VsZGEgcGFyYSBib3RvbmVzXG4gICAgICBjb25zdCB0ZEFjY2lvbmVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICAgIHRkQWNjaW9uZXMuY2xhc3NOYW1lID0gJ3B4LTYgcHktNCB3aGl0ZXNwYWNlLW5vd3JhcCB0ZXh0LXNtIHRleHQtZ3JheS01MDAgZGFyazp0ZXh0LWdyYXktNDAwJztcbiAgICAgIFxuICAgICAgLy8gQm90w7NuIGVkaXRhclxuICAgICAgY29uc3QgYnRuRWRpdGFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICBidG5FZGl0YXIuY2xhc3NOYW1lID0gJ2JnLWdyYXktMTAwIHRleHQtYmx1ZS02MDAgcHktMSBweC0zIHJvdW5kZWQtbWQgbXItMiB0ZXh0LXhzIGZvbnQtbWVkaXVtIGhvdmVyOmJnLWdyYXktMjAwIGRhcms6YmctZ3JheS03MDAgZGFyazp0ZXh0LWJsdWUtNDAwIGRhcms6aG92ZXI6YmctZ3JheS02MDAnO1xuICAgICAgYnRuRWRpdGFyLnRpdGxlID0gJ0VkaXRhciBpbmZvcm1hY2nDs24gZGVsIHBhcnRvJztcbiAgICAgIGJ0bkVkaXRhci50ZXh0Q29udGVudCA9ICdFZGl0YXInO1xuICAgICAgYnRuRWRpdGFyLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIHBhcnRvSWQpO1xuICAgICAgXG4gICAgICAvLyBCb3TDs24gZWxpbWluYXJcbiAgICAgIGNvbnN0IGJ0bkVsaW1pbmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICBidG5FbGltaW5hci5jbGFzc05hbWUgPSAnYmctZ3JheS0xMDAgdGV4dC1yZWQtNjAwIHB5LTEgcHgtMyByb3VuZGVkLW1kIHRleHQteHMgZm9udC1tZWRpdW0gaG92ZXI6YmctZ3JheS0yMDAgZGFyazpiZy1ncmF5LTcwMCBkYXJrOnRleHQtcmVkLTQwMCBkYXJrOmhvdmVyOmJnLWdyYXktNjAwJztcbiAgICAgIGJ0bkVsaW1pbmFyLnRleHRDb250ZW50ID0gJ0VsaW1pbmFyJztcbiAgICAgIGJ0bkVsaW1pbmFyLnNldEF0dHJpYnV0ZSgnZGF0YS1pZCcsIHBhcnRvSWQpO1xuICAgICAgYnRuRWxpbWluYXIudGl0bGUgPSAnRWxpbWluYXIgcGFydG8nO1xuICAgICAgXG4gICAgICAvLyBBw7FhZGlyIGJvdG9uZXMgYSBsYSBjZWxkYVxuICAgICAgdGRBY2Npb25lcy5hcHBlbmRDaGlsZChidG5FZGl0YXIpO1xuICAgICAgdGRBY2Npb25lcy5hcHBlbmRDaGlsZChidG5FbGltaW5hcik7XG4gICAgICBcbiAgICAgIC8vIEHDsWFkaXIgY2VsZGEgYSBsYSBmaWxhXG4gICAgICBmaWxhLmFwcGVuZENoaWxkKHRkQWNjaW9uZXMpO1xuICAgICAgXG4gICAgICAvLyBFdmVudG8gcGFyYSBlZGl0YXIgcGFydG9cbiAgICAgIGJ0bkVkaXRhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHBhcnRvSWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpO1xuICAgICAgICBjb25zdCBmaWxhID0gdGhpcy5jbG9zZXN0KCd0cicpO1xuICAgICAgICBjb25zb2xlLmxvZygnRWRpdGFuZG8gcGFydG86JywgcGFydG9JZCk7XG4gICAgICAgIFxuICAgICAgICAvLyBVc2FyIGxhIGZ1bmNpw7NuIGRlbCBzY3JpcHQgZWRpdGFyLXBhcnRvLXY0LmpzXG4gICAgICAgIGlmICh3aW5kb3cuZWRpdGFyUGFydG9WNCBcdTAwMjZcdTAwMjYgd2luZG93LmVkaXRhclBhcnRvVjQubW9zdHJhck1vZGFsKSB7XG4gICAgICAgICAgd2luZG93LmVkaXRhclBhcnRvVjQubW9zdHJhck1vZGFsKHBhcnRvSWQsIGZpbGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ05vIHNlIGhhIGNhcmdhZG8gY29ycmVjdGFtZW50ZSBlbCBzY3JpcHQgZGUgZWRpY2nDs24gZGUgcGFydG9zIHY0Jyk7XG4gICAgICAgICAgbW9zdHJhck5vdGlmaWNhY2lvbignRXJyb3IgYWwgY2FyZ2FyIGVsIGVkaXRvciBkZSBwYXJ0b3MnLCAnZXJyb3InKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIC8vIEV2ZW50byBwYXJhIGVsaW1pbmFyIHBhcnRvXG4gICAgICBidG5FbGltaW5hci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHBhcnRvSWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnZGF0YS1pZCcpO1xuICAgICAgICBjb25zdCBmaWxhID0gdGhpcy5jbG9zZXN0KCd0cicpO1xuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgXG4gICAgICAgIC8vIENvbmZpZ3VyYXIgZWwgbW9kYWxcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsLXRpdHVsbycpLnRleHRDb250ZW50ID0gJ0VsaW1pbmFyIHBhcnRvJztcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsLW1lbnNhamUnKS50ZXh0Q29udGVudCA9ICfCv1NlZ3VybyBxdWUgZGVzZWEgZWxpbWluYXIgZXN0ZSBwYXJ0bz8gRXN0YSBhY2Npw7NuIG5vIHNlIHB1ZWRlIGRlc2hhY2VyLic7XG4gICAgICAgIFxuICAgICAgICAvLyBNb3N0cmFyIGVsIG1vZGFsXG4gICAgICAgIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ29uZmlndXJhciBlbCBib3TDs24gQ29uZmlybWFyXG4gICAgICAgIGNvbnN0IGJ0bkNvbmZpcm1hciA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJyNtb2RhbC1idG4tY29uZmlybWFyJyk7XG4gICAgICAgIGJ0bkNvbmZpcm1hci5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgICAgY29uc29sZS5sb2coJ0VsaW1pbmFuZG8gcGFydG86JywgcGFydG9JZCk7XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKTtcbiAgICAgICAgICBpZiAoIXRva2VuKSB7XG4gICAgICAgICAgICBtb3N0cmFyTm90aWZpY2FjaW9uKCdFcnJvcjogTm8gc2UgaGEgZW5jb250cmFkbyBlbCB0b2tlbiBkZSBhdXRlbnRpY2FjacOzbicsICdlcnJvcicpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBPYnRlbmVyIGVsIElEIGRlbCBhbmltYWwgZGUgbGEgVVJMXG4gICAgICAgICAgY29uc3QgYW5pbWFsSWRNYXRjaCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5tYXRjaCgvXFwvYW5pbWFsc1xcLyhbMC05XSspLyk7XG4gICAgICAgICAgY29uc3QgYW5pbWFsSWQgPSBhbmltYWxJZE1hdGNoID8gYW5pbWFsSWRNYXRjaFsxXSA6IG51bGw7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKCFhbmltYWxJZCkge1xuICAgICAgICAgICAgYWxlcnQoJ0Vycm9yOiBObyBzZSBwdWRvIGRldGVybWluYXIgZWwgSUQgZGVsIGFuaW1hbCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBWYW1vcyBhIGludGVudGFyIGRpZmVyZW50ZXMgcnV0YXMgZGUgQVBJIGVuIG9yZGVuIGRlIHByaW9yaWRhZFxuICAgICAgICAgIGNvbnN0IGFwaVVybHMgPSBbXG4gICAgICAgICAgICBgaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwaS92MS9hbmltYWxzLyR7YW5pbWFsSWR9L3BhcnRvcy8ke3BhcnRvSWR9YCwgLy8gUnV0YSBwcmVmZXJpZGEgY29uIElEIGRlIGFuaW1hbFxuICAgICAgICAgICAgYGh0dHA6Ly9sb2NhbGhvc3Q6ODAwMC9hcGkvdjEvcGFydG9zLyR7cGFydG9JZH1gIC8vIFJ1dGEgYWx0ZXJuYXRpdmFcbiAgICAgICAgICBdO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFByb2JhciBjb24gZWwgZW5kcG9pbnQgcHJpbmNpcGFsIChhbmltYWxfaWQvcGFydG9zL3BhcnRvX2lkKVxuICAgICAgICAgIGNvbnNvbGUubG9nKGBJbnRlbnRhbmRvIGVsaW1pbmFyIHBhcnRvICR7cGFydG9JZH0gZGVsIGFuaW1hbCAke2FuaW1hbElkfWApO1xuICAgICAgICAgIGZldGNoKGFwaVVybHNbMF0sIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogYEJlYXJlciAke3Rva2VufWAsXG4gICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgIC8vIFNpIGVsIHByaW1lciBlbmRwb2ludCBmYWxsYSwgcHJvYmFyIGNvbiBlbCBlbmRwb2ludCBhbHRlcm5hdGl2b1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgRW5kcG9pbnQgcHJpbmNpcGFsIGZhbGzDsyBjb24gJHtyZXNwb25zZS5zdGF0dXN9LCBpbnRlbnRhbmRvIGVuZHBvaW50IGFsdGVybmF0aXZvLi4uYCk7XG4gICAgICAgICAgICAgIHJldHVybiBmZXRjaChhcGlVcmxzWzFdLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHt0b2tlbn1gLFxyXG4gICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIEFsZ3Vub3MgZW5kcG9pbnRzIG5vIGRldnVlbHZlbiBKU09OIHbDoWxpZG9cclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5jYXRjaCgoKSA9XHUwMDNlICh7IHN1Y2Nlc3M6IHRydWUgfSkpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlT3JEYXRhKSB7XHJcbiAgICAgICAgICAgIC8vIFNpIGVzIHVuYSByZXNwdWVzdGEgSFRUUCBkZSBsYSBzZWd1bmRhIHBldGljacOzblxyXG4gICAgICAgICAgICBpZiAocmVzcG9uc2VPckRhdGEgaW5zdGFuY2VvZiBSZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gcmVzcG9uc2VPckRhdGE7XHJcbiAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBlbiBsYSBBUEk6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAvLyBBbGd1bm9zIGVuZHBvaW50cyBubyBkZXZ1ZWx2ZW4gSlNPTiB2w6FsaWRvXHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS5jYXRjaCgoKSA9XHUwMDNlICh7IHN1Y2Nlc3M6IHRydWUgfSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBTaSBzb24gZGF0b3MgZGUgdW5hIHBldGljacOzbiBleGl0b3NhIGFudGVyaW9yXHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZU9yRGF0YTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQYXJ0byBlbGltaW5hZG8gY29ycmVjdGFtZW50ZTonLCBkYXRhKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIEVsaW1pbmFyIGxhIGZpbGEgZGUgbGEgdGFibGFcclxuICAgICAgICAgICAgaWYgKGZpbGEpIHtcclxuICAgICAgICAgICAgICBmaWxhLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgIC8vIFNpIG5vIHF1ZWRhbiBmaWxhcywgbW9zdHJhciBtZW5zYWplXHJcbiAgICAgICAgICAgICAgY29uc3QgZmlsYXMgPSB0YWJsYVBhcnRvcy5xdWVyeVNlbGVjdG9yQWxsKCd0Ym9keSB0cicpO1xyXG4gICAgICAgICAgICAgIGlmIChmaWxhcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHRib2R5ID0gdGFibGFQYXJ0b3MucXVlcnlTZWxlY3RvcigndGJvZHknKTtcclxuICAgICAgICAgICAgICAgIGlmICh0Ym9keSkge1xyXG4gICAgICAgICAgICAgICAgICBjb25zdCB0ciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7XHJcbiAgICAgICAgICAgICAgICAgIHRyLnNldEF0dHJpYnV0ZSgnZGF0YS1lbXB0eScsICd0cnVlJyk7XHJcbiAgICAgICAgICAgICAgICAgIHRyLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgICAgICBcdTAwM2N0ZCBjb2xzcGFuPVwiNVwiIGNsYXNzPVwicHgtNiBweS00IHRleHQtY2VudGVyIHRleHQtc20gdGV4dC1ncmF5LTUwMCBkYXJrOnRleHQtZ3JheS00MDBcIlx1MDAzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgTm8gaGF5IHJlZ2lzdHJvcyBkZSBwYXJ0b3MgcGFyYSBlc3RlIGFuaW1hbFxyXG4gICAgICAgICAgICAgICAgICAgIFx1MDAzYy90ZFx1MDAzZVxyXG4gICAgICAgICAgICAgICAgICBgO1xyXG4gICAgICAgICAgICAgICAgICB0Ym9keS5hcHBlbmRDaGlsZCh0cik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBtb3N0cmFyTm90aWZpY2FjaW9uKCdQYXJ0byBlbGltaW5hZG8gY29ycmVjdGFtZW50ZScsICdzdWNjZXNzJyk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGFsIGVsaW1pbmFyIHBhcnRvOicsIGVycm9yKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIEludGVudGFyIG1vc3RyYXIgdW4gbWVuc2FqZSBtw6FzIGRlc2NyaXB0aXZvIGJhc2FkbyBlbiBlbCBlcnJvclxyXG4gICAgICAgICAgICBsZXQgbWVuc2FqZUVycm9yID0gZXJyb3IubWVzc2FnZSB8fCAnRXJyb3IgZGVzY29ub2NpZG8nO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gU2kgZXMgdW4gZXJyb3IgZXNwZWPDrWZpY28gZGUgQVBJLCBpbnRlbnRhciBleHRyYWVyIG3DoXMgaW5mb3JtYWNpw7NuXHJcbiAgICAgICAgICAgIGlmIChtZW5zYWplRXJyb3IuaW5jbHVkZXMoJzUwMCcpKSB7XHJcbiAgICAgICAgICAgICAgbWVuc2FqZUVycm9yID0gJ0Vycm9yIGludGVybm8gZGVsIHNlcnZpZG9yLiBQb3NpYmxlIHByb2JsZW1hIGNvbiBsYSBiYXNlIGRlIGRhdG9zLic7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVuc2FqZUVycm9yLmluY2x1ZGVzKCc0MDQnKSkge1xyXG4gICAgICAgICAgICAgIG1lbnNhamVFcnJvciA9ICdObyBzZSBlbmNvbnRyw7MgZWwgcmVjdXJzby4gRXMgcG9zaWJsZSBxdWUgZWwgcGFydG8geWEgaGF5YSBzaWRvIGVsaW1pbmFkby4nO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKG1lbnNhamVFcnJvci5pbmNsdWRlcygnNDAzJykpIHtcclxuICAgICAgICAgICAgICBtZW5zYWplRXJyb3IgPSAnTm8gdGllbmUgcGVybWlzb3MgcGFyYSBlbGltaW5hciBlc3RlIHBhcnRvLic7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobWVuc2FqZUVycm9yLmluY2x1ZGVzKCc0MDEnKSkge1xyXG4gICAgICAgICAgICAgIG1lbnNhamVFcnJvciA9ICdTdSBzZXNpw7NuIGhhIGV4cGlyYWRvLiBQb3IgZmF2b3IsIGluaWNpZSBzZXNpw7NuIG51ZXZhbWVudGUuJztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgbW9zdHJhck5vdGlmaWNhY2lvbihgRXJyb3IgYWwgZWxpbWluYXIgcGFydG86ICR7bWVuc2FqZUVycm9yfWAsICdlcnJvcicpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cdTAwM2Mvc2NyaXB0XHUwMDNlXHJcblxyXG5cdTAwM2MhLS0gU2NyaXB0IHBhcmEgZWRpY2nDs24gZGUgcGFydG9zIC0tXHUwMDNlXHJcblx1MDAzY3NjcmlwdFx1MDAzZVxyXG4gIC8vIEltcG9ydGFyIGVsIHNjcmlwdCBkZSBlZGljacOzbiBkZSBwYXJ0b3MgKHZlcnNpw7NuIDQgLSB1c2FuZG8gUEFUQ0ggZW4gbHVnYXIgZGUgUFVUKVxyXG4gIGNvbnN0IHNjcmlwdFBhcnRvcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xyXG4gIHNjcmlwdFBhcnRvcy5zcmMgPSAnL3NjcmlwdHMvZWRpdGFyLXBhcnRvLXY0LmpzJztcclxuICBzY3JpcHRQYXJ0b3MudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xyXG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0UGFydG9zKTtcclxuXHUwMDNjL3NjcmlwdFx1MDAzZVxyXG5cclxuXHUwMDNjIS0tIFNjcmlwdCBwYXJhIGNhcmdhciBlbCBoaXN0b3JpYWwgZGUgY2FtYmlvcyAtLVx1MDAzZVxyXG5cdTAwM2NzY3JpcHRcdTAwM2VcclxuICAvLyBJbXBvcnRhciBlbCBzY3JpcHQgcXVlIG1hbmVqYSBsYSBjYXJnYSBkZWwgaGlzdG9yaWFsIGRlIGNhbWJpb3NcclxuICBjb25zdCBzY3JpcHRIaXN0b3JpYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICBzY3JpcHRIaXN0b3JpYWwuc3JjID0gJy9zY3JpcHRzL2FuaW1hbC1oaXN0b3J5LmpzJztcclxuICBzY3JpcHRIaXN0b3JpYWwudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xyXG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0SGlzdG9yaWFsKTtcclxuICBcclxuICAvLyBFc2NyaWJpciBkaXJlY3RhbWVudGUgYWwgY29uc29sZSBsb2cgcGFyYSB2ZXJpZmljYXIgcXVlIGVsIHNjcmlwdCBzZSBlamVjdXRhXHJcbiAgY29uc29sZS5sb2coJ/CflI0gVkVSSUZJQ0FDScOTTjogU2NyaXB0IGludGVybm8gZWplY3V0w6FuZG9zZSBjb3JyZWN0YW1lbnRlJyk7XHJcbiAgXHJcbiAgLy8gQWdyZWdhciBmdW5jacOzbiBwYXJhIGRldGVjdGFyIGN1YW5kbyBzZSBoYWNlIGNsaWMgZW4gbGEgcGVzdGHDsWEgZGUgaGlzdG9yaWFsXHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xyXG4gICAgY29uc3QgdGFiQ2hhbmdlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YWItY2hhbmdlcycpO1xyXG4gICAgaWYgKHRhYkNoYW5nZXMpIHtcclxuICAgICAgY29uc29sZS5sb2coJ/CflI0gRW5jb250cmFkYSBwZXN0YcOxYSBkZSBoaXN0b3JpYWwsIGFncmVnYW5kbyBldmVudCBsaXN0ZW5lcicpO1xyXG4gICAgICB0YWJDaGFuZ2VzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ/CflIQgUkVHSVNUUkFETzogQ2xpYyBlbiBwZXN0YcOxYSBkZSBoaXN0b3JpYWwgZGVzZGUgc2NyaXB0IHByaW5jaXBhbCcpO1xyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUud2Fybign4pqg77iPIE5vIHNlIGVuY29udHLDsyBsYSBwZXN0YcOxYSBkZSBoaXN0b3JpYWwnKTtcclxuICAgIH1cclxuICB9KTtcclxuXHUwMDNjL3NjcmlwdFx1MDAzZSJdLCAibWFwcGluZ3MiOiAiQUF5c0JBLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RDtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztBQUNoRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMzRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0U7QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsSUFBSTtBQUNKO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzVCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLElBQUk7QUFDSjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzdCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEUsSUFBSTtBQUNKO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2pDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7QUFDVixRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25HLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hFO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0I7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pIO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUYsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25FLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDcEMsUUFBUSxDQUFDO0FBQ1Q7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDL0UsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNwRixRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JGO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9DLFFBQVEsQ0FBQyxDQUFDLEVBQUU7QUFDWixVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRSxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2pGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQ7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvRCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUM5QixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVELFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckY7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ25DLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0U7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN0QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDdEY7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzFGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDakQsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3hCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxRDtBQUNBLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDbkUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUQsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ2pFO0FBQ0EsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDaEUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQzVCLFFBQVE7QUFDUjtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZHO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDeEIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ2pGLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUMxRCxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEUsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUUsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2hDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QyxZQUFZO0FBQ1osVUFBVSxDQUFDLENBQUM7QUFDWixRQUFRLENBQUMsQ0FBQztBQUNWO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzlCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ3BDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyQixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNsQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDdkIsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQzFCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMxQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQzVCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNCLFVBQVUsQ0FBQztBQUNYLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3RCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDMUIsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDNUIsVUFBVSxDQUFDO0FBQ1gsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzlCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNyQyxVQUFVLENBQUM7QUFDWCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDeEIsWUFBWSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRixZQUFZLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRyxVQUFVO0FBQ1YsUUFBUSxDQUFDLENBQUM7QUFDVjtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6RSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5RixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakk7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvRSxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDckQ7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pFLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNwQixVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RjtBQUNBLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMvQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEUsWUFBWSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqQztBQUNBLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ3hDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakYsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RCxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3hGLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pGLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0RSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0YsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkU7QUFDQSxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3RCxjQUFjO0FBQ2QsWUFBWSxDQUFDLENBQUM7QUFDZDtBQUNBLFlBQVksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO0FBQ3BELGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDMUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RztBQUNBLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRTtBQUNqQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkQsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxRCxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pELGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0RSxjQUFjLENBQUM7QUFDZjtBQUNBLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNwQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO0FBQ2pDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN4QixrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUM3QixrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNoQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNoQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNsQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLGdCQUFnQixDQUFDO0FBQ2pCLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUIsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0Usa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDaEMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNqQyxnQkFBZ0IsQ0FBQztBQUNqQixnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNwQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMzQyxnQkFBZ0IsQ0FBQztBQUNqQixnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM5QixrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakUsa0JBQWtCLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQztBQUNsRSxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRSxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUUsZ0JBQWdCO0FBQ2hCLGNBQWMsQ0FBQyxDQUFDO0FBQ2hCO0FBQ0EsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3RCxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDdkQsWUFBWTtBQUNaLFVBQVU7QUFDVixRQUFRO0FBQ1I7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RGO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzFILFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUN0QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEY7QUFDQSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0IsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDdEMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDckQsUUFBUTtBQUNSO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6RCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMvSCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM3RyxRQUFRO0FBQ1I7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDeEIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RFO0FBQ0EsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwSCxNQUFNO0FBQ04sSUFBSTtBQUNKO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO0FBQ3pCLE1BQU0sQ0FBQyxDQUFDLEVBQUU7QUFDVixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0MsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFDbkMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1RCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakQsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUN0RCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1RCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0MsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsTUFBTSxDQUFDO0FBQ1AsTUFBTSxDQUFDLENBQUMsRUFBRTtBQUNWLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakQsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUM7QUFDbEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEQsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztBQUNwRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0MsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDckMsTUFBTTtBQUNOLElBQUksQ0FBQztBQUNMO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ3JDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMxQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzdDLElBQUk7QUFDSjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEU7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakY7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZGLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRixNQUFNLENBQUM7QUFDUCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNwQixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVGLE1BQU07QUFDTixNQUFNLENBQUM7QUFDUDtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JCLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ2hELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pFLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEYsTUFBTTtBQUNOO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7QUFDdkIsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQzNGLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUN4RSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUM1RixRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNqRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDL0UsTUFBTSxDQUFDO0FBQ1A7QUFDQSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzdCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0QsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckIsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3pCLFlBQVksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5RCxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUM7QUFDdkcsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUIsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUUsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkIsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUQsWUFBWTtBQUNaLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2pCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hELFVBQVU7QUFDVixRQUFRO0FBQ1IsTUFBTSxDQUFDLENBQUM7QUFDUjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0UsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDekIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNyRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0FBQzNFLHlCQUF5QixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0UsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRyxNQUFNO0FBQ047QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMzRCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDM0UsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRDtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDakQsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0IsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9GLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakksUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BHLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BJLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkgsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckcsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVIO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1RCxRQUFRO0FBQ1IsTUFBTSxDQUFDLENBQUM7QUFDUjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUN2QyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDckUsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvRCxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDN0MsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pFLFFBQVE7QUFDUixNQUFNLENBQUMsQ0FBQztBQUNSO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzVFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BEO0FBQ0EsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0IsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRTtBQUM3RyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDcEcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1RyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzlHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVDLFFBQVE7QUFDUjtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3RCxRQUFRO0FBQ1IsTUFBTSxDQUFDLENBQUM7QUFDUjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzdGLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRDtBQUNBLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNsSCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0MsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3BILFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3hHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0MsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdkgsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxRQUFRO0FBQ1I7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzVCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMzRCxRQUFRO0FBQ1IsTUFBTSxDQUFDLENBQUM7QUFDUjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzlELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRCxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUMvQjtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN6RSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNoRCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25FLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzdCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkksWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixVQUFVO0FBQ1YsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkYsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbEYsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2hHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLFFBQVE7QUFDUjtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekQsUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNwRixRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMzRCxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdkIsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkcsUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUM7QUFDaEQsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNqRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xEO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDaEYsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMzQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDaEQsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUQsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckQsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMxQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzNDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzNDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzlDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNoRCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0QsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM5RCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0QsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDaEUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELFFBQVE7QUFDUixNQUFNLENBQUMsQ0FBQztBQUNSLElBQUk7QUFDSjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6QjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ25ELE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3BDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsTUFBTTtBQUNOLElBQUksQ0FBQyxDQUFDO0FBQ047QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzdELE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0RixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25GO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDM0QsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyRCxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdEMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6QyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNuQixjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUMsWUFBWTtBQUNaLFVBQVU7QUFDVixRQUFRLENBQUMsQ0FBQztBQUNWO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDO0FBQzFCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ3pELFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNqQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekQsVUFBVTtBQUNWLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2xDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELFVBQVU7QUFDVixRQUFRLENBQUMsQ0FBQztBQUNWO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDekQsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEQsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDcEYsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9GLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFELFVBQVU7QUFDVixRQUFRLENBQUMsQ0FBQztBQUNWO0FBQ0EsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ3RFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2hDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRCxVQUFVO0FBQ1YsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELFVBQVU7QUFDVixRQUFRLENBQUMsQ0FBQztBQUNWLE1BQU07QUFDTjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9CLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDcEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELE1BQU07QUFDTjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QztBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyRCxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN0QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkQsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQixVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3hDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRCxVQUFVO0FBQ1YsUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsSUFBSSxDQUFDLENBQUM7QUFDTjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0IsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNsRCxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsSUFBSTtBQUNKO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEYsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEc7QUFDQSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNEO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUN0RCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDL0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hEO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDbEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztBQUM5QyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQzFCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNGLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25ILE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN2QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUgsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hHLE1BQU07QUFDTjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDM0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRCxNQUFNO0FBQ04sSUFBSSxDQUFDO0FBQ0w7QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZCO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztBQUNuQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ3hCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDMUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0MsTUFBTSxDQUFDLENBQUM7QUFDUixJQUFJLENBQUMsQ0FBQztBQUNOO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUYsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQztBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQy9DLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNELE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4QjtBQUNBLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hCO0FBQ0EsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0QsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xDO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRSxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDekIsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDckQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7QUFDckQ7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDaEMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5RTtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdkMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUMzRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEM7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ25DLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2pCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLFVBQVU7QUFDVixRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNmLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDbkMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25ELFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2pCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxVQUFVO0FBQ1YsUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQy9CLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNDLE1BQU07QUFDTjtBQUNBLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZEO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDNUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0FBQ2pDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUQsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3ZCLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDcEMsUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1I7QUFDQSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzVELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JCLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFBLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFBLENBQUM7QUFDL0QsTUFBTTtBQUNOLElBQUksQ0FBQztBQUNMO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUMxRCxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNuQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQy9ELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEYsTUFBTTtBQUNOO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0MsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDOUIsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekQsTUFBTTtBQUNOO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUQsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlCLElBQUksQ0FBQztBQUNMO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDL0IsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUMxQyxRQUFRLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDbkQsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMxQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRixRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNmLFVBQVUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0QsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxRQUFRO0FBQ1I7QUFDQSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUQsTUFBTSxDQUFDLENBQUM7QUFDUixJQUFJLENBQUMsQ0FBQztBQUNOO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDO0FBQ3RELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xDO0FBQ0E7QUFDQSxFQUFFLENBQUMsQ0FBQztBQUNKLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNCO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xGLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRTtBQUN0QixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5SSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0csUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDakcsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9FLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0MsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOU0sVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoSixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNiLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ1gsSUFBSSxDQUFDO0FBQ0wsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEM7QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25DLElBQUksQ0FBQyxDQUFDO0FBQ047QUFDQSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoQixFQUFFO0FBQ0Y7QUFDQSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ3pDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDMUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEQsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25LLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0M7QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtBQUNyQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QixNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2IsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ1osRUFBRTtBQUNGO0FBQ0EsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkQsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzNELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFFO0FBQ0EsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pELElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7QUFDeEIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3hCLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDeEQsUUFBUSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ25ELE1BQU07QUFDTixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN6QixRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JELFFBQVEsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN0RCxNQUFNO0FBQ04sTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN0QixRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELE1BQU07QUFDTixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDdkIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRCxNQUFNO0FBQ04sSUFBSSxDQUFDO0FBQ0wsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEM7QUFDQSxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9CLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0M7QUFDQSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvRCxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUI7QUFDQSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN0QztBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2RCxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2YsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDckQsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25DLElBQUk7QUFDSjtBQUNBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDaEMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM5QyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDakMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0MsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUQ7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0UsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEQsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwRztBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRztBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN4RCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xMLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEQ7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxRCxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3SyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xELE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUM7QUFDQSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pDO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDOUIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xDO0FBQ0EsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzFELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDL0M7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZELFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3ZFLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzFELFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ2YsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0YsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3RSxRQUFRO0FBQ1IsTUFBTSxDQUFDLENBQUM7QUFDUjtBQUNBLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQzVELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRDtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDN0IsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN6STtBQUNBLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUIsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEM7QUFDQSxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3hFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMxQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUN2QyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25EO0FBQ0EsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3JELFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN0QixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDaEcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixVQUFVO0FBQ1Y7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDOUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNyRixVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEU7QUFDQSxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDekIsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xFLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEIsVUFBVTtBQUNWO0FBQ0EsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO0FBQzFCLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkgsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9FLFVBQVUsQ0FBQztBQUNYO0FBQ0EsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDeEUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEYsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDNUIsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM1QixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNyQixjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoRCxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMvQyxZQUFZO0FBQ1osVUFBVSxDQUFDO0FBQ1gsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUNuQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDOUIsY0FBYyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9FLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hILGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3ZDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNoQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3pCLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuRCxnQkFBZ0I7QUFDaEIsY0FBYyxDQUFDLENBQUM7QUFDaEIsWUFBWTtBQUNaO0FBQ0EsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQztBQUN4RCxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDbkUsVUFBVSxDQUFDO0FBQ1gsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN6QyxZQUFZLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUM3RCxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3BELGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUM3QyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDaEMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RFLGNBQWM7QUFDZDtBQUNBLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUM7QUFDMUQsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ3JFLFlBQVk7QUFDWjtBQUNBLFlBQVksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMzRCxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqQyxVQUFVLENBQUM7QUFDWCxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUMvQixZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9EO0FBQ0EsWUFBWSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxQyxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUN0QixjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0I7QUFDQSxjQUFjLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbkQsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEUsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7QUFDdEMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENB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QUFDakMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUQ7QUFDQSxZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDNUUsWUFBWSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25FO0FBQ0EsWUFBWSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtBQUNoRixZQUFZLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM5QyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNqRyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckQsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekcsWUFBWSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO0FBQ3JELGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUMxRSxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7QUFDckQsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDMUYsWUFBWTtBQUNaO0FBQ0EsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BGLFVBQVUsQ0FBQyxDQUFDO0FBQ1osUUFBUTtBQUNSLE1BQU0sQ0FBQyxDQUFDO0FBQ1IsSUFBSSxDQUFDLENBQUM7QUFDTixFQUFFLENBQUMsQ0FBQztBQUFBOyIsICJuYW1lcyI6IFtdIH0="],"names":["scriptHistorial","tabChanges","scriptPartos","exportPdfBtn","exportPartosPdfBtn","exportChangesPdfBtn","exportAnimalToPDF","animalName","animalId","currentLang","jsPDF","doc","title","date","logoY","contentStartY","logoUrl","pageWidth","logoX","logoHeight","error","datos","section","item","label","value","generoAnimal","d","esVaca","nextY","partosRows","partosContainer","partosFilas","hayPartos","fila","celdas","fecha","genero","estado","obs","partosHead","observaciones","observacionesText","pageCount","i","translations","t","key","lang","translateAnimalFile","idElement","animalIdFromUrl","el","element","iconPrefix","estadoElement","isActive","labelText","translationKey","tab","header","headerText","desc","descText","th","sortIndicator","button","valueText","e","traducirTodoForzado","btn","celda","texto","span","retryButton","tabs","contents","showTab","tabId","content","selectedTab","contentId","selectedContent","sortColumns","currentSortColumn","currentSortDirection","sortTable","columnId","direction","table","tbody","sortedRows","columnIndex","a","b","cellA","cellB","dateA","parseDate","dateB","row","col","indicator","dateStr","parts","crearModalPersonalizado","modal","mostrarNotificacion","mensaje","tipo","notificacion","style","tablaPartos","thead","thAcciones","partoId","tdAcciones","btnEditar","btnEliminar","event","btnConfirmar","token","animalIdMatch","apiUrls","response","responseOrData","data","tr","mensajeError"],"mappings":"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"}