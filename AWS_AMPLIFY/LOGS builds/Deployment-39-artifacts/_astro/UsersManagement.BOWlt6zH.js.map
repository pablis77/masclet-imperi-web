{"version":3,"file":"UsersManagement.BOWlt6zH.js","sources":["../../../src/services/userServiceProxy.ts","../../../src/components/users/UserForm.tsx","../../../src/components/common/ConfirmDialog.tsx","../../../src/components/common/Pagination.tsx","../../../src/components/users/UserTable.tsx","../../../src/components/users/UsersManagement.tsx"],"sourcesContent":["import api from './api';\nimport type { UserRole } from './authService';\nimport { API_CONFIG } from '../config/apiConfig';\n\n// Interfaces\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  full_name: string;\n  role: UserRole;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface UserCreateDto {\n  username: string;\n  email: string;\n  password: string;\n  full_name?: string;\n  role: UserRole;\n  is_active?: boolean;\n}\n\nexport interface UserUpdateDto extends Partial<Omit<UserCreateDto, 'password'>> {\n  password?: string;\n}\n\nexport interface PaginatedResponse<T> {\n  // Formato estándar\n  items?: T[];\n  total?: number;\n  page?: number;\n  limit?: number;\n  pages?: number;\n  \n  // Formatos alternativos\n  users?: T[];\n  data?: T[];\n  results?: T[];\n  totalPages?: number;\n  totalItems?: number;\n  count?: number;\n  \n  // Para cuando es un array directo\n  [key: number]: T;\n  length?: number;\n}\n\n// Servicio de usuario que conecta con el backend\nconst userServiceProxy = {\n  // Obtiene una lista paginada de usuarios\n  async getUsers(page: number = 1, limit: number = 10, search?: string): Promise<PaginatedResponse<User> | User[]> {\n    try {\n      const params = new URLSearchParams();\n      params.append('page', page.toString());\n      params.append('limit', limit.toString());\n      if (search) {\n        params.append('search', search);\n      }\n      \n      console.log('Obteniendo usuarios, página:', page, 'límite:', limit);\n      \n      // Aseguramos que tenemos el token de autenticación\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No hay token de autenticación disponible');\n        return [];\n      }\n      \n      // Configuración explícita para asegurar que se envía el token\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      \n      console.log('Enviando solicitud con token:', token.substring(0, 15) + '...');\n      \n      // Llamamos directamente al endpoint de usuarios con el token\n      console.log('URL de solicitud:', `/users?${params.toString()}`);\n      \n      // IMPLEMENTACIÓN DIRECTA: Usamos fetch en lugar de axios para tener más control\n      try {\n        console.log('Intentando obtener usuarios con fetch...');\n        // Usar la configuración centralizada de apiConfig.ts\n        let fullUrl;\n        // Construir la URL base usando API_CONFIG\n        const baseUrl = `${API_CONFIG.backendURL || ''}${API_CONFIG.baseURL}`;\n        // Asegurar que siempre usamos users/ con barra final para consistencia con el backend\n        fullUrl = `${baseUrl}/users/?${params.toString()}`;\n        console.log('URL de la API construida desde configuración centralizada:', fullUrl);\n        console.log('URL completa:', fullUrl);\n        \n        const fetchResponse = await fetch(fullUrl, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        \n        if (fetchResponse.ok) {\n          const jsonData = await fetchResponse.json();\n          console.log('Datos obtenidos con fetch:', jsonData);\n          \n          // Verificar si hay datos y tienen el formato esperado\n          if (jsonData && jsonData.items && Array.isArray(jsonData.items)) {\n            console.log('Devolviendo usuarios desde fetch:', jsonData.items.length);\n            return jsonData.items;\n          } else if (Array.isArray(jsonData)) {\n            console.log('Devolviendo array de usuarios desde fetch:', jsonData.length);\n            return jsonData;\n          }\n        } else {\n          console.warn('Error en la respuesta fetch:', fetchResponse.status);\n        }\n      } catch (fetchError) {\n        console.error('Error al usar fetch:', fetchError);\n      }\n      \n      // Si fetch falla, seguimos con el método axios como respaldo\n      console.log('Usando axios como método alternativo...');\n      // En desarrollo local, siempre usar URL absoluta para usuarios\n      let url;\n      let response;\n      if (window.location.hostname === 'localhost' || window.location.hostname.includes('192.168.')) {\n        // Para desarrollo local, usamos una URL absoluta y pasamos todo el objeto\n        url = `http://localhost:8000/api/v1/users?${params.toString()}`;\n        response = await api.get(url, { ...config, baseURL: '' });\n      } else {\n        // En otros entornos, usar rutas relativas\n        url = `users?${params.toString()}`;\n        response = await api.get(url, config);\n      }\n      \n      // Inspeccionar el objeto de respuesta completo para encontrar los datos\n      console.log('Respuesta completa de axios:', response);\n      \n      // Intentamos extraer datos de diferentes propiedades de la respuesta\n      let responseData;\n      \n      if (response.data) {\n        responseData = response.data;\n        console.log('Datos encontrados en response.data');\n      } else if (response.request && response.request.response) {\n        try {\n          responseData = JSON.parse(response.request.response);\n          console.log('Datos encontrados en response.request.response');\n        } catch (e) {\n          console.warn('Error al parsear response.request.response');\n        }\n      }\n      \n      // Si todavía no tenemos datos, intentamos solicitud alternativa\n      if (!responseData) {\n        console.warn('No se encontraron datos en la respuesta, intentando solicitud alternativa...');\n        const alternativeResponse = await api.get('/users', config);\n        \n        if (alternativeResponse.data) {\n          responseData = alternativeResponse.data;\n          console.log('Datos encontrados en solicitud alternativa');\n        } else if (alternativeResponse.request && alternativeResponse.request.response) {\n          try {\n            responseData = JSON.parse(alternativeResponse.request.response);\n            console.log('Datos encontrados en alternativeResponse.request.response');\n          } catch (e) {\n            console.warn('Error al parsear alternativeResponse.request.response');\n          }\n        }\n      }\n      \n      // Si aún no tenemos datos, hacemos una última solicitud sin axios\n      if (!responseData) {\n        console.warn('Intentando solicitud XMLHttpRequest como último recurso...');\n        \n        return new Promise((resolve) => {\n          const xhr = new XMLHttpRequest();\n          // Determinar la URL correcta según el entorno\n          let xhrUrl;\n          if (window.location.hostname === 'localhost' || window.location.hostname.includes('192.168.')) {\n            xhrUrl = 'http://localhost:8000/api/v1/users';\n          } else {\n            xhrUrl = `${api.defaults.baseURL}/users`;\n          }\n          console.log('URL para XMLHttpRequest:', xhrUrl);\n          xhr.open('GET', xhrUrl);\n          xhr.setRequestHeader('Authorization', `Bearer ${token}`);\n          xhr.setRequestHeader('Content-Type', 'application/json');\n          xhr.responseType = 'json';\n          \n          xhr.onload = function() {\n            if (xhr.status === 200) {\n              console.log('Respuesta XMLHttpRequest:', xhr.response);\n              if (xhr.response && xhr.response.items) {\n                resolve(xhr.response.items);\n              } else if (Array.isArray(xhr.response)) {\n                resolve(xhr.response);\n              } else {\n                resolve([]);\n              }\n            } else {\n              console.error('Error en XMLHttpRequest:', xhr.status);\n              resolve([]);\n            }\n          };\n          \n          xhr.onerror = function() {\n            console.error('Error de red en XMLHttpRequest');\n            resolve([]);\n          };\n          \n          xhr.send();\n        });\n      }\n      \n      // Procesar los datos si los encontramos\n      if (responseData) {\n        console.log('Datos a procesar:', responseData);\n        \n        // CASO ESPECÍFICO IDENTIFICADO: El backend devuelve los usuarios en una propiedad 'items'\n        if (responseData.items && Array.isArray(responseData.items)) {\n          console.log('Estructura detectada: { items: [...usuarios] }');\n          return responseData.items;\n        }\n        \n        // Convertimos arrays en formato paginado para mantener consistencia\n        if (Array.isArray(responseData)) {\n          console.log('La respuesta es un array directo de usuarios con', responseData.length, 'elementos');\n          const paginatedResponse: PaginatedResponse<User> = {\n            items: responseData,\n            total: responseData.length,\n            page: page,\n            limit: limit,\n            pages: Math.ceil(responseData.length / limit)\n          };\n          return paginatedResponse;\n        }\n        \n        return responseData;\n      }\n      \n      // Si no encontramos datos, devolvemos array vacío\n      console.warn('No se pudieron obtener datos de usuarios después de múltiples intentos');\n      return [];\n    } catch (error) {\n      console.error('Error al obtener usuarios:', error);\n      // No propagar el error, devolver array vacío para evitar bloqueos en la UI\n      return [];\n    }\n  },\n\n  // Obtiene un usuario por su ID\n  async getUserById(id: number): Promise<User> {\n    try {\n      console.log('Obteniendo usuario con ID:', id);\n      const response = await api.get<User>(`/users/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error al obtener usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Crea un nuevo usuario\n  async createUser(userData: UserCreateDto): Promise<User> {\n    try {\n      console.log('Creando nuevo usuario:', userData.username);\n      \n      // Asegurarnos que el rol siempre se envía en minúsculas para evitar errores de validación\n      // Y añadir explícitamente is_active para evitar el error en el backend\n      const processedUserData = {\n        ...userData,\n        role: userData.role.toLowerCase(),\n        is_active: userData.is_active !== undefined ? userData.is_active : true\n      };\n      \n      console.log('Datos del usuario a crear:', JSON.stringify(processedUserData, null, 2));\n      \n      // Obtenemos el token para asegurar que estamos autenticados\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No hay token de autenticación disponible para crear usuario');\n        throw new Error('No hay token de autenticación disponible');\n      }\n      \n      // Usar la configuración centralizada en lugar de api.post directo\n      const baseUrl = `${API_CONFIG.backendURL || ''}${API_CONFIG.baseURL}`;\n      // IMPORTANTE: Para crear usuarios el endpoint es /users/ (CON barra al final, como los demás recursos)\n      const url = `${baseUrl}/users/`;\n      \n      console.log('Usando URL construida desde API_CONFIG para crear usuario:', url);\n      \n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : '',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(processedUserData)\n      });\n      \n      if (!response.ok) {\n        throw {\n          message: 'Error al crear usuario',\n          status: response.status,\n          code: 'ERROR'\n        };\n      }\n      \n      const data = await response.json();\n      console.log('Respuesta al crear usuario:', data);\n      return data;\n    } catch (error) {\n      console.error('Error al crear usuario:', error);\n      throw error;\n    }\n  },\n\n  // Actualiza un usuario existente\n  async updateUser(id: number, userData: UserUpdateDto): Promise<User> {\n    try {\n      console.log('Actualizando usuario con ID:', id);\n      \n      // Usar la configuración centralizada en lugar de api.put directo\n      const token = localStorage.getItem('token');\n      const baseUrl = `${API_CONFIG.backendURL || ''}${API_CONFIG.baseURL}`;\n      const url = `${baseUrl}/users/${id}/`;\n      \n      console.log('Usando URL construida desde API_CONFIG:', url);\n      \n      const response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : '',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      \n      if (!response.ok) {\n        throw {\n          message: 'Error al actualizar usuario',\n          status: response.status,\n          code: 'ERROR'\n        };\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error(`Error al actualizar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Elimina un usuario\n  async deleteUser(id: number): Promise<void> {\n    try {\n      console.log('Eliminando usuario con ID:', id);\n      \n      // Usar la configuración centralizada en lugar de api.delete directo\n      const token = localStorage.getItem('token');\n      const baseUrl = `${API_CONFIG.backendURL || ''}${API_CONFIG.baseURL}`;\n      const url = `${baseUrl}/users/${id}/`;\n      \n      console.log('Usando URL construida desde API_CONFIG para eliminar:', url);\n      \n      const response = await fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': token ? `Bearer ${token}` : '',\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw {\n          message: 'Error al eliminar usuario',\n          status: response.status,\n          code: 'ERROR'\n        };\n      }\n      \n      // No hay datos a devolver para una operación DELETE exitosa\n    } catch (error) {\n      console.error(`Error al eliminar usuario con ID ${id}:`, error);\n      throw error;\n    }\n  },\n};\n\nexport default userServiceProxy;\n","import React, { useState, useEffect } from 'react';\nimport userServiceProxy from '../../services/userServiceProxy';\nimport type { User } from '../../services/userServiceProxy';\nimport type { UserRole } from '../../services/authService';\nimport { getStoredUser } from '../../services/authService';\n\ninterface UserFormProps {\n  user?: User;\n  onSuccess: () => void;\n  onCancel: () => void;\n  // Lista de roles disponibles para seleccionar\n  availableRoles?: UserRole[];\n}\n\nexport const UserForm: React.FC<UserFormProps> = ({ user, onSuccess, onCancel, availableRoles }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: 'usuario' as UserRole\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n  // Inicializar isAdmin directamente con el valor del usuario almacenado\n  const loggedUser = getStoredUser();\n  const [currentUser, setCurrentUser] = useState<User | null>(loggedUser);\n  const [isAdmin, setIsAdmin] = useState(loggedUser?.role === 'administrador');\n\n  // Mostrar la información de depuración para verificar el estado\n  console.log('UserForm - Estado de usuario actual:', {\n    currentUser,\n    isAdmin: isAdmin,\n    role: loggedUser?.role\n  });\n\n  useEffect(() => {\n    if (user) {\n      setIsEdit(true);\n      setFormData({\n        username: user.username,\n        email: user.email,\n        password: '',\n        confirmPassword: '',\n        role: user.role\n      });\n      console.log('UserForm - Usuario cargado para edición:', user);\n      console.log('UserForm - Datos de formulario inicializados:', {\n        username: user.username,\n        email: user.email,\n        role: user.role\n      });\n    } else {\n      // Resetear el formulario cuando no hay usuario seleccionado\n      setIsEdit(false);\n      setFormData({\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n        role: 'usuario' as UserRole\n      });\n    }\n  }, [user]);  // Este efecto se ejecuta cuando cambia el usuario seleccionado\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    \n    // Extraer el nombre real del campo sin el sufijo aleatorio\n    let fieldName = name;\n    if (name.includes('_')) {\n      fieldName = name.split('_')[0]; // Obtenemos la parte antes del guion bajo\n    }\n    \n    // Mapear los campos con sufijos a los campos originales\n    let realFieldName = fieldName;\n    if (fieldName.includes('username')) realFieldName = 'username';\n    if (fieldName.includes('email')) realFieldName = 'email';\n    if (fieldName.includes('password') && !fieldName.includes('confirm')) realFieldName = 'password';\n    if (fieldName.includes('confirmPassword')) realFieldName = 'confirmPassword';\n    \n    setFormData(prev => ({\n      ...prev,\n      [realFieldName]: value\n    }));\n  };\n\n  const validateForm = () => {\n    if (!formData.username.trim()) {\n      setError('El nombre de usuario es obligatorio');\n      return false;\n    }\n    \n    if (!formData.email.trim()) {\n      setError('El email es obligatorio');\n      return false;\n    }\n    \n    if (!isEdit && !formData.password) {\n      setError('La contraseña es obligatoria');\n      return false;\n    }\n    \n    if (!isEdit && formData.password !== formData.confirmPassword) {\n      setError('Las contraseñas no coinciden');\n      return false;\n    }\n    \n    return true;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (isEdit && user) {\n        // Actualizar usuario existente\n        const userData = {\n          username: formData.username,\n          email: formData.email,\n          role: formData.role\n        };\n        \n        // Si se proporcionó contraseña, la incluimos en la actualización\n        if (formData.password && isAdmin) {\n          Object.assign(userData, { password: formData.password });\n        }\n        \n        console.log('UserForm - Enviando datos para actualizar usuario:', userData);\n        const updatedUser = await userServiceProxy.updateUser(user.id, userData);\n        console.log('UserForm - Usuario actualizado correctamente:', updatedUser);\n      } else {\n        // Registrar nuevo usuario\n        const userData = {\n          username: formData.username,\n          email: formData.email,\n          password: formData.password,\n          role: formData.role\n        };\n        \n        console.log('UserForm - Enviando datos para crear usuario:', userData);\n        const createdUser = await userServiceProxy.createUser(userData);\n        console.log('UserForm - Usuario creado correctamente:', createdUser);\n      }\n      \n      // Notificar al componente padre que la operación fue exitosa\n      onSuccess();\n    } catch (err: any) {\n      console.error('Error al guardar usuario:', err);\n      \n      if (err.response) {\n        setError(err.response.data?.detail || 'Error al guardar el usuario');\n      } else if (err.request) {\n        setError('No se pudo conectar con el servidor');\n      } else {\n        setError('Error al procesar la solicitud');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Generamos un ID único para los campos para evitar que el navegador autocomplete\n  const randomSuffix = Math.random().toString(36).substring(2, 10);\n\n  return (\n    <form className=\"space-y-6\" onSubmit={handleSubmit} autoComplete=\"off\" spellCheck=\"false\">\n      {/* Campo oculto para engañar al autocompletado del navegador */}\n      <div style={{ display: 'none' }}>\n        <input type=\"text\" name=\"username_fake\" autoComplete=\"username\" />\n        <input type=\"password\" name=\"password_fake\" autoComplete=\"current-password\" />\n      </div>\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        {isEdit ? 'Editar Usuario' : 'Crear Nuevo Usuario'}\n      </h2>\n      \n      {error && (\n        <div className=\"rounded-md bg-red-50 p-4\">\n          <div className=\"flex\">\n            <div className=\"ml-3\">\n              <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n              <div className=\"mt-2 text-sm text-red-700\">\n                <p>{error}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6\">\n        <div className=\"sm:col-span-3\">\n          <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n            Nombre de usuario\n          </label>\n          <div className=\"mt-1\">\n            <input\n              type=\"text\"\n              name={`username_${randomSuffix}`}\n              id=\"username\"\n              value={formData.username}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n              required\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n            />\n          </div>\n        </div>\n\n        <div className=\"sm:col-span-3\">\n          <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <div className=\"mt-1\">\n            <input\n              type=\"email\"\n              name={`email_${randomSuffix}`}\n              id=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n              required\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n            />\n          </div>\n        </div>\n\n        {(!isEdit || isAdmin) && (\n          <>\n            <div className=\"sm:col-span-3\">\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Contraseña\n              </label>\n              <div className=\"mt-1\">\n                <div className=\"relative\">\n                  <input\n                    type={showPassword ? \"text\" : \"password\"}\n                    name={`password_${randomSuffix}`}\n                    id=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required={!isEdit && !isAdmin}\n                    autoComplete=\"new-password\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                  />\n                  {isAdmin && (\n                    <button \n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5\"\n                    >\n                      {showPassword ? (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\n                          <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n                        </svg>\n                      ) : (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                          <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      )}\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-3\">\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirmar contraseña\n              </label>\n              <div className=\"mt-1\">\n                <div className=\"relative\">\n                  <input\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    name={`confirmPassword_${randomSuffix}`}\n                    id=\"confirmPassword\"\n                    value={formData.confirmPassword}\n                    onChange={handleChange}\n                    className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n                    required={!isEdit && !isAdmin}\n                    autoComplete=\"new-password\"\n                    autoCorrect=\"off\"\n                    autoCapitalize=\"off\"\n                  />\n                  {isAdmin && (\n                    <button \n                      type=\"button\"\n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                      className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-sm leading-5\"\n                    >\n                      {showConfirmPassword ? (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clipRule=\"evenodd\" />\n                          <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n                        </svg>\n                      ) : (\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n                          <path fillRule=\"evenodd\" d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\" clipRule=\"evenodd\" />\n                        </svg>\n                      )}\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        <div className=\"sm:col-span-3\">\n          <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700\">\n            Rol\n          </label>\n          <div className=\"mt-1\">\n            {/* Utilizar la prop availableRoles si existe, o utilizar roles predeterminados según el tipo de usuario */}\n            <select\n              id=\"role\"\n              name=\"role\"\n              value={formData.role}\n              onChange={handleChange}\n              className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\n            >\n              {/* Si se proporcionaron roles disponibles, usar esos */}\n              {availableRoles ? (\n                // Mapear los roles disponibles a opciones\n                availableRoles.map(role => {\n                  let label = role;\n                  if (role === 'Ramon') label = 'Gerente (Ramon)';\n                  else if (role === 'administrador') label = 'Administrador';\n                  else if (role === 'editor') label = 'Editor';\n                  else if (role === 'usuario') label = 'Usuario';\n                  \n                  return <option key={role} value={role}>{label}</option>\n                })\n              ) : (\n                // Opciones por defecto si no se proporcionaron roles\n                loggedUser?.role === 'administrador' ? (\n                  // Si es administrador, mostrar todas las opciones\n                  <>\n                    <option value=\"administrador\">Administrador</option>\n                    <option value=\"Ramon\">Gerente (Ramon)</option>\n                    <option value=\"editor\">Editor</option>\n                    <option value=\"usuario\">Usuario</option>\n                  </>\n                ) : (\n                  // Si NO es administrador, solo roles básicos\n                  <>\n                    <option value=\"editor\">Editor</option>\n                    <option value=\"usuario\">Usuario</option>\n                  </>\n                )\n              )}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex justify-end space-x-3 pt-5\">\n        <button\n          type=\"button\"\n          onClick={onCancel}\n          className=\"rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n        >\n          Cancelar\n        </button>\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n        >\n          {loading ? 'Guardando...' : isEdit ? 'Actualizar' : 'Crear'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\n\ninterface ConfirmDialogProps {\n  isOpen: boolean;\n  title: string;\n  message: string;\n  confirmText: string;\n  cancelText: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n  type?: 'danger' | 'warning' | 'info';\n}\n\nexport const ConfirmDialog: React.FC<ConfirmDialogProps> = ({\n  isOpen,\n  title,\n  message,\n  confirmText,\n  cancelText,\n  onConfirm,\n  onCancel,\n  type = 'danger'\n}) => {\n  if (!isOpen) return null;\n\n  const getTypeStyles = () => {\n    switch (type) {\n      case 'danger':\n        return {\n          icon: (\n            <svg className=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          ),\n          confirmButton: 'bg-red-600 hover:bg-red-700 focus:ring-red-500',\n          iconBackground: 'bg-red-100'\n        };\n      case 'warning':\n        return {\n          icon: (\n            <svg className=\"h-6 w-6 text-yellow-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          ),\n          confirmButton: 'bg-yellow-600 hover:bg-yellow-700 focus:ring-yellow-500',\n          iconBackground: 'bg-yellow-100'\n        };\n      case 'info':\n      default:\n        return {\n          icon: (\n            <svg className=\"h-6 w-6 text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n          ),\n          confirmButton: 'bg-blue-600 hover:bg-blue-700 focus:ring-blue-500',\n          iconBackground: 'bg-blue-100'\n        };\n    }\n  };\n\n  const styles = getTypeStyles();\n\n  return (\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\n      <div className=\"flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n        </div>\n\n        <span className=\"hidden sm:inline-block sm:h-screen sm:align-middle\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n\n        <div className=\"inline-block transform overflow-hidden rounded-lg bg-white text-left align-bottom shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:align-middle\">\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n            <div className=\"sm:flex sm:items-start\">\n              <div className={`mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full ${styles.iconBackground} sm:mx-0 sm:h-10 sm:w-10`}>\n                {styles.icon}\n              </div>\n              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                <h3 className=\"text-lg font-medium leading-6 text-gray-900\">{title}</h3>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-500\">{message}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6\">\n            <button\n              type=\"button\"\n              className={`inline-flex w-full justify-center rounded-md border border-transparent px-4 py-2 text-base font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm ${styles.confirmButton}`}\n              onClick={onConfirm}\n            >\n              {confirmText}\n            </button>\n            <button\n              type=\"button\"\n              className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n              onClick={onCancel}\n            >\n              {cancelText}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface PaginationProps {\n  currentPage: number;\n  totalPages: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n}) => {\n  // No mostrar paginación si solo hay una página\n  if (totalPages <= 1) return null;\n\n  // Función para generar el rango de páginas a mostrar\n  const getPageRange = () => {\n    const range = [];\n    const maxPagesToShow = 5;\n    \n    // Si hay menos páginas que el máximo a mostrar, mostrar todas\n    if (totalPages <= maxPagesToShow) {\n      for (let i = 1; i <= totalPages; i++) {\n        range.push(i);\n      }\n    } else {\n      // Si estamos cerca del inicio\n      if (currentPage <= 3) {\n        for (let i = 1; i <= 5; i++) {\n          range.push(i);\n        }\n      } \n      // Si estamos cerca del final\n      else if (currentPage >= totalPages - 2) {\n        for (let i = totalPages - 4; i <= totalPages; i++) {\n          range.push(i);\n        }\n      } \n      // Si estamos en el medio\n      else {\n        for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n          range.push(i);\n        }\n      }\n    }\n    \n    return range;\n  };\n\n  const pageRange = getPageRange();\n\n  return (\n    <nav className=\"flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6\">\n      <div className=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\n        <div>\n          <p className=\"text-sm text-gray-700\">\n            Mostrando página <span className=\"font-medium\">{currentPage}</span> de{' '}\n            <span className=\"font-medium\">{totalPages}</span>\n          </p>\n        </div>\n        <div>\n          <ul className=\"isolate inline-flex -space-x-px rounded-md shadow-sm\">\n            {/* Botón Anterior */}\n            <li>\n              <button\n                onClick={() => onPageChange(currentPage - 1)}\n                disabled={currentPage === 1}\n                className={`relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 ${\n                  currentPage === 1 ? 'cursor-not-allowed' : 'cursor-pointer'\n                }`}\n              >\n                <span className=\"sr-only\">Anterior</span>\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                  <path fillRule=\"evenodd\" d=\"M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </li>\n            \n            {/* Números de página */}\n            {pageRange.map((page) => (\n              <li key={page}>\n                <button\n                  onClick={() => onPageChange(page)}\n                  className={`relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n                    page === currentPage\n                      ? 'z-10 bg-blue-600 text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600'\n                      : 'text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0'\n                  }`}\n                >\n                  {page}\n                </button>\n              </li>\n            ))}\n            \n            {/* Botón Siguiente */}\n            <li>\n              <button\n                onClick={() => onPageChange(currentPage + 1)}\n                disabled={currentPage === totalPages}\n                className={`relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 ${\n                  currentPage === totalPages ? 'cursor-not-allowed' : 'cursor-pointer'\n                }`}\n              >\n                <span className=\"sr-only\">Siguiente</span>\n                <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                  <path fillRule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clipRule=\"evenodd\" />\n                </svg>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { getStoredUser } from '../../services/authService';\nimport userServiceProxy from '../../services/userServiceProxy';\nimport type { User } from '../../services/userServiceProxy';\nimport { ConfirmDialog } from '../common/ConfirmDialog';\nimport { Pagination } from '../common/Pagination';\nimport { t, getCurrentLanguage } from '../../i18n/config';\nimport { API_CONFIG } from '../../config/apiConfig';\n\n// Variable para saber si es el primer renderizado (SSR) o no (cliente)\nlet isFirstRender = typeof window === 'undefined';\n\ninterface UserTableProps {\n  onEdit: (user: User) => void;\n  onRefresh: () => void;\n  forceLang?: string; // Prop opcional para forzar un idioma específico\n}\n\nexport const UserTable: React.FC<UserTableProps> = ({ onEdit, onRefresh, forceLang }) => {\n  // En el primer renderizado (SSR), usar español por defecto para evitar errores de hidratación\n  // En renderizados posteriores en el cliente, usar el idioma seleccionado o el forzado\n  const initialLang = isFirstRender ? 'es' : (forceLang || getCurrentLanguage());\n  const [currentLang, setCurrentLang] = useState(initialLang);\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [userToDelete, setUserToDelete] = useState<User | null>(null);\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  \n  // Estado para paginación\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalItems, setTotalItems] = useState(0);\n\n  // Cargar usuarios al montar el componente o cuando cambia la página o el refreshTrigger\n  useEffect(() => {\n    loadUsers();\n    const user = getStoredUser();\n    if (user) {\n      setCurrentUser(user);\n    }\n    \n    // Después del primer renderizado (cliente), actualizar el idioma\n    if (isFirstRender) {\n      isFirstRender = false;\n      // Pequeño retraso para permitir la hidratación antes de cambiar el idioma\n      setTimeout(() => {\n        setCurrentLang(getCurrentLanguage());\n      }, 50);\n    }\n  }, [currentPage, pageSize, onRefresh]);\n\n  const loadUsers = async () => {\n    setLoading(true);\n    try {\n      console.log('Solicitando usuarios: página', currentPage, 'tamaño', pageSize);\n      \n      // Forzamos una URL absoluta directa en lugar de confiar en el proxy\n      console.log('DEBUG: Usando URL absoluta para evitar errores de proxy');\n      \n      let response;\n      let usersData: User[] = [];\n      let totalPagesCount = 1;\n      let totalItemsCount = 0;\n      \n      // Usar la configuración centralizada de API_CONFIG\n      try {\n        console.log('DEBUG: Usando configuración centralizada para API');\n        const token = localStorage.getItem('token');\n        \n        // Construir URL con base en API_CONFIG y asegurar que use barra diagonal final (/)\n        const baseUrl = `${API_CONFIG.backendURL || ''}${API_CONFIG.baseURL}`;\n        const directUrl = `${baseUrl}/users/?page=${currentPage}&size=${pageSize}`;\n        console.log('DEBUG: URL completa construida desde API_CONFIG:', directUrl);\n        \n        const directResponse = await fetch(directUrl, {\n          headers: {\n            'Authorization': token ? `Bearer ${token}` : '',\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (directResponse.ok) {\n          response = await directResponse.json();\n          console.log('DEBUG: Éxito con API centralizada:', response);\n        } else {\n          throw new Error(`Error en respuesta: ${directResponse.status}`);\n        }\n      } catch (directError) {\n        console.log('DEBUG: Error con fetch usando API_CONFIG, intentando con userServiceProxy como último recurso', directError);\n        // Si falla el fetch directo, usamos el método del servicio como fallback (que ya hemos corregido)\n        response = await userServiceProxy.getUsers(currentPage, pageSize);\n      }\n      \n      console.log('Respuesta del servidor (tipo):', typeof response);\n      console.log('Respuesta del servidor (valor):', response);\n      \n      // Determinar el formato de la respuesta y extraer usuarios\n      if (Array.isArray(response)) {\n        // Si es un array directo de usuarios\n        console.log('Formato detectado: Array directo de usuarios');\n        usersData = [...response];\n        totalPagesCount = 1;\n        totalItemsCount = response.length;\n      } else if (response && typeof response === 'object') {\n        // Si es un objeto paginado\n        if (response.items && Array.isArray(response.items)) {\n          console.log('Formato detectado: Objeto con items[]');\n          usersData = [...response.items];\n          totalPagesCount = response.pages || 1;\n          totalItemsCount = response.total || response.items.length;\n        } else {\n          // Intentar otros formatos comunes\n          const responseObj = response as Record<string, any>;\n          const possibleItems = responseObj.users || responseObj.data || responseObj.results;\n          \n          if (Array.isArray(possibleItems) && possibleItems.length > 0) {\n            console.log('Formato alternativo detectado con usuarios');\n            usersData = [...possibleItems];\n          }\n          \n          totalPagesCount = responseObj.pages || responseObj.totalPages || 1;\n          totalItemsCount = responseObj.total || responseObj.totalItems || responseObj.count || usersData.length;\n        }\n      }\n      \n      console.log('Usuarios encontrados:', usersData.length);\n      \n      // Actualizar estado con los datos procesados\n      setUsers(usersData);\n      setTotalPages(totalPagesCount);\n      setTotalItems(totalItemsCount);\n      setError(null);\n    } catch (err: any) {\n      console.error('Error al cargar usuarios:', err);\n      setError(t('users.table.error', currentLang));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePageSizeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newPageSize = parseInt(e.target.value);\n    setPageSize(newPageSize);\n    setCurrentPage(1); // Volver a la primera página al cambiar el tamaño\n  };\n\n  const handleDeleteClick = (user: User) => {\n    setUserToDelete(user);\n    setShowConfirmDialog(true);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!userToDelete) return;\n    \n    try {\n      await userServiceProxy.deleteUser(userToDelete.id);\n      setShowConfirmDialog(false);\n      setUserToDelete(null);\n      // Recargar la lista de usuarios\n      loadUsers();\n      onRefresh();\n    } catch (err: any) {\n      console.error('Error al eliminar usuario:', err);\n      setError(t('users.table.delete_error', currentLang));\n      setShowConfirmDialog(false);\n    }\n  };\n\n  const handleCancelDelete = () => {\n    setShowConfirmDialog(false);\n    setUserToDelete(null);\n  };\n\n  // Función para renderizar el badge del rol\n  const getRoleBadge = (role: string) => {\n    let bgColor = '';\n    switch (role) {\n      case 'administrador':\n        bgColor = 'bg-red-100 text-red-800';\n        break;\n      case 'gerente':\n        bgColor = 'bg-blue-100 text-blue-800';\n        break;\n      case 'editor':\n        bgColor = 'bg-green-100 text-green-800';\n        break;\n      default:\n        bgColor = 'bg-gray-100 text-gray-800';\n    }\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${bgColor}`}>\n        {role}\n      </span>\n    );\n  };\n\n  if (loading && users.length === 0) {\n    return <div className=\"text-center py-4\">{t('users.table.loading', currentLang)}</div>;\n  }\n\n  if (error && users.length === 0) {\n    return (\n      <div className=\"bg-red-50 border-l-4 border-red-400 p-4 my-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm text-red-700\">{error}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"overflow-x-auto\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div className=\"text-sm text-gray-700\">\n            {t('users.table.showing', currentLang)} {users.length} {t('users.table.of', currentLang)} {totalItems} {t('users.table.users', currentLang)}\n          </div>\n          <div className=\"flex items-center\">\n            <label htmlFor=\"pageSize\" className=\"mr-2 text-sm text-gray-700\">\n              {t('users.table.show', currentLang)}\n            </label>\n            <select\n              id=\"pageSize\"\n              value={pageSize}\n              onChange={handlePageSizeChange}\n              className=\"rounded border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n            >\n              <option value=\"5\">5</option>\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </select>\n          </div>\n        </div>\n        \n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                {t('users.table.user', currentLang)}\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                {t('users.table.email', currentLang)}\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                {t('users.table.role', currentLang)}\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                {t('users.table.status', currentLang)}\n              </th>\n              <th scope=\"col\" className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                {t('users.table.actions', currentLang)}\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {users.length === 0 ? (\n              <tr>\n                <td colSpan={5} className=\"px-6 py-4 text-center text-sm text-gray-500\">\n                  {t('users.table.no_users', currentLang)}\n                </td>\n              </tr>\n            ) : (\n              users.map((user) => (\n                <tr key={user.id}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">{user.username}</div>\n                        <div className=\"text-sm text-gray-500\">{user.full_name}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{user.email}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {getRoleBadge(user.role)}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${user.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                      {user.is_active ? t('users.table.active', currentLang) : t('users.table.inactive', currentLang)}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2\">\n                    <button\n                      onClick={() => onEdit(user)}\n                      className=\"text-indigo-600 hover:text-indigo-900 focus:outline-none\"\n                    >\n                      {t('users.table.edit', currentLang)}\n                    </button>\n                    {/* No permitir eliminar:\n                        1. Al usuario actual\n                        2. A usuarios con rol administrador (excepto si eres administrador)\n                        3. A usuarios con rol gerente (Ramon) */}\n                    {(currentUser?.id !== user.id && \n                      user.role !== 'Ramon' && \n                      (user.role !== 'administrador' || currentUser?.role === 'administrador')) && (\n                      <button\n                        onClick={() => handleDeleteClick(user)}\n                        className=\"text-red-600 hover:text-red-900 focus:outline-none\"\n                      >\n                        {t('users.table.delete', currentLang)}\n                      </button>\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n      \n      {totalPages > 1 && (\n        <div className=\"flex justify-center mt-4\">\n          <Pagination\n            currentPage={currentPage}\n            totalPages={totalPages}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      )}\n      \n      <ConfirmDialog\n        isOpen={showConfirmDialog}\n        title={t('users.table.confirm_delete_title', currentLang)}\n        message={t('users.table.confirm_delete_message', currentLang).replace('{username}', userToDelete?.username || '')}\n        confirmText={t('users.table.confirm', currentLang)}\n        cancelText={t('users.table.cancel', currentLang)}\n        onConfirm={handleConfirmDelete}\n        onCancel={handleCancelDelete}\n      />\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { UserForm } from './UserForm';\nimport { UserTable } from './UserTable';\nimport { isAuthenticated, getStoredUser } from '../../services/authService';\nimport type { User } from '../../services/authService';\nimport { t, getCurrentLanguage } from '../../i18n/config';\n\n// Variable para saber si es el primer renderizado (SSR) o no (cliente)\nlet isFirstRender = typeof window === 'undefined';\n\nexport const UsersManagement: React.FC = () => {\n  const [showForm, setShowForm] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<User | undefined>(undefined);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n\n  // En el primer renderizado (SSR) usar siempre español para evitar errores de hidratación\n  // después del primer renderizado en el cliente, actualizar al idioma seleccionado\n  const initialLang = isFirstRender ? 'es' : getCurrentLanguage();\n  const [currentLang, setCurrentLang] = useState<string>(initialLang);\n  \n  // Usamos un texto fijo en español para la primera carga (SSR) para prevenir errores de hidratación\n  const [authStatus, setAuthStatus] = useState<string>('Cargando...');\n  const [authDebug, setAuthDebug] = useState<Record<string, any>>({});\n\n  // Efecto para gestionar el cambio de idioma después de la hidratación\n  useEffect(() => {\n    // Si estamos en el cliente y era el primer renderizado, actualizar el idioma\n    if (isFirstRender && typeof window !== 'undefined') {\n      isFirstRender = false;\n      // Pequeño retraso para asegurar que React complete la hidratación\n      setTimeout(() => {\n        const newLang = getCurrentLanguage();\n        setCurrentLang(newLang);\n      }, 100);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Verificar autenticación y permisos\n    const isAuth = isAuthenticated();\n    setAuthStatus(isAuth ? 'Autenticado' : 'No autenticado');\n    \n    if (!isAuth) {\n      // Mostramos información de debug en lugar de redirigir automáticamente\n      setAuthDebug(prev => ({ ...prev, isAuthenticated: false }));\n      return;\n    }\n\n    let user = getStoredUser();\n    \n    // Si estamos autenticados pero no tenemos usuario, lo recreamos para admin\n    if (isAuth && !user) {\n      console.log('Autenticado pero sin datos de usuario, recreando usuario administrador');\n      // Verificamos si existe admin/admin123 a través del localStorage\n      const tokenData = localStorage.getItem('token');\n      if (tokenData) {\n        // Recreamos el usuario admin por defecto\n        user = {\n          id: 1,\n          username: 'admin',\n          email: 'admin@mascletimperi.com',\n          full_name: 'Administrador',\n          role: 'administrador',\n          is_active: true,\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString()\n        };\n        // Guardamos en localStorage para futuras sesiones\n        localStorage.setItem('user', JSON.stringify(user));\n      }\n    }\n    \n    setAuthDebug(prev => ({ ...prev, user: user ? JSON.stringify(user) : 'null' }));\n    \n    if (user) {\n      setCurrentUser(user);\n      \n      // IMPORTANTE: Para el usuario 'admin', siempre asumimos que es administrador\n      // independientemente del rol almacenado\n      let hasAdminRole = false;\n      \n      if (user.username === 'admin') {\n        hasAdminRole = true;\n        // Aseguramos que el rol sea correcto para el admin (debe ser 'administrador', no 'admin')\n        if (user.role !== 'administrador') {\n          console.log('Corrigiendo el rol del usuario admin de:', user.role, 'a: administrador');\n          user.role = 'administrador';\n          localStorage.setItem('user', JSON.stringify(user));\n        }\n      } else {\n        // Para otros usuarios, verificamos el rol normalmente\n        // Usamos 'as string' para evitar el error de tipo ya que sabemos que estos valores son válidos\n        // Verificamos si el rol es administrador o Ramon\n        // Por compatibilidad también aceptamos 'gerente' (backend)\n        hasAdminRole = user.role === 'administrador' || \n                      user.role === 'Ramon' ||\n                      (user.role as string) === 'gerente'; // Para compatibilidad con backend\n      }\n      \n      setIsAdmin(hasAdminRole);\n      \n      // Depuración extendida\n      const debugInfo = {\n        role: user.role,\n        hasAdminRole,\n        username: user.username,\n        isAdmin: hasAdminRole,\n        tokenExists: !!localStorage.getItem('token'),\n        tokenFirstChars: localStorage.getItem('token')?.substring(0, 15) + '...' || 'no-token'\n      };\n      \n      console.log('Información de depuración del usuario:', debugInfo);\n      setAuthDebug(prev => ({ ...prev, ...debugInfo }));\n    } else {\n      // Mostramos información de debug en lugar de redirigir automáticamente\n      setAuthDebug(prev => ({ ...prev, userFound: false }));\n    }\n  }, []);\n\n  const handleAddUser = () => {\n    // Al crear un nuevo usuario aseguramos que no haya usuario preseleccionado\n    setSelectedUser(undefined);\n    // Reiniciamos completamente el formulario\n    setShowForm(true);\n  };\n\n  const handleEditUser = (user: User) => {\n    setSelectedUser(user);\n    setShowForm(true);\n  };\n\n  const handleFormSuccess = () => {\n    setShowForm(false);\n    setSelectedUser(undefined);\n    setRefreshTrigger(prev => prev + 1);\n  };\n\n  const handleFormCancel = () => {\n    setShowForm(false);\n    setSelectedUser(undefined);\n  };\n\n  const handleCancelForm = () => {\n    setShowForm(false);\n  };\n\n  // Función para traducir textos según el idioma actual\n  const translateText = (key: string, fallback: string): string => {\n    if (currentLang === 'ca') {\n      // Traducciones en catalán para textos específicos\n      const translations: Record<string, string> = {\n        'Gestión de Usuarios': 'Gestió d\\'Usuaris',\n        'Añadir Usuario': 'Afegir Usuari',\n        'Nuevo Usuario': 'Nou Usuari',\n        'Cargando': 'Carregant'\n      };\n      return translations[key] || fallback;\n    }\n    return fallback;\n  };\n\n  // Panel de diagnóstico para depuración\n  const renderDebugPanel = () => (\n    <div className=\"bg-white border border-gray-300 p-4 mb-4 rounded-lg\">\n      <h3 className=\"text-lg font-semibold mb-2\">Panel de Diagnóstico</h3>\n      <div className=\"space-y-2\">\n        <div><strong>Estado de Autenticación:</strong> {authStatus}</div>\n        <div><strong>¿Es administrador?:</strong> {isAdmin ? 'Sí' : 'No'}</div>\n        {Object.entries(authDebug).map(([key, value]) => (\n          <div key={key}>\n            <strong>{key}:</strong> {typeof value === 'object' ? JSON.stringify(value) : String(value)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  if (!isAdmin && currentUser) {\n    return (\n      <>\n        {renderDebugPanel()}\n        <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4 my-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-yellow-700\">\n                No tienes permisos para gestionar usuarios. Solo los administradores y usuarios con rol Ramon pueden acceder a esta sección.\n              </p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      {renderDebugPanel()}\n      {!showForm ? (\n        <>\n          <div className=\"mb-6 flex justify-between items-center\">\n            <h2 className=\"text-2xl font-semibold text-gray-800\">{translateText('Gestión de Usuarios', 'Gestión de Usuarios')}</h2>\n            {isAdmin && (\n              <button\n                onClick={handleAddUser}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded shadow focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\"\n              >\n                {translateText('Añadir Usuario', 'Añadir Usuario')}\n              </button>\n            )}\n          </div>\n          <UserTable \n            onEdit={handleEditUser} \n            onRefresh={() => setRefreshTrigger(prev => prev + 1)} \n            key={refreshTrigger} \n            forceLang={currentLang} // Pasamos el idioma como prop\n          />\n        </>\n      ) : (\n        <UserForm \n          user={selectedUser} \n          onSuccess={handleFormSuccess} \n          onCancel={handleFormCancel}\n          availableRoles={isAdmin ? \n            ['administrador', 'Ramon', 'editor', 'usuario'] : \n            ['editor', 'usuario']}\n        />\n      )}\n    </div>\n  );\n};\n"],"names":["userServiceProxy","page","limit","search","params","token","config","fullUrl","API_CONFIG","fetchResponse","jsonData","fetchError","url","response","api","responseData","alternativeResponse","resolve","xhr","xhrUrl","error","id","userData","processedUserData","data","UserForm","user","onSuccess","onCancel","availableRoles","formData","setFormData","useState","loading","setLoading","setError","isEdit","setIsEdit","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","loggedUser","getStoredUser","currentUser","setCurrentUser","isAdmin","setIsAdmin","useEffect","handleChange","e","name","value","fieldName","realFieldName","prev","validateForm","handleSubmit","updatedUser","createdUser","err","randomSuffix","jsxs","jsx","Fragment","role","label","ConfirmDialog","isOpen","title","message","confirmText","cancelText","onConfirm","type","styles","Pagination","currentPage","totalPages","onPageChange","pageRange","range","i","isFirstRender","UserTable","onEdit","onRefresh","forceLang","initialLang","getCurrentLanguage","currentLang","setCurrentLang","users","setUsers","userToDelete","setUserToDelete","showConfirmDialog","setShowConfirmDialog","setCurrentPage","setTotalPages","pageSize","setPageSize","totalItems","setTotalItems","loadUsers","usersData","totalPagesCount","totalItemsCount","directUrl","directResponse","directError","responseObj","possibleItems","t","handlePageChange","handlePageSizeChange","newPageSize","handleDeleteClick","handleConfirmDelete","handleCancelDelete","getRoleBadge","bgColor","UsersManagement","showForm","setShowForm","selectedUser","setSelectedUser","refreshTrigger","setRefreshTrigger","authStatus","setAuthStatus","authDebug","setAuthDebug","newLang","isAuth","isAuthenticated","hasAdminRole","debugInfo","handleAddUser","handleEditUser","handleFormSuccess","handleFormCancel","translateText","key","fallback","renderDebugPanel"],"mappings":"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"}