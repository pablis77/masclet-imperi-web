{"version":3,"file":"AnimalTable.Ci58NXSq.js","sources":["../../../src/components/animals/AnimalTable.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport animalService from '../../services/animalService';\nimport type { Animal, AnimalFilters, PaginatedResponse } from '../../services/animalService';\n// import { t } from '../../i18n/config';\n\n// Implementación directa de traducciones para solucionar problemas de importación\nconst translations = {\n  es: {\n    'animals.table.type': 'Tipo',\n    'animals.table.name': 'Nombre',\n    'animals.table.code': 'Código',\n    'animals.table.exploitation': 'Explotación',\n    'animals.table.status': 'Estado',\n    'animals.table.actions': 'Acciones',\n    'animals.table.view': 'Ver',\n    'animals.table.update': 'Actualizar',\n    'animals.table.active': 'Activo',\n    'animals.table.inactive': 'Baja',\n    'animals.male': 'Macho',\n    'animals.female': 'Hembra'\n  },\n  ca: {\n    'animals.table.type': 'Tipus',\n    'animals.table.name': 'Nom',\n    'animals.table.code': 'Codi',\n    'animals.table.exploitation': 'Explotació',\n    'animals.table.status': 'Estat',\n    'animals.table.actions': 'Accions',\n    'animals.table.view': 'Veure',\n    'animals.table.update': 'Actualitzar',\n    'animals.table.active': 'Actiu',\n    'animals.table.inactive': 'Baixa',\n    'animals.male': 'Mascle',\n    'animals.female': 'Femella'\n  }\n};\n\n// Función de traducción directa con diagnóstico\nfunction t(key: string, lang: string): string {\n  // Forzamos españól si no es un idioma válido\n  if (lang !== 'es' && lang !== 'ca') {\n    lang = 'es';\n  }\n  \n  try {\n    // Traducciones directas para cada idioma\n    const translationsForLang = translations[lang as 'es' | 'ca'];\n    \n    // Verificar si la clave existe en el diccionario de traducciones\n    if (key in translationsForLang) {\n      return translationsForLang[key];\n    } else {\n      console.warn(`[Translation] Clave no encontrada: ${key} para idioma: ${lang}`);\n      return key; // Devolvemos la clave si no hay traducción\n    }\n  } catch (error) {\n    console.error(`[Translation] Error al traducir ${key}:`, error);\n    return key;\n  }\n}\n\ninterface AnimalTableProps {\n  initialFilters?: AnimalFilters;\n  id?: string;\n  canEdit?: boolean;\n  canCreate?: boolean;\n}\n\nconst AnimalTable: React.FC<AnimalTableProps> = ({ initialFilters = {}, id, canEdit = false, canCreate = false }) => {\n  const [animals, setAnimals] = useState<Animal[]>([]);\n  const [loading, setLoading] = useState<boolean>(false); \n  const [error, setError] = useState<string | null>(null);\n  const [filters, setFilters] = useState<AnimalFilters>(initialFilters);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [totalAnimals, setTotalAnimals] = useState<number>(0);\n  const [useMockData, setUseMockData] = useState(false);\n  const [searchInfo, setSearchInfo] = useState<{\n    term: string;\n    count: number;\n    total: number;\n    usedMock: boolean;\n    reason?: string;\n  } | null>(null);\n  const tableRef = useRef<HTMLDivElement>(null);\n  const loadTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  \n  // Configuración para multilenguaje - Solución para SSR\n  const [currentLang, setCurrentLang] = useState('es'); // Valor por defecto para SSR\n  const [isClient, setIsClient] = useState(false);\n  \n  // Sistema de idioma simple v3 - Compatible con SSR\n  useEffect(() => {\n    // Marcamos que estamos en el cliente\n    setIsClient(true);\n    \n    // Ahora es seguro acceder al localStorage\n    const userLang = localStorage.getItem('userLanguage') || 'es';\n    console.log('[AnimalTable] Idioma detectado:', userLang);\n    setCurrentLang(userLang);\n  }, []); // Se ejecuta solo al montar el componente\n  \n  // Función auxiliar para formatear texto con variables\n  const formatText = (text: string, ...args: any[]) => {\n    return text.replace(/{(\\d+)}/g, (match, number) => {\n      return typeof args[number] !== 'undefined' ? args[number].toString() : match;\n    });\n  };\n\n  const loadAnimals = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Establecer un timeout para evitar carga indefinida\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n      }\n      \n      loadTimeoutRef.current = setTimeout(() => {\n        if (loading) {\n          setLoading(false);\n          setError('Tiempo de espera agotado. Por favor, intenta de nuevo.');\n        }\n      }, 10000); // 10 segundos de timeout\n      \n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Detectar si estamos en Render para usar manejo especial\n      const isRenderEnvironment = window.location.hostname.includes('render.com');\n      \n      let response;\n      try {\n        console.log(`Cargando animales - Página: ${currentPage}, Límite: 15`);\n        response = await animalService.getAnimals({\n          ...filters,\n          page: currentPage, // Usar la página actual seleccionada\n          limit: 15 // Mostrar 15 animales por página para mejor experiencia de usuario\n        });\n      } catch (error) {\n        console.error('Error al obtener animales desde API:', error);\n        // Si estamos en Render y hay un error, usar datos simulados\n        if (isRenderEnvironment) {\n          console.warn('Detectado entorno Render: usando respuesta alternativa');\n          response = { items: [], total: 0, page: 1, limit: 10, pages: 1 };\n        } else {\n          // En local, propagar el error normalmente\n          throw error;\n        }\n      }\n      \n      // SOLUCIÓN DEFENSIVA PARA RENDER\n      // Verificar y reparar la respuesta si es necesario\n      if (isRenderEnvironment || !response.items || !Array.isArray(response.items)) {\n        console.log('Aplicando corrección defensiva a la respuesta');\n        \n        // Asegurar que tenemos una estructura válida\n        if (!response || typeof response !== 'object') {\n          response = { items: [], total: 0, page: 1, limit: 10, pages: 1 };\n        }\n        \n        // Reparar response.items si no es un array\n        if (!response.items) {\n          response.items = [];\n        } else if (!Array.isArray(response.items)) {\n          console.warn('response.items no es un array, intentando reparar');\n          \n          // Intentar convertir a array si es un objeto\n          if (typeof response.items === 'object') {\n            const tempItems = [];\n            try {\n              // Intentar extraer valores del objeto\n              Object.values(response.items).forEach(item => {\n                if (item && typeof item === 'object') {\n                  tempItems.push(item);\n                }\n              });\n              response.items = tempItems.length > 0 ? tempItems : [];\n            } catch (e) {\n              console.error('Error al intentar reparar items:', e);\n              response.items = [];\n            }\n          } else {\n            response.items = [];\n          }\n        }\n      }\n      \n      // Ahora sabemos que response.items es seguro para usar\n      let orderedAnimals = [...response.items];\n      if (filters.search && filters.search.trim() !== '') {\n        const searchTerm = filters.search.trim().toLowerCase();\n        // Ordenar los resultados localmente por nombre coincidente\n        orderedAnimals.sort((a, b) => {\n          // Coincidencia exacta de nombre (máxima prioridad)\n          const aExactMatch = a.nom?.toLowerCase() === searchTerm;\n          const bExactMatch = b.nom?.toLowerCase() === searchTerm;\n          if (aExactMatch && !bExactMatch) return -1;\n          if (!aExactMatch && bExactMatch) return 1;\n          \n          // Coincide al inicio del nombre (segunda prioridad)\n          const aStartsWith = a.nom?.toLowerCase().startsWith(searchTerm);\n          const bStartsWith = b.nom?.toLowerCase().startsWith(searchTerm);\n          if (aStartsWith && !bStartsWith) return -1;\n          if (!aStartsWith && bStartsWith) return 1;\n          \n          // Coincide en cualquier parte del nombre (tercera prioridad)\n          const aContains = a.nom?.toLowerCase().includes(searchTerm);\n          const bContains = b.nom?.toLowerCase().includes(searchTerm);\n          if (aContains && !bContains) return -1;\n          if (!aContains && bContains) return 1;\n          \n          // Si los criterios son iguales, mantener el orden original\n          return 0;\n        });\n        \n        console.log('Animales ordenados localmente:', orderedAnimals.map(a => a.nom || 'Sin nombre'));\n      }\n      \n      setAnimals(orderedAnimals);\n      setTotalAnimals(response.total || 0);\n      setTotalPages(response.pages || 1);\n      \n      document.dispatchEvent(new CustomEvent('animals-loaded', {\n        detail: {\n          total: response.total || 0,\n          filtered: response.items?.length || 0,\n          page: response.page || 1,\n          pages: response.pages || 1\n        }\n      }));\n    } catch (err: any) {\n      console.error('Error cargando animales:', err);\n      \n      // Manejar específicamente el error de estado_t\n      if (err.code === 'DB_COLUMN_ERROR' || (err.message && err.message.includes('estado_t'))) {\n        setError('La columna \"estado_t\" no existe en la tabla de animales. Este es un problema conocido del backend que está siendo solucionado. Mientras tanto, se mostrarán datos simulados si están disponibles.');\n        setUseMockData(true);\n      } else {\n        setError(err.message || 'Error al cargar los animales');\n      }\n      \n      setAnimals([]);\n      setTotalAnimals(0);\n      setTotalPages(0);\n    } finally {\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n        loadTimeoutRef.current = null;\n      }\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadAnimals();\n    \n    return () => {\n      if (loadTimeoutRef.current) {\n        clearTimeout(loadTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Efecto para cargar animales cuando cambia la página o los filtros\n  useEffect(() => {\n    // Cargar animales siempre que cambie la página o los filtros\n    loadAnimals();\n  }, [filters, currentPage]);\n\n  useEffect(() => {\n    const handleApplyFilters = (event: CustomEvent<AnimalFilters>) => {\n      setFilters(event.detail);\n      setCurrentPage(1); \n      // Limpiar la información de búsqueda cuando se aplican nuevos filtros\n      if (!event.detail.search) {\n        setSearchInfo(null);\n      }\n    };\n\n    const handleRefreshAnimals = () => {\n      loadAnimals();\n      setSearchInfo(null); // Limpiar información de búsqueda al refrescar\n    };\n    \n    const handleSearchCompleted = (event: CustomEvent<{\n      term: string;\n      count: number;\n      total: number;\n      usedMock: boolean;\n      reason?: string;\n    }>) => {\n      setSearchInfo(event.detail);\n      setUseMockData(event.detail.usedMock);\n      \n      if (event.detail.usedMock) {\n        setError(`Nota: Mostrando resultados simulados debido a un ${event.detail.reason}. Se encontraron ${event.detail.count} coincidencias para \"${event.detail.term}\".`);\n      } else {\n        // Si la búsqueda fue exitosa, limpiar mensaje de error\n        setError(null);\n      }\n    };\n\n    document.addEventListener('refresh-animals', handleRefreshAnimals);\n    document.addEventListener('reload-animals', handleRefreshAnimals); // Añadir listener para el nuevo evento\n    document.addEventListener('search-completed', handleSearchCompleted as EventListener);\n\n    const rootElement = document.getElementById(id || '');\n    if (rootElement) {\n      rootElement.addEventListener('apply-filters', handleApplyFilters as EventListener);\n    } else {\n      document.addEventListener('filters-applied', handleApplyFilters as EventListener);\n    }\n\n    return () => {\n      document.removeEventListener('refresh-animals', handleRefreshAnimals);\n      document.removeEventListener('reload-animals', handleRefreshAnimals); // Eliminar listener al desmontar\n      document.removeEventListener('search-completed', handleSearchCompleted as EventListener);\n      if (rootElement) {\n        rootElement.removeEventListener('apply-filters', handleApplyFilters as EventListener);\n      } else {\n        document.removeEventListener('filters-applied', handleApplyFilters as EventListener);\n      }\n    };\n  }, [id]);\n\n  useEffect(() => {\n    const totalAnimalsContainer = document.getElementById('totalAnimalsContainer');\n    if (totalAnimalsContainer) {\n      if (loading) {\n        totalAnimalsContainer.innerHTML = `\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 flex items-center\">\n            <div class=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-primary mr-2\"></div>\n            Cargando...\n          </span>\n        `;\n      } else {\n        // Si hay información de búsqueda, mostrarla\n        if (searchInfo && searchInfo.term) {\n          const mockBadge = searchInfo.usedMock ? \n            '<span class=\"ml-1 px-1 py-0.5 text-xs bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-200 rounded\">DATOS SIMULADOS</span>' : \n            '';\n          \n          totalAnimalsContainer.innerHTML = `\n            <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n              Total: ${totalAnimals} animales | Búsqueda: \"${searchInfo.term}\" (${searchInfo.count} coincidencias) ${mockBadge}\n            </span>\n          `;\n        } else {\n          // Mensaje normal sin búsqueda\n          const mockBadge = useMockData ? \n            '<span class=\"ml-1 px-1 py-0.5 text-xs bg-yellow-200 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-200 rounded\">DATOS SIMULADOS</span>' : \n            '';\n          \n          totalAnimalsContainer.innerHTML = `\n            <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n              Total: ${totalAnimals} animales ${mockBadge}\n            </span>\n          `;\n        }\n      }\n    }\n  }, [totalAnimals, loading, searchInfo, useMockData]);\n\n  // Función para manejar el cambio de página\n  const handlePageChange = (page: number) => {\n    console.log(`Cambiando a página ${page}`);\n    \n    // No hacer nada si estamos en la misma página\n    if (page === currentPage) return;\n    \n    // Actualizar el estado de la página actual y forzar recarga\n    setCurrentPage(page);\n    \n    // Hacer scroll hacia arriba cuando cambiamos de página\n    if (tableRef.current) {\n      tableRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const handleAnimalDeactivation = async (animalId: number) => {\n    try {\n      await animalService.deleteAnimal(animalId);\n      loadAnimals();\n    } catch (err) {\n      console.error('Error al dar de baja al animal:', err);\n      alert('No se pudo dar de baja al animal. Por favor, inténtalo de nuevo.');\n    }\n  };\n\n  \n  // Implementación de controles de paginación\n  const renderPagination = () => {\n    // Solo mostrar controles si hay más de una página\n    if (totalPages <= 1) return null;\n    \n    return (\n      <div className=\"flex items-center justify-center mt-6 space-x-1\">\n        {/* Botón primera página */}\n        <button \n          onClick={() => handlePageChange(1)} \n          disabled={currentPage === 1}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === 1 \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Primera</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\n          </svg>\n        </button>\n        \n        {/* Botón anterior */}\n        <button \n          onClick={() => handlePageChange(currentPage - 1)} \n          disabled={currentPage === 1}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === 1 \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Anterior</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </button>\n        \n        {/* Números de página */}\n        {[...Array(totalPages)].map((_, index) => {\n          const pageNumber = index + 1;\n          // Mostrar solo páginas relevantes\n          if (\n            pageNumber === 1 ||\n            pageNumber === totalPages ||\n            (pageNumber >= currentPage - 1 && pageNumber <= currentPage + 1)\n          ) {\n            return (\n              <button\n                key={pageNumber}\n                onClick={() => handlePageChange(pageNumber)}\n                className={`inline-flex items-center px-3 py-1 border text-sm font-medium rounded-md \n                          ${pageNumber === currentPage \n                            ? 'bg-primary/10 dark:bg-primary/30 text-primary border-primary/20 dark:border-primary/40' \n                            : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n              >\n                {pageNumber}\n              </button>\n            );\n          } else if (\n            pageNumber === currentPage - 2 ||\n            pageNumber === currentPage + 2\n          ) {\n            return <span key={`ellipsis-${pageNumber}`} className=\"px-1 text-gray-500 dark:text-gray-400\">...</span>;\n          }\n          return null;\n        })}\n        \n        {/* Botón siguiente */}\n        <button \n          onClick={() => handlePageChange(currentPage + 1)} \n          disabled={currentPage === totalPages}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === totalPages \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Siguiente</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n          </svg>\n        </button>\n        \n        {/* Botón última página */}\n        <button \n          onClick={() => handlePageChange(totalPages)} \n          disabled={currentPage === totalPages}\n          className={`inline-flex items-center px-2 py-1 border rounded-md text-sm font-medium \n                    ${currentPage === totalPages \n                      ? 'bg-gray-100 dark:bg-gray-800 text-gray-400 dark:text-gray-600 border-gray-200 dark:border-gray-700 cursor-not-allowed' \n                      : 'bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}\n        >\n          <span className=\"sr-only\">Última</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\n          </svg>\n        </button>\n      </div>\n    );\n  };\n\n  const getAnimalIcon = (animal: Animal) => {\n    const iconClass = \"text-2xl\";\n    \n    if (animal.genere === 'M') {\n      return <span className={iconClass}>🐂</span>; // Toro\n    } else {\n      if (animal.alletar !== '0') {\n        return <span className={iconClass}>🐄</span>; // Vaca amamantando\n      } else {\n        return <span className={iconClass}>🐮</span>; // Vaca\n      }\n    }\n  };\n\n  const renderStatusBadge = (animal: Animal) => {\n    const statusClass = animal.estado === 'OK' ?\n      'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' :\n      'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${statusClass}`}>\n        {animal.estado === 'OK' ? t('animals.table.active', currentLang) : t('animals.table.inactive', currentLang)}\n      </span>\n    );\n  };\n\n  return (\n    <div ref={tableRef} className=\"w-full overflow-x-auto\">\n      {/* Mensaje de datos simulados */}\n      {useMockData && (\n        <div className=\"bg-yellow-50 dark:bg-yellow-900/30 border-l-4 border-yellow-400 p-4 mb-4\">\n          <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-yellow-700 dark:text-yellow-200\">\n                Mostrando datos simulados. No se pudo conectar con el servidor. Los animales mostrados son de ejemplo y no reflejan datos reales.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Mensaje de error */}\n      {error && (\n        <div className=\"bg-red-50 dark:bg-red-900/30 border-l-4 border-red-400 p-4 mb-4\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm text-red-700 dark:text-red-200\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {loading ? (\n        <div className=\"flex justify-center items-center p-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary\"></div>\n          <span className=\"ml-3 text-gray-600 dark:text-gray-400\">Cargando animales...</span>\n        </div>\n      ) : animals.length === 0 ? (\n        <div className=\"text-center py-8 bg-white dark:bg-gray-800 rounded-lg shadow p-6 border border-gray-100 dark:border-gray-700\">\n          <p className=\"text-gray-600 dark:text-gray-300 text-lg\">No se encontraron animales</p>\n          <p className=\"text-gray-500 dark:text-gray-400 mt-2\">Intenta con otros filtros o importa datos de prueba</p>\n          <button \n            onClick={loadAnimals}\n            className=\"mt-4 bg-primary hover:bg-primary/80 text-white px-4 py-2 rounded-md transition-colors\"\n          >\n            Reintentar\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"overflow-x-auto bg-white dark:bg-gray-800 rounded-lg shadow border border-gray-100 dark:border-gray-700\">\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-600\">\n              <thead className=\"bg-gray-100 dark:bg-gray-800\">\n                <tr>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Tipus' : 'Tipo'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Nom' : 'Nombre'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Codi' : 'Código'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Explotació' : 'Explotación'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Estat' : 'Estado'}\n                  </th>\n                  <th scope=\"col\" className=\"px-4 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-200 uppercase tracking-wider\">\n                    {currentLang === 'ca' ? 'Accions' : 'Acciones'}\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-600\">\n                {animals.map((animal) => (\n                  <tr key={animal.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"px-4 py-4 whitespace-nowrap text-center\">\n                      <a href={`/animals/${animal.id}`} className=\"cursor-pointer hover:scale-110 transition-transform inline-block\" title={animal.alletar === '0' ? 'No amamantando' : animal.alletar === '1' ? 'Amamantando 1 ternero' : 'Amamantando 2 terneros'}>\n                        {getAnimalIcon(animal)}\n                      </a>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-gray-200\">\n                        {animal.nom}\n                      </div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {animal.genere === 'M' ? t('animals.male', currentLang) : t('animals.female', currentLang)}\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 dark:text-gray-200\">\n                        {animal.cod || '-'}\n                      </div>\n                      {animal.num_serie && (\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          Serie: {animal.num_serie}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0\">\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {animal.explotacio}\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap\">\n                      {renderStatusBadge(animal)}\n                    </td>\n                    <td className=\"px-4 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end space-x-2\">\n                        <a \n                          href={`/animals/${animal.id}`}\n                          className=\"inline-flex items-center px-2 py-1 bg-primary text-white rounded hover:bg-primary/80\"\n                        >\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" />\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                          </svg>\n                          {t('animals.table.view', currentLang)}\n                        </a>\n                        {canEdit && animal.estado === 'OK' && (\n                          <a \n                            href={`/animals/update/${animal.id}`}\n                            className=\"inline-flex items-center px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                          >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                            </svg>\n                            {t('animals.table.update', currentLang)}\n                          </a>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          {renderPagination()}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default AnimalTable;\n"],"names":["translations","t","key","lang","translationsForLang","error","AnimalTable","initialFilters","id","canEdit","canCreate","animals","setAnimals","useState","loading","setLoading","setError","filters","setFilters","currentPage","setCurrentPage","totalPages","setTotalPages","totalAnimals","setTotalAnimals","useMockData","setUseMockData","searchInfo","setSearchInfo","tableRef","useRef","loadTimeoutRef","currentLang","setCurrentLang","isClient","setIsClient","useEffect","userLang","loadAnimals","resolve","isRenderEnvironment","response","animalService","tempItems","item","e","orderedAnimals","searchTerm","a","b","aExactMatch","bExactMatch","aStartsWith","bStartsWith","aContains","bContains","err","handleApplyFilters","event","handleRefreshAnimals","handleSearchCompleted","rootElement","totalAnimalsContainer","mockBadge","handlePageChange","page","renderPagination","jsxs","jsx","_","index","pageNumber","getAnimalIcon","animal","iconClass","renderStatusBadge","statusClass","Fragment"],"mappings":"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"}