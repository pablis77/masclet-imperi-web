import { atom } from "/node_modules/.vite/deps/nanostores.js?v=5e89932e";
export const messagesStore = atom([]);
let messageCounter = 0;
export function addMessage(type, title, content, duration = 5e3) {
  const id = `msg-${Date.now()}-${messageCounter++}`;
  const message = {
    id,
    type,
    title,
    content,
    duration,
    dismissible: true
  };
  messagesStore.set([...messagesStore.get(), message]);
  if (duration > 0) {
    setTimeout(() => {
      removeMessage(id);
    }, duration);
  }
  return id;
}
export function removeMessage(id) {
  const currentMessages = messagesStore.get();
  messagesStore.set(currentMessages.filter((message) => message.id !== id));
}
export function clearMessages() {
  messagesStore.set([]);
}
export const showSuccess = (title, content, duration) => addMessage("success", title, content, duration);
export const showError = (title, content, duration) => addMessage("error", title, content, duration);
export const showInfo = (title, content, duration) => addMessage("info", title, content, duration);
export const showWarning = (title, content, duration) => addMessage("warning", title, content, duration);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VTdG9yZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdG9tIH0gZnJvbSAnbmFub3N0b3Jlcyc7XG5pbXBvcnQgdHlwZSB7IE1lc3NhZ2UsIE1lc3NhZ2VUeXBlIH0gZnJvbSAnLi4vdHlwZXMvdHlwZXMnO1xuXG4vLyBTdG9yZSBwYXJhIG1lbnNhamVzIHkgbm90aWZpY2FjaW9uZXNcbmV4cG9ydCBjb25zdCBtZXNzYWdlc1N0b3JlID0gYXRvbTxNZXNzYWdlW10+KFtdKTtcblxuLy8gQ29udGFkb3IgcGFyYSBnZW5lcmFyIElEcyDDum5pY29zXG5sZXQgbWVzc2FnZUNvdW50ZXIgPSAwO1xuXG4vKipcbiAqIEHDsWFkZSB1biBtZW5zYWplIGEgbGEgdGllbmRhXG4gKiBAcGFyYW0gdHlwZSAtIFRpcG8gZGUgbWVuc2FqZVxuICogQHBhcmFtIHRpdGxlIC0gVMOtdHVsbyBkZWwgbWVuc2FqZVxuICogQHBhcmFtIGNvbnRlbnQgLSBDb250ZW5pZG8gZGVsIG1lbnNhamVcbiAqIEBwYXJhbSBkdXJhdGlvbiAtIER1cmFjacOzbiBlbiBtaWxpc2VndW5kb3MgKHBvciBkZWZlY3RvIDUwMDBtcywgMCBwYXJhIG5vIGF1dG8tZWxpbWluYXIpXG4gKiBAcmV0dXJucyBJRCBkZWwgbWVuc2FqZVxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkTWVzc2FnZShcbiAgdHlwZTogTWVzc2FnZVR5cGUsXG4gIHRpdGxlOiBzdHJpbmcsXG4gIGNvbnRlbnQ6IHN0cmluZyxcbiAgZHVyYXRpb246IG51bWJlciA9IDUwMDBcbik6IHN0cmluZyB7XG4gIGNvbnN0IGlkID0gYG1zZy0ke0RhdGUubm93KCl9LSR7bWVzc2FnZUNvdW50ZXIrK31gO1xuICBjb25zdCBtZXNzYWdlOiBNZXNzYWdlID0ge1xuICAgIGlkLFxuICAgIHR5cGUsXG4gICAgdGl0bGUsXG4gICAgY29udGVudCxcbiAgICBkdXJhdGlvbixcbiAgICBkaXNtaXNzaWJsZTogdHJ1ZVxuICB9O1xuICBcbiAgLy8gQcOxYWRpciBtZW5zYWplIGEgbGEgdGllbmRhXG4gIG1lc3NhZ2VzU3RvcmUuc2V0KFsuLi5tZXNzYWdlc1N0b3JlLmdldCgpLCBtZXNzYWdlXSk7XG4gIFxuICAvLyBDb25maWd1cmFyIGF1dG8tZWxpbWluYWNpw7NuIHNpIGxhIGR1cmFjacOzbiBlcyBtYXlvciBxdWUgMFxuICBpZiAoZHVyYXRpb24gPiAwKSB7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICByZW1vdmVNZXNzYWdlKGlkKTtcbiAgICB9LCBkdXJhdGlvbik7XG4gIH1cbiAgXG4gIHJldHVybiBpZDtcbn1cblxuLyoqXG4gKiBFbGltaW5hIHVuIG1lbnNhamUgZGUgbGEgdGllbmRhXG4gKiBAcGFyYW0gaWQgLSBJRCBkZWwgbWVuc2FqZSBhIGVsaW1pbmFyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVNZXNzYWdlKGlkOiBzdHJpbmcpOiB2b2lkIHtcbiAgY29uc3QgY3VycmVudE1lc3NhZ2VzID0gbWVzc2FnZXNTdG9yZS5nZXQoKTtcbiAgbWVzc2FnZXNTdG9yZS5zZXQoY3VycmVudE1lc3NhZ2VzLmZpbHRlcihtZXNzYWdlID0+IG1lc3NhZ2UuaWQgIT09IGlkKSk7XG59XG5cbi8qKlxuICogRWxpbWluYSB0b2RvcyBsb3MgbWVuc2FqZXMgZGUgbGEgdGllbmRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhck1lc3NhZ2VzKCk6IHZvaWQge1xuICBtZXNzYWdlc1N0b3JlLnNldChbXSk7XG59XG5cblxuLy8gRnVuY2lvbmVzIGRlIGNvbnZlbmllbmNpYSBwYXJhIGRpZmVyZW50ZXMgdGlwb3MgZGUgbWVuc2FqZXNcbmV4cG9ydCBjb25zdCBzaG93U3VjY2VzcyA9ICh0aXRsZTogc3RyaW5nLCBjb250ZW50OiBzdHJpbmcsIGR1cmF0aW9uPzogbnVtYmVyKSA9PiBcbiAgYWRkTWVzc2FnZSgnc3VjY2VzcycsIHRpdGxlLCBjb250ZW50LCBkdXJhdGlvbik7XG5cbmV4cG9ydCBjb25zdCBzaG93RXJyb3IgPSAodGl0bGU6IHN0cmluZywgY29udGVudDogc3RyaW5nLCBkdXJhdGlvbj86IG51bWJlcikgPT4gXG4gIGFkZE1lc3NhZ2UoJ2Vycm9yJywgdGl0bGUsIGNvbnRlbnQsIGR1cmF0aW9uKTtcblxuZXhwb3J0IGNvbnN0IHNob3dJbmZvID0gKHRpdGxlOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZywgZHVyYXRpb24/OiBudW1iZXIpID0+IFxuICBhZGRNZXNzYWdlKCdpbmZvJywgdGl0bGUsIGNvbnRlbnQsIGR1cmF0aW9uKTtcblxuZXhwb3J0IGNvbnN0IHNob3dXYXJuaW5nID0gKHRpdGxlOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZywgZHVyYXRpb24/OiBudW1iZXIpID0+IFxuICBhZGRNZXNzYWdlKCd3YXJuaW5nJywgdGl0bGUsIGNvbnRlbnQsIGR1cmF0aW9uKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBUyxZQUFZO0FBSWQsYUFBTSxnQkFBZ0IsS0FBZ0IsQ0FBQyxDQUFDO0FBRy9DLElBQUksaUJBQWlCO0FBVWQsZ0JBQVMsV0FDZCxNQUNBLE9BQ0EsU0FDQSxXQUFtQixLQUNYO0FBQ1IsUUFBTSxLQUFLLE9BQU8sS0FBSyxJQUFJLENBQUMsSUFBSSxnQkFBZ0I7QUFDaEQsUUFBTSxVQUFtQjtBQUFBLElBQ3ZCO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0EsYUFBYTtBQUFBLEVBQ2Y7QUFHQSxnQkFBYyxJQUFJLENBQUMsR0FBRyxjQUFjLElBQUksR0FBRyxPQUFPLENBQUM7QUFHbkQsTUFBSSxXQUFXLEdBQUc7QUFDaEIsZUFBVyxNQUFNO0FBQ2Ysb0JBQWMsRUFBRTtBQUFBLElBQ2xCLEdBQUcsUUFBUTtBQUFBLEVBQ2I7QUFFQSxTQUFPO0FBQ1Q7QUFNTyxnQkFBUyxjQUFjLElBQWtCO0FBQzlDLFFBQU0sa0JBQWtCLGNBQWMsSUFBSTtBQUMxQyxnQkFBYyxJQUFJLGdCQUFnQixPQUFPLGFBQVcsUUFBUSxPQUFPLEVBQUUsQ0FBQztBQUN4RTtBQUtPLGdCQUFTLGdCQUFzQjtBQUNwQyxnQkFBYyxJQUFJLENBQUMsQ0FBQztBQUN0QjtBQUlPLGFBQU0sY0FBYyxDQUFDLE9BQWUsU0FBaUIsYUFDMUQsV0FBVyxXQUFXLE9BQU8sU0FBUyxRQUFRO0FBRXpDLGFBQU0sWUFBWSxDQUFDLE9BQWUsU0FBaUIsYUFDeEQsV0FBVyxTQUFTLE9BQU8sU0FBUyxRQUFRO0FBRXZDLGFBQU0sV0FBVyxDQUFDLE9BQWUsU0FBaUIsYUFDdkQsV0FBVyxRQUFRLE9BQU8sU0FBUyxRQUFRO0FBRXRDLGFBQU0sY0FBYyxDQUFDLE9BQWUsU0FBaUIsYUFDMUQsV0FBVyxXQUFXLE9BQU8sU0FBUyxRQUFROyIsIm5hbWVzIjpbXX0=