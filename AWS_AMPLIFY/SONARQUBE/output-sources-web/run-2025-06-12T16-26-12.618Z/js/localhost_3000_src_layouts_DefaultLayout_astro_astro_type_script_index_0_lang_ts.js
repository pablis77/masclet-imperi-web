import { isAuthenticated, getCurrentUser } from "/src/services/authService.js";
document.addEventListener("DOMContentLoaded", () => {
  if (window.location.pathname !== "/login" && !isAuthenticated()) {
    window.location.href = `/login?redirect=${encodeURIComponent(window.location.pathname)}`;
  }
});

//# sourceMappingURL=data:application/json;base64,