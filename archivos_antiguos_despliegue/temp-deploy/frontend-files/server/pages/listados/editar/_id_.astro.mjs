import { c as createComponent, a as createAstro, r as renderComponent, b as renderTemplate, m as maybeRenderHead, d as addAttribute } from '../../../chunks/vendor_OWM_DaNv.mjs';
export { e as renderers } from '../../../chunks/vendor_OWM_DaNv.mjs';
import 'kleur/colors';
import { $ as $$MainLayout } from '../../../chunks/MainLayout_DsgB9yc8.mjs';
import { a as getCurrentLanguage } from '../../../chunks/Footer_BuyfVHI3.mjs';

const $$Astro = createAstro();
const $$id = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$id;
  const currentLang = getCurrentLanguage();
  const { id } = Astro2.params;
  Astro2.props.currentPath = `/listados/edit/[id]`;
  const titulo = currentLang === "es" ? "Editar Listado" : "Editar Llistat";
  const descripcion = currentLang === "es" ? "Modifica los detalles del listado y los animales incluidos." : "Modifica els detalls del llistat i els animals inclosos.";
  const nombreLabel = currentLang === "es" ? "Nombre del listado" : "Nom del llistat";
  const nombrePlaceholder = currentLang === "es" ? "Ej: Vacunaci\xF3n octubre 2025" : "Ex: Vacunaci\xF3 octubre 2025";
  const descripcionLabel = currentLang === "es" ? "Descripci\xF3n" : "Descripci\xF3";
  const descripcionPlaceholder = currentLang === "es" ? "Ej: Animales para vacunaci\xF3n del 15 de octubre" : "Ex: Animals per a vacunaci\xF3 del 15 d'octubre";
  const categoriaLabel = currentLang === "es" ? "Categor\xEDa" : "Categoria";
  const categoriaPlaceholder = currentLang === "es" ? "Seleccionar categor\xEDa" : "Seleccionar categoria";
  const categoriaVacunacion = currentLang === "es" ? "Vacunaci\xF3n" : "Vacunaci\xF3";
  const categoriaTratamiento = currentLang === "es" ? "Tratamiento" : "Tractament";
  const categoriaTransporte = currentLang === "es" ? "Transporte" : "Transport";
  const categoriaVenta = currentLang === "es" ? "Venta" : "Venda";
  const categoriaOtro = currentLang === "es" ? "Otro" : "Altre";
  const animalesLabel = currentLang === "es" ? "Selecci\xF3n de Animales" : "Selecci\xF3 d'Animals";
  const buscarAnimales = currentLang === "es" ? "Buscar animales..." : "Cercar animals...";
  const noAnimales = currentLang === "es" ? "No hay animales disponibles." : "No hi ha animals disponibles.";
  const seleccionados = currentLang === "es" ? "Seleccionados:" : "Seleccionats:";
  const seleccionarTodos = currentLang === "es" ? "Seleccionar todos" : "Seleccionar tots";
  const deseleccionarTodos = currentLang === "es" ? "Deseleccionar todos" : "Deseleccionar tots";
  const guardar = currentLang === "es" ? "Guardar Cambios" : "Guardar Canvis";
  const guardando = currentLang === "es" ? "Guardando..." : "Guardant...";
  const cancelar = currentLang === "es" ? "Cancelar" : "Cancel\xB7lar";
  const exito = currentLang === "es" ? "Listado Actualizado" : "Llistat Actualitzat";
  const mensajeExito = currentLang === "es" ? "El listado ha sido actualizado correctamente." : "El llistat ha estat actualitzat correctament.";
  const error = currentLang === "es" ? "Error al actualizar el listado." : "Error al actualitzar el llistat.";
  const requerido = currentLang === "es" ? "Este campo es obligatorio." : "Aquest camp \xE9s obligatori.";
  const volver = currentLang === "es" ? "Volver a Listados" : "Tornar a Llistats";
  const cargando = currentLang === "es" ? "Cargando datos del listado..." : "Carregant dades del llistat...";
  return renderTemplate`${renderComponent($$result, "MainLayout", $$MainLayout, { "title": titulo }, { "default": async ($$result2) => renderTemplate` ${maybeRenderHead()}<div class="px-4 py-6 sm:px-6 lg:px-8"> <div class="mb-6"> <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">${titulo}</h1> <p class="mt-2 text-sm text-gray-700">${descripcion}</p> </div> <div class="bg-white dark:bg-gray-800 overflow-hidden shadow rounded-lg"> <div class="p-4"> <!-- Mensaje de carga inicial --> <div id="loading-message" class="py-8 flex justify-center"> <div class="flex flex-col items-center"> <div class="animate-spin rounded-full h-10 w-10 border-b-2 border-primary"></div> <p class="mt-2 text-sm text-gray-500">${cargando}</p> </div> </div> <!-- Formulario para editar listado (inicialmente oculto) --> <form id="listado-form" class="space-y-6 hidden"> <!-- Información básica del listado --> <div class="grid grid-cols-1 gap-6 md:grid-cols-2"> <!-- Nombre del listado --> <div> <label for="listado-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300"> ${nombreLabel} <span class="text-red-500">*</span> </label> <div class="mt-1"> <input type="text" name="name" id="listado-name" class="shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"${addAttribute(nombrePlaceholder, "placeholder")} required> </div> <p id="name-error" class="mt-1 text-sm text-red-600 hidden">${requerido}</p> </div> <!-- Categoría --> <div> <label for="listado-category" class="block text-sm font-medium text-gray-700 dark:text-gray-300"> ${categoriaLabel} </label> <div class="mt-1"> <select id="listado-category" name="category" class="shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"> <option value="">${categoriaPlaceholder}</option> <option value="vaccination">${categoriaVacunacion}</option> <option value="treatment">${categoriaTratamiento}</option> <option value="transport">${categoriaTransporte}</option> <option value="sale">${categoriaVenta}</option> <option value="other">${categoriaOtro}</option> </select> </div> <p id="category-error" class="mt-1 text-sm text-red-600 hidden">${requerido}</p> </div> </div> <!-- Descripción --> <div> <label for="listado-description" class="block text-sm font-medium text-gray-700 dark:text-gray-300"> ${descripcionLabel} </label> <div class="mt-1"> <textarea id="listado-description" name="description" rows="3" class="shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"${addAttribute(descripcionPlaceholder, "placeholder")}></textarea> </div> </div> <!-- Selección de animales --> <div> <h3 class="text-lg font-medium text-gray-900 mb-3">${animalesLabel}</h3> <!-- Estado de carga de animales --> <div id="loading-animals" class="py-8 flex justify-center"> <div class="flex flex-col items-center"> <div class="animate-spin rounded-full h-10 w-10 border-b-2 border-primary"></div> <p class="mt-2 text-sm text-gray-500">${cargando}</p> </div> </div> <!-- Mensaje si no hay animales --> <div id="no-animals" class="py-8 text-center hidden"> <p class="text-gray-500">${noAnimales}</p> </div> <!-- Contenedor de animales --> <div id="animals-container" class="hidden"> <!-- Barra de búsqueda y filtros --> <div class="mb-4 flex flex-col sm:flex-row justify-between items-start sm:items-center"> <div class="w-full sm:w-64 mb-3 sm:mb-0"> <input type="text" id="animal-filter"${addAttribute(buscarAnimales, "placeholder")} class="shadow-sm focus:ring-primary focus:border-primary block w-full sm:text-sm border-gray-300 rounded-md dark:bg-gray-700 dark:border-gray-600 dark:text-white"> </div> <div class="flex items-center space-x-4"> <button type="button" id="select-all" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-600"> ${seleccionarTodos} </button> <button type="button" id="unselect-all" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary dark:bg-gray-700 dark:text-white dark:border-gray-600 dark:hover:bg-gray-600"> ${deseleccionarTodos} </button> <span class="text-sm text-gray-500"> ${seleccionados} <span id="selected-count">0</span> </span> </div> </div> <!-- Lista de animales --> <div id="animals-list" class="border border-gray-200 rounded-md dark:border-gray-700 max-h-96 overflow-y-auto"> <!-- Los animales se cargarán con JavaScript --> </div> <p id="animals-error" class="mt-1 text-sm text-red-600 hidden">Selecciona al menos un animal.</p> </div> </div> <!-- Mensaje de éxito --> <div id="success-message" class="rounded-md bg-green-50 p-4 hidden"> <div class="flex"> <div class="flex-shrink-0"> <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"> <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path> </svg> </div> <div class="ml-3"> <h3 class="text-sm font-medium text-green-800">${exito}</h3> <div class="mt-2 text-sm text-green-700"> <p>${mensajeExito}</p> </div> <div class="mt-4"> <div class="-mx-2 -my-1.5 flex"> <a href="/listados" class="px-2 py-1.5 rounded-md text-sm font-medium text-green-800 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"> ${volver} </a> </div> </div> </div> </div> </div> <!-- Mensaje de error --> <div id="error-message" class="rounded-md bg-red-50 p-4 hidden"> <div class="flex"> <div class="flex-shrink-0"> <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"> <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path> </svg> </div> <div class="ml-3"> <h3 class="text-sm font-medium text-red-800">${error}</h3> <div class="mt-2 text-sm text-red-700" id="error-details"> <!-- Detalles del error se mostrarán aquí --> </div> </div> </div> </div> <!-- Botones de acción --> <div class="flex justify-end space-x-3"> <a href="/listados" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"> ${cancelar} </a> <button type="submit" id="save-button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"> ${guardar} </button> <button type="button" id="saving-button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary hidden" disabled> <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"> <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle> <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path> </svg> ${guardando} </button> </div> </form> </div> </div> </div> ` })} `;
}, "C:/Proyectos/claude/masclet-imperi-web/frontend/src/pages/listados/editar/[id].astro", void 0);

const $$file = "C:/Proyectos/claude/masclet-imperi-web/frontend/src/pages/listados/editar/[id].astro";
const $$url = "/listados/editar/[id]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$id,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
